# This file contains the questions for the quiz. 
# IMPORTANT: TRY TO BUILD THE SETS OF QUESTIONS, SUCH THAT THE QUESTIONS ARE ORDERED FROM BASIC TO ADVANCED LEVEL


mechanics_applied = [
	["The 6 Failure Mechanisms: \n\n(1) ...: \n    -Tension: Hooke: u=F*L/(E*A)\n    -Pressure: σ=F/A \n(2) Bending: \n    -E=Elasticity, I=Moment of inertia (mm^4), W=Cross section area = I/z \n    -w(x)=displacement,w'(x)=rotation, w''(x)=-M /EI, w'''(x)=shear force, w''''(x)=q/(E*I) => q=EI*(d^4 w/ dx^4)  \n(3) ... (afschuiving): \n    -G=shear modulus= E/(2·(1+v)), v=Poisson's ratio \n    -q=-GA*(d^2 w/ d x^2)\n    -τ=V*E*d*S/(I*t), with S=static moment of part for which shear stress is determined irt the median axis of the profile.  \n(4) Buckling (knik): \n    -Euler: F_b= π^2*E*I/L_k^2 \n    -If systems help each other: add F_b's; else: add (1/F_b)'s. \n(5) Tipping (kip): \n    -Bending of a loaded beam in its weak direction + influences of rotations.  \n(6)... (wringing): \n    -Saint Venant torsion = uniform torsion: J(=I.t=I.w)=torsion constant, G*I.w=torsion stiffness=T*L/ϕ;    torsion stress=τ=T*t.flens/I.t (in H-beams) \n    -Warping torsion=non-uniform torsion (for thin open profiles) \n    -Venant + Warping=Vlasov theory. \n\nFill in the dots (3x).","extension shear torsion"],
	["The 6 Failure Mechanisms: \n\n(1) Extension: \n    -Tension: Hooke: u=F*L/(E*A)\n    -Pressure: σ=F/A \n(2) ...: \n    -E=Elasticity, I=Moment of inertia (mm^4), W=Cross section area = I/z \n    -w(x)=displacement,w'(x)=rotation, w''(x)=-M/EI, w'''(x)=shear force, w''''(x)=q/(E*I) => q=EI*(d^4 w/ dx^4)  \n(3) Shear (afschuiving): \n    -G=shear modulus= E/(2·(1+v)), v=Poisson's ratio \n    -q=-GA*(d^2 w/ d x^2)\n    -τ=V*E*d*S/(I*t), with S=static moment of part for which shear stress is determined irt the median axis of the profile.  \n(4) ... (knik): \n    -Euler: F_b= π^2*E*I/L_k^2 \n    -If systems help each other: add F_b's; else: add (1/F_b)'s. \n(5) ... (kip): \n    -Bending of a loaded beam in its weak direction + influences of rotations.  \n(6)Torsion (wringing): \n    -Saint Venant torsion = uniform torsion: J(=I.t=I.w)=torsion constant, G*I.w=torsion stiffness=T*L/ϕ;    torsion stress=τ=T*t.flens/I.t (in H-beams) \n    -Warping torsion=non-uniform torsion (for thin open profiles) \n    -Venant + Warping=Vlasov theory. \n\nFill in the dots (3x).","bending buckling tipping"],
	["The 6 Failure Mechanisms: \n\n(1) Extension: \n    -Tension: Hooke: u=F*.../(E*A)\n    -Pressure: σ=F/A \n(2) Bending: \n    -E=Elasticity, I=Moment of inertia (mm^4), W=Cross section area = I/z \n    -w(x)=displacement,w'(x)=rotation, w''(x)=-M/EI, w'''(x)=shear force, w''''(x)=q/(E*I) => q=EI*(d^4 w/ dx^4)  \n(3) Shear (afschuiving): \n    -G=shear ...= E/(2·(1+v)), v=Poisson's ratio \n    -q=-GA*(d^2 w/ d x^2)\n    -τ=V*E*d*S/(I*t), with S=static moment of part for which shear stress is determined irt the median axis of the profile.  \n(4) Buckling (knik): \n    -Euler: F_b= π^2*E*I/L_k^2 \n    -If systems help each other: add F_b's; else: add (1/F_b)'s. \n(5) Tipping (kip): \n    -Bending of a loaded beam in its weak direction + influences of rotations.  \n(6)Torsion (wringing): \n    -Saint Venant torsion = u.. torsion: J(=I.t=I.w)=torsion constant, G*I.w=torsion stiffness=T*L/ϕ;    torsion stress=τ=T*t.flens/I.t (in H-beams) \n    -Warping torsion=non-uniform torsion (for thin open profiles) \n    -Venant + Warping=Vlasov theory. \n\nFill in the dots (3x).","L modulus uniform"],	
	["The 6 Failure Mechanisms: \n\n(1) Extension: \n    -Tension: Hooke: u=F*L/(E*A)\n    -Pressure: σ=F/A \n(2) Bending: \n    -E=Elasticity, I=Moment of inertia (mm^4), W=Cross section area = I/z \n    -w(x)=displacement,w'(x)=..., w''(x)=-M/EI, w'''(x)=shear force, w''''(x)=q/(E*I) => q=EI*(d^4 w/ dx^4)  \n(3) Shear (afschuiving): \n    -G=shear modulus= E/(2·(1+v)), v=Poisson's ratio \n    -q=-GA*(d^2 w/ d x^2)\n    -τ=V*E*d*S/(I*t), with S=static moment of part for which shear stress is determined irt the median axis of the profile.  \n(4) Buckling (knik): \n    -E..: F_b= π^2*E*I/L_k^2 \n    -If systems help each other: add F_b's; else: add (1/F_b)'s. \n(5) Tipping (kip): \n    -Bending of a loaded beam in its w.. direction + influences of rotations.  \n(6)Torsion (wringing): \n    -Saint Venant torsion = uniform torsion: J(=I.t=I.w)=torsion constant, G*I.w=torsion stiffness=T*L/ϕ;    torsion stress=τ=T*t.flens/I.t (in H-beams) \n    -Warping torsion=non-uniform torsion (for thin open profiles) \n    -Venant + Warping=Vlasov theory. \n\nFill in the dots (3x).","rotation Euler weak"],
	["The 6 Failure Mechanisms: \n\n(1) Extension: \n    -Tension: Hooke: u=F*L/(E*A)\n    -Pressure: σ=F/... \n(2) Bending: \n    -E=Elasticity, I=Moment of inertia (mm^4), W=Cross section area = I/z \n    -w(x)=displacement,w'(x)=rotation, w''(x)=-M/EI, w'''(x)=shear force, w''''(x)=q/(E*I) => q=EI*(d^4 w/ dx^4)  \n(3) Shear (afschuiving): \n    -G=shear modulus= .../(2·(1+v)), v=Poisson's ratio \n    -q=-GA*(d^2 w/ d x^2)\n    -τ=V*E*d*S/(I*t), with S=static moment of part for which shear stress is determined irt the median axis of the profile.  \n(4) Buckling (knik): \n    -Euler: F_b= π^2*E*I/L_k^2 \n    -If systems help each other: add F_b's; else: add (1/F_b)'s. \n(5) Tipping (kip): \n    -Bending of a loaded beam in its weak direction + influences of rotations.  \n(6)Torsion (wringing): \n    -Saint Venant torsion = uniform torsion: ...(=I.t=I.w)=torsion constant, G*I.w=torsion stiffness=T*L/ϕ;    torsion stress=τ=T*t.flens/I.t (in H-beams) \n    -Warping torsion=non-uniform torsion (for thin open profiles) \n    -Venant + Warping=Vlasov theory. \n\nFill in the dots (3x).","A E J"],
	["The 6 Failure Mechanisms: \n\n(1) Extension: \n    -Tension: Hooke: u=F*L/(E*A)\n    -Pressure: σ=F/A \n(2) Bending: \n    -E=Elasticity, I=Moment of inertia (mm^4), W=Cross section area = I/z \n    -w(x)=displacement,w'(x)=rotation, w''(x)=-.../EI, w'''(x)=shear force, w''''(x)=q/(E*I) => q=EI*(d^4 w/ dx^4)  \n(3) Shear (afschuiving): \n    -G=shear modulus= E/(2·(1+v)), v=Poisson's ratio \n    -q=-GA*(d^2 w/ d x^2)\n    -τ=V*E*d*S/(I*t), with S=static moment of part for which shear stress is determined irt the median axis of the profile.  \n(4) Buckling (knik): \n    -Euler: ..._b= π^2*E*I/L_k^2 \n    -If systems help each other: add F_b's; else: add (1/F_b)'s. \n(5) Tipping (kip): \n    -Bending of a loaded beam in its weak direction + influences of r.. .  \n(6)Torsion (wringing): \n    -Saint Venant torsion = uniform torsion: J(=I.t=I.w)=torsion constant, G*I.w=torsion stiffness=T*L/ϕ;    torsion stress=τ=T*t.flens/I.t (in H-beams) \n    -Warping torsion=non-uniform torsion (for thin open profiles) \n    -Venant + Warping=Vlasov theory. \n\nFill in the dots (3x).","M F rotations"],
	["The 6 Failure Mechanisms: \n\n(1) Extension: \n    -Tension: Hooke: u=F*L/(E*...)\n    -Pressure: σ=F/A \n(2) Bending: \n    -E=Elasticity, I=Moment of inertia (mm^4), W=Cross section area = I/z \n    -w(x)=displacement,w'(x)=rotation, w''(x)=-M /EI, w'''(x)=shear force, w''''(x)=q/(E*I) => q=EI*(d^4 w/ dx^4)  \n(3) Shear (afschuiving): \n    -G=shear modulus= E/(2·(1+v)), v=...'s ratio \n    -q=-GA*(d^2 w/ d x^2)\n    -τ=V*E*d*S/(I*t), with S=static moment of part for which shear stress is determined irt the median axis of the profile.  \n(4) Buckling (knik): \n    -Euler: F_b= π^2*E*I/L_k^2 \n    -If systems help each other: add F_b's; else: add (1/F_b)'s. \n(5) Tipping (kip): \n    -Bending of a loaded beam in its weak direction + influences of rotations.  \n(6)Torsion (wringing): \n    -Saint Venant torsion = uniform torsion: J(=I.t=I.w)=torsion constant, G*I.w=torsion s..=T*L/ϕ;    torsion stress=τ=T*t.flens/I.t (in H-beams) \n    -Warping torsion=non-uniform torsion (for thin open profiles) \n    -Venant + Warping=Vlasov theory. \n\nFill in the dots (3x).","A poisson stiffness"],
	["The 6 Failure Mechanisms: \n\n(1) Extension: \n    -Tension: Hooke: ...=F*L/(E*A)\n    -Pressure: σ=F/A \n(2) Bending: \n    -E=Elasticity, I=Moment of inertia (mm^4), W=Cross section area = I/z \n    -w(x)=displacement,w'(x)=rotation, w''(x)=-M /EI, w'''(x)=shear force, w''''(x)=q/(E*I) => q=EI*(d^4 w/ dx^4)  \n(3) Shear (afschuiving): \n    -G=shear modulus= E/(2·(1+v)), v=Poisson's ratio \n    -q=-G*A*(d^2 w/ d x^2)\n    -τ=V*E*d*S/(I*t), with S=static moment of part for which shear stress is determined irt the median axis of the profile.  \n(4) Buckling (knik): \n    -Euler: F_b= π^2*E*I/..._k^2 \n    -If systems help each other: add F_b's; else: add (1/F_b)'s. \n(5) Tipping (kip): \n    -Bending of a l.. beam in its weak direction + influences of rotations.  \n(6)Torsion (wringing): \n    -Saint Venant torsion = uniform torsion: J(=I.t=I.w)=torsion constant, G*I.w=torsion stiffness=T*L/ϕ;    torsion stress=τ=T*t.flens/I.t (in H-beams) \n    -Warping torsion=non-uniform torsion (for thin open profiles) \n    -Venant + Warping=Vlasov theory. \n\nFill in the dots (3x).","u L loaded"],
	["The 6 Failure Mechanisms: \n\n(1) Extension: \n    -Tension: Hooke: u=F*L/(E*A)\n    -P..: σ=F/A \n(2) Bending: \n    -E=Elasticity, I=Moment of inertia (mm^4), W=Cross section area = I/z \n    -w(x)=displacement,w'(x)=rotation, w''(x)=-M /EI, w'''(x)=shear force, w''''(x)=q/(E*I) => q=EI*(d^4 w/ dx^4)  \n(3) Shear (afschuiving): \n    -G=shear modulus= E/(2·(1+v)), v=Poisson's ratio \n    -...=-GA*(d^2 w/ d x^2)\n    -τ=V*E*d*S/(I*t), with S=static moment of part for which shear stress is determined irt the median axis of the profile.  \n(4) Buckling (knik): \n    -Euler: F_b= π^2*E*I/L_k^2 \n    -If systems help each other: add F_b's; else: add (1/F_b)'s. \n(5) Tipping (kip): \n    -Bending of a loaded beam in its weak direction + influences of rotations.  \n(6)Torsion (wringing): \n    -Saint Venant torsion = uniform torsion: J(=I.t=I.w)=torsion constant, G*I.w=torsion stiffness=T*.../ϕ;    torsion stress=τ=T*t.flens/I.t (in H-beams) \n    -Warping torsion=non-uniform torsion (for thin open profiles) \n    -Venant + Warping=Vlasov theory. \n\nFill in the dots (3x).","Pressure q L"],
	["The 6 Failure Mechanisms: \n\n(1) Extension: \n    -Tension: Hooke: u=F*L/(E*A)\n    -Pressure: σ=F/A \n(2) Bending: \n    -E=Elasticity, I=Moment of inertia (mm^4), W=Cross section area = I/z \n    -w(x)=displacement,w'(x)=rotation, w''(x)=-M /EI, w'''(x)=... force, w''''(x)=q/(E*I) => q=EI*(d^4 w/ dx^4)  \n(3) Shear (afschuiving): \n    -G=shear modulus= E/(2·(1+v)), v=Poisson's ratio \n    -q=-GA*(d^2 w/ d x^2)\n    -τ=V*E*d*S/(I*t), with S=static moment of part for which shear stress is determined irt the median axis of the profile.  \n(4) Buckling (knik): \n    -Euler: F_b= π^2*E*I/L_k^2 \n    -If systems help each other: add F_...'s; else: add (1/F_b)'s. \n(5) Tipping (kip): \n    -Bending of a loaded beam in its weak direction + influences of rotations.  \n(6)Torsion (wringing): \n    -Saint Venant torsion = uniform torsion: J(=I.t=I.w)=torsion constant, G*I.w=torsion stiffness=T*L/ϕ;    torsion stress=τ=...*t.flens/I.t (in H-beams) \n    -Warping torsion=non-uniform torsion (for thin open profiles) \n    -Venant + Warping=Vlasov theory. \n\nFill in the dots (3x).","shear b T"],
	["The 6 Failure Mechanisms: \n\n(1) Extension: \n    -Tension: Hooke: u=F*L/(E*A)\n    -Pressure: σ=F/A \n(2) Bending: \n    -E=Elasticity, I=Moment of inertia (mm^4), W=Cross section area = I/z \n    -w(x)=displacement,w'(x)=rotation, w''(x)=-M /EI, w'''(x)=shear force, w''''(x)=.../(E*I) => q=EI*(d^4 w/ dx^4)  \n(3) Shear (afschuiving): \n    -G=shear modulus= E/(2·(1+v)), v=Poisson's ratio \n    -q=-GA*(d^2 w/ d x^2)\n    -τ=...*E*d*S/(I*t), with S=static moment of part for which shear stress is determined irt the median axis of the profile.  \n(4) Buckling (knik): \n    -Euler: F_b= π^2*E*I/L_k^2 \n    -If systems help each other: add F_b's; else: add (1/F_b)'s. \n(5) Tipping (kip): \n    -Bending of a loaded beam in its weak direction + influences of rotations.  \n(6)Torsion (wringing): \n    -Saint Venant torsion = uniform torsion: J(=I.t=I.w)=torsion constant, G*I.w=torsion stiffness=T*L/ϕ;    torsion stress=τ=T*t.flens/I.t (in ...-beams) \n    -Warping torsion=non-uniform torsion (for thin open profiles) \n    -Venant + Warping=Vlasov theory. \n\nFill in the dots (3x).","q V H"],
	["The 6 Failure Mechanisms: \n\n(1) Extension: \n    -Tension: Hooke: u=F*L/(E*A)\n    -Pressure: σ=F/A \n(2) Bending: \n    -E=Elasticity, I=Moment of inertia (mm^4), W=Cross section area = I/z \n    -w(x)=displacement,w'(x)=rotation, w''(x)=-M /EI, w'''(x)=shear force, w''''(x)=q/(E*I) => q=EI*(d^4 .../ dx^4)  \n(3) Shear (afschuiving): \n    -G=shear modulus= E/(2·(1+v)), v=Poisson's ratio \n    -q=-GA*(d^2 w/ d x^2)\n    -τ=V*E*d*S/(I*t), with S=static moment of part for which shear stress is determined irt the median axis of the profile.  \n(4) Buckling (knik): \n    -Euler: F_b= π^2*E*I/L_k^2 \n    -If systems help each other: add F_b's; else: add (1...F_b)'s. \n(5) Tipping (kip): \n    -Bending of a loaded beam in its weak direction + influences of rotations.  \n(6)Torsion (wringing): \n    -Saint Venant torsion = uniform torsion: J(=I.t=I.w)=torsion constant, G*I.w=torsion stiffness=T*L/ϕ;    torsion stress=τ=T*t.flens/I.t (in H-beams) \n    -... torsion=non-uniform torsion (for thin open profiles) \n    -Venant + Warping=Vlasov theory. \n\nFill in the dots (3x).","w / warping"],
	["The 6 Failure Mechanisms: \n\n(1) Extension: \n    -Tension: Hooke: u=F*L/(E*A)\n    -Pressure: σ=F/A \n(2) Bending: \n    -E=Elasticity, I=Moment of inertia (mm^4), W=Cross section area = .../z \n    -w(x)=displacement,w'(x)=rotation, w''(x)=-M /EI, w'''(x)=shear force, w''''(x)=q/(E*I) => q=EI*(d^4 w/ dx^4)  \n(3) Shear (afschuiving): \n    -G=shear modulus= E/(2·(1+v)), v=Poisson's ratio \n    -q=-GA*(d^2 w/ d x^2)\n    -τ=V*E*d*S/(I*t), with S=static moment of part for which shear stress is determined irt the median axis of the profile.  \n(4) Buckling (knik): \n    -Euler: F_b= π^2*E*I/L_k^2 \n    -If systems help each other: add F_b's; else: add (1/F_b)'s. \n(5) Tipping (kip): \n    -Bending of a loaded beam in its weak direction + influences of rotations.  \n(6)Torsion (wringing): \n    -Saint ... torsion = uniform torsion: J(=I.t=I.w)=torsion constant, G*I.w=torsion stiffness=T*L/ϕ;    torsion stress=τ=T*t.flens/I.t (in H-beams) \n    -Warping torsion=non-uniform torsion (for thin open profiles) \n    -Venant + Warping=... theory. \n\nFill in the dots (3x).","I Venant Vlasov"],
	]


words_ar_alphabet = [[' ا', 'alif'], ['ب', 'ba'], [' ت', 'ta'], ['ث', 'tha'], ['ج', 'gim'], ['ح', 'ha'], ['خ', 'kha'], ['د', 'dal'], ['ذ', 'dhal'], ['ر', 'ra'],
 ['ز', 'zaj'], ['س', 'sin'], ['ش', 'shin'], ['ص', 'sad'], ['ض', 'dad'], ['ط', 'ta'], ['ظ', 'za'], ['ع', 'ajn'], ['غ', 'gajn'], ['ف', 'fa'], ['ق', 'qaf'], ['ك', 'kaf'],
 ['ل', 'lam'], ['م', 'mim'], ['ن', 'nun'], ['ه', 'ha'], ['و', 'waw'], ['ي', 'ja']]

words_ar_pronouns = [ #tip: first copy the arabic excel columns, set them  correctly and then add the english term  
['أنا ana', 'i'], ['انتَ anta', 'you 1m subj'], ['انتِ anti', 'you 1f subj'], ['هو howwa', 'he'], ['هي heyya', 'she'], ['نحن nahnu', 'we'], ['أنتما antuma', 'you 2 subjs'], ['أنتم antum', 'you 3m subjs'], ['أنتن antunna', 'you 3f subjs'], ['هم homa', 'they m subjs'], ['هن hunna', 'they f subjs'], ['ـني verb+ni', 'me'], ['ـكَ verb+ka', 'you 1m obj'], ['ـكِ verb+ki', 'you 1f obj'], ['ـه verb+u', 'him'], ['ـها verb+ha', 'her'], ['ـنا verb+na', 'us 2 objs'], ['ـكما verb+kuma', 'you 2 objs'], ['ـهما verb+huma', 'them 2 objs'], ['ـنا verb+na', 'us 3 objs'], ['ـكم verb+kum', 'you 3m objs'], ['ـكن verb+kunna', 'you 3f objs'], ['ـهم verb+hum', 'them 3m objs'], ['ـهن verb+hunna', 'them 3f objs']]


words_ar_vocab = [
['نعم naeam', 'yes'], ['لا la', 'no'], ['مرحبا marhabana', 'hello'], ['مع السلامة mae alsalama', 'goodbye'], ['شكرا shukra', 'thanks'], ['من فضلك min fadlik', 'please'], ["لا أعلم la 'aelam", "i don't know"], ['ساعة saea', 'hour'], ['يوم yawm', 'day'], ['مدرسة madrasa', 'school'], ['منزل manzil', 'house'], ['متجر matjar', 'shop'], ['الفندق alfunduq', 'hotel'], ['مستشفى mustashfaa', 'hospital'], ['جمل jamal', 'car'], ['مال mal', 'money'], ['شخص shakhs', 'person'], ['رجل rajul', 'man'], ["المرأة almar'a", 'woman'], ['طفل tifl', 'child'], ["ماء ma'", 'water'], ["غذاء\tghidha'", 'food'], ['شارع sharie', 'street'], ['هنا huna', 'here'], ['هناك hunak', 'there'], ['كثير\t kathir', 'much'], ['لا شيئ\tla shayy', 'nothing'], ['انا آتي ana ati', 'i come'], ["أنا أذهب هناك ana 'adhhab hunak", 'i go there'], ['انا رجل ana rajul', 'i am man'], ['هو يعمل hu yaemal', 'he works'], ['أنا آكل ana akil', 'i eat'], ['أتكلم atakalam', 'i speak'], ['انا اشتري ana ashturi', 'i buy'], ['هو ينام hu yanam', 'he sleeps'], ['انا اخذت ana akhidht', 'i take'], ["أنا أعرف ana 'aerif", 'i know'], ['أفعل afeal', 'i do'], ['يفعل yafeal', 'he does'], ['جئت الى هنا\tjit alaa huna', 'i came here'], ['ستاتي الى هنا sitati alaa huna', 'you will come here'], ['يأتي هنا yati huna', 'he comes here'], ['أذهب إلى المحل\t adhhab iilaa almahali', 'i go to the shop'], ['انت تذهب هناك\taint tadhhab hunak', 'you go there'], ['هو ذهب هناك\thu dhahab hunak', 'he went there'], ['أعمل aemal ', 'i work'], ['أنت تعمل\tant taemal', 'you work'], ['هو يعمل\thu yaemal', 'he works'], ['أنا أكل طعام na ukul taeam ', 'i eat food'], ['انت تأكل الطعام  ant takul altaeam', 'you eat food'], ['أكل الطعام\t  akl altaeam', 'he ate food'], ['لقد تحدثت معهم\tlaqad tahadatht maeahum', 'i spoke to them '], ['انت تحدث ant tahdith', 'you speak'], ['هو يتحدث hu yatahadath', 'he speaks'], ["سأشتري هذا\tsa'ashtari hadha", 'i will buy this'], ['لم تشتري منزل\tlam tashtari manzil', 'you bought no house'], [' يشتري منزلين\tyashtari manzilayn', 'he buys two houses'], ['لقد نمت laqad namat', 'i slept'], ['انت تنام\tant tanam', 'you sleep'], ['هو ينام\thu yanam', 'he sleeps'], ['آخذ الكثير من المال\takhidh alkathir min almal', 'i take much money'], ['أنت لا تأخذ المال ant la takhudh almal', 'you take no money'], ['أخذ المال akhadh almal', 'he took money'], ['لا اعرف شيئا\t la aerif shayyana', 'i know nothing'], ['أنت تعرف الكثير  ant taerif alkathir', 'you know much'], ['لأنه يعلم أن li anah yaelam ana', 'he knows that'], ['لا افعل شيئ la afeal shayy', 'i do nothing'], ['أنت تفعل ذلك ant tafeal dhalik', 'you do that'], ['يفعل الكثير\tyafeal alkathir', 'he does much'], ['لم افهم lam afham', 'i do not understand'], ['واحد wahid', 'one'], ['اثنين aithnayn', 'two'], ['ثلاثة thalatha', 'three'], ['أربعة arbaea', 'four'], ['خمسة khamsa', 'five'], ['ستة sita', 'six'], ['سبعة sabea', 'seven'], ['ثمانية thamania', 'eight'], ['تسع tise', 'nine'], ['عشرة eashra', 'ten']]


words_sp_pronouns = [
    ['yo (subj)','i'],
    ['tu (subj)','you'],
    ['él','he'],
    ['ella','she'],
    ['nosotros (subj)','we'],
    ['usted (subj)','you (plural)'],
    ['ellos (subj)','they'],    	
    ['yo (obj)','me'],
    ['tu (obj)','you'],
    ['él/ lo/ le','him'],
    ['ella/ le','her'],
    ['nosotros (obj)','us'],
    ['usted (obj)','you'],
    ['ellos (obj)','them'],    	
    ['mi','my'],
    ['su','your/his/her/their'],
    ['nuestro','our'],
    ['vuestro','your'],
    ['mio/ mia','mine'],
    ['tuyo','yours'],
    ['suyo','his'],
    ['suyo','hers'],
    ['nuestro','ours'],
    ['vuestro','yours'],
    ['suyo','theirs'],
    ]

words_sp_vocab = [
    ['sí','yes'],
    ['no','no'],
    ['hola','hello'],
    ['adiós','goodbye'],
    ['gracias','thanks'],
    ['por favor','please'],
    ['hora','hour'],
    ['día','day'],
    ['escuela','school'],
    ['casa','house'],
    ['tienda','shop'],
    ['hotel','hotel'],
    ['hospital','hospital'],
    ['carro','car'],
    ['dinero','money'],
    ['persona','person'],
    ['hombre','man'],
    ['mujer','woman'],
    ['niño','child'],
    ['agua','water'],
    ['comida','food'],
    ['calle','street'],
    ['esto','this'],
    ['eso','that'],
    ['aquí','here'],
    ['allí','there'],
    ['mucho','much'],
    ['nada','nothing'],
    ['vine aqui','i came here'],
    ['Tú vendrás aquí','you will come here'],
    ['el viene aqui','he comes here'],
    ['Voy a la tienda','i go to the shop'],
    ['tu vas alli','you go there'],
    ['fue allí','he went there'],
    ['trabajo','i work'],
    ['tu trabajas','you work'],
    ['él trabaja','he works'],
    ['como comida','i eat food'],
    ['Tú comes comida','you eat food'],
    ['el come comida','he ate food'],
    ['les hablé','i spoke to them'],
    ['tu hablas','you speak'],
    ['él habla','he speaks'],
    ['voy a comprar esto','i will buy this'],
    ['no compraste casa','you bought no house'],
    ['compra dos casas','he buys two houses'],
    ['dormí','i slept'],
    ['tu duermes','you sleep'],
    ['el duerme','he sleeps'],
    ['tomo mucho dinero','i take much money'],
    ['no tomas dinero','you take no money'],
    ['tomó dinero','he took money'],
    ['no se nada','i know nothing'],
    ['sabes mucho','you know much'],
    ['Él lo sabe','he knows that'],
    ['Yo no hago nada','i do nothing'],
    ['haces eso','you do that'],
    ['el hace mucho','he does much'],
    ['no entiendo','I do not understand'],
]

    
    

words_ru_alphabet = [['А а','a'],['Б б','b'],['В в','v'],['Г г','g'],['Д д','d'],['Е е','ye'],['Ё ё','yo'],['Ж ж','zh'],['З з','z'],['И и','ee'],['Й й','y'],['К к','k'],['Л л','l'],['М м','m'],['Н н','n'],['Stressed: О о','o'], ['Unstressed: О о','a'],['П п','p'],['Р р','r'],['С с','s'],['Т т','t'],['У у','u'],['Ф ф','f'],['Х х','h or kh'],['Ц ц','ts'],['Ч ч','ch'],['Ш ш','hard sh'],['Щ щ','soft sh'],['Ъ ъ','hard sign'],['Ы ы','i'],['Ь ь','soft sign'],['Э э','e'],['Ю ю','yu'],['Я я','ya']]
words_ru_vocab = [
    ['Я (ya)','i'],
    ['ты (ty)','you (singular)'],
    ['он (on)','he'],
    ['она (ona)','she'],
    ['оно (ono)','it'],
    ['мы (my)','we'],
    ['вы (vy)','you (plural or respectful)'],
    ['они (oni)','they'],
    ['да (da)','yes'],
    ['нет (net)','no'],
    ['Привет (privet)','hello'],
    ['до свидания (do svidaniya)','goodbye'],
    ['Спасибо (spasibo)','thank you'],
    ['пожалуйста (pozhaluysta)','please'],
    ['один (odin)','one'],
    ['два (dva)','two'],
    ['три (tri)','three'],
    ['четыре (chetyre)','four'],
    ["пять (pyat' )",'five'],
    ["шесть (shest')",'six'],
    ["семь (sem')",'seven'],
    ["восемь (vosem')",'eight'],
    ["девять (devyat')",'nine'],
    ["десять (desyat')",'ten'],
    ['час (chas)','hour'],
    ["день (den')",'day'],
    ['школа (shkola)','school'],
    ['дом (dom)','house'],
    ['магазин (magazin)','shop'],
    ["отель (otel')",'hotel'],
    ["больница (bol'nitsa)",'hospital'],
    ['машина (mashina)','car'],
    ["Деньги (den'gi)",'money'],
    ['человек (chelovek)', 'person'],
    ['мужчина (muzhchina)', 'man'],
    ['женщина (zhenshchina)', 'woman'],
    ['ребенок (rebenok)', 'child'],
    ['вода (voda)','water'],
    ['еда (yeda)','food'],
    ['Дорога (doroga)', 'road'],
    ["здесь	(zdes')",'here'],
    ['там (tam)','there'],
    ['много (mnogo)','much'],
    ['ничего (nichego)','nothing'],
    ['я пришел сюда	ya prishel syuda','i came here'],	
    ["ты придешь сюда	ty pridesh' syuda",'you will come here'],	
    ["он идет сюда	on idet syuda",'he comes here'],	
    ["я иду в магазин	ya idu v magazin",'i go to the shop'],	
    ["ты идешь туда	ty idesh' tuda",'you go there'],	
    ["он пошел туда	on poshel tuda",'he went there'],	
    ["Я работаю	YA rabotayu",'i work'],	
    ["ты работаешь	ty rabotayesh'",'you work'],	
    ["он работает	on rabotayet",'he works'],	
    ["я ем еду	ya yem yedu	",'i eat food'],
    ["ты ешь еду	ty yesh' yedu",'you eat food'],	
    ["он ел еду	on yel yedu	",'he ate food'],	
    ["я говорил с ними	ya govoril s nimi",'i spoke to them'], 	
    ["ты говоришь	ty govorish'",'you speak'],	
    ["он говорит	on govorit",'he speaks'],	
    ["я куплю это	ya kuplyu eto",'i will buy this'],	
    ["ты не купил дом	ty ne kupil dom	",'you bought no house'],	
    ["он покупает два дома	on pokupayet dva doma",'he buys two houses'],	
    ["я спал	ya spal",'i slept'],	
    ["ты спишь	ty spish'",'you sleep'],	
    ["он спит	on spit",'he sleeps'],	
    ["я беру много денег	ya beru mnogo deneg",'i take much money'],	
    ["ты не берешь денег	ty ne beresh' deneg",'you take no money'],	
    ["он взял деньги	on vzyal den'gi",'he took money'],
    ["я ничего не знаю	ya nichego ne znayu	",'i know nothing'],	
    ["ты много знаешь	ty mnogo znayesh'",'you know much'],	
    ["он знает это	on znayet eto",'he knows that'],
    ["я ничего не делаю	ya nichego ne delayu",'i do nothing'],	
    ["Вы делаете это	Vy delayete eto",'you do that'],	
    ["он много делает	on mnogo delayet",'he does much'], 	
    ["я не понимаю	ya ne ponimayu",'i do not understand'],	
    ]


words_ch_mandarin_pronouns =[
    ['我 wǒ3','i'],
    ['你 nǐ3','you (singular)'],
    ['他 tā1','he'],
    ['她 andtā1'	,'she'],
    ['它 andtā1'	,'it'],
    ['我 们 wǒ3men','we'],
    ['你 们 nǐ3men','you (plural)'],
    ['他 们 tā1men','they (plural)']
    ]


words_ch_mandarin_vocab = [
    ['是的 shì4de','yes'],
    ['不 bù4','no'],
    ['你好 nǐ3hǎo3' ,'hello'],
    ['再见 zài4jiàn4','goodbye'],
    ['谢谢你 xiè4xiè4 nǐ3','thank you'],
    ["请 qǐng3",'please'],
    ['一 Yī1','one'],
    ['二 èr4','two'],
    ['三 sān1','three'],
    ['四 sì4	','four'],
    ['五 wǔ3','five'],
    ['六 liù4','six'],
    ['七 qī1	','seven'],
    ['八 bā1','eight'],
    ['九 jiǔ3','nine'],
    ['十 shí2','ten'],
    ['小时 xiǎ3oshí2','hour'],
    ['日 Rì4','day'],
    ['学校 xué2xiào4','school'],
    ['屋 wū1','house'],
    ['店铺 diàn4pù4','shop'],
    ['酒店 jiǔ3diàn4','hotel'],
    ['医院 yī1yuàn4','hospital'],
    ['车 chē1','car'],
    ['钱 qián2 (q=tsj á=e)','money'],
    ['人 rén2','person'],
    ['男子 nán2zǐ3','man'],
    ['女士 nǚ3shì4','woman'],
    ['孩子 hái2zi','child'],
    ['水 shuǐ3', 'water'],
    ['食物 shí2wù4','food'],
    ['道路 dào4lù4','road'],
    ["这里 zhè4lǐ3",'here'],
    ["那里 nà4lǐ3",'there'],
    ["很多 hěn3duō1",'much'],
    ["没有什么 méi2yǒu3 shé2 me",'nothing'],
    ['来 lái2','to come'],
    ['去 qù4	','to go'],
    ['成为 chéng2wéi2','to be'],
    ['去工作 qù4 gōng1zuò4','to work'],
    ['去吃 qù4 chī1','to eat'],
    ['说话 shuō1huà4','to speak'],
    ['买 mǎi3','to buy'],
    ['睡觉 shuì4jiào4','to sleep'],
    ['采取 cǎi3qǔ3','to take'],
    ['知道 zhī1dào4','to know'],
    ['做	 Zuò4','to do'],
    ["我来了	Wǒ láile",'i came here'],
    ["你会来这里	nǐ huì lái zhèlǐ",'you will come here'],	
    ["他来了	tā láile",'he comes here'],
    ["我去商店	wǒ qù shāngdiàn",'i go to the shop'],
    ["你去那里	nǐ qù nàlǐ"	,'you go there'],	
    ["他去了那里	tā qùle nàlǐ",'he went there'],	
    ["我的工作	wǒ de gōngzuò",'i work'],	
    ["你工作	nǐ gōngzuò"	,'you work'],	
    ["他工作	tā gōngzuò"	,'he works'],	
    ["我吃食物	wǒ chī shi wù",'i eat food'],	
    ["你吃食物	nǐ chī shi wù",'you eat food'],	
    ["他吃了食物	tā chīle shíwù"	,'he ate food'],
    ["我和他们谈过	wǒ hé tāmen tánguò",'i spoke to them'], 	
    ["你说	nǐ shuō",'you speak'],	
    ["他说	tā shuō",'he speaks'],	
    ["我会买这个	wǒ huì mǎi zhège",'i will buy this'],	
    ["你没有买房子	nǐ méiyǒu mǎi fángzi",'you bought no house'],	
    ["他买了两套房子	tā mǎile liǎng tào fángzi",'he buys two houses'],	
    ["我睡了	wǒ shuìle",'i slept'],	
    ["你睡	nǐ shuì",'you sleep'],	
    ["他睡	tā shuì",'he sleeps'],	
    ["我拿了很多钱	wǒ nále hěnduō qián",'i take much money'],	
    ["你不要钱 nǐ bùyào qián",'you take no money'],	
    ["他拿了钱 tā nále qián",'he took money'],	
    ["我什么都不知道	wǒ shénme dōu bù zhīdào",'i know nothing'],	
    ["你知道很多	nǐ zhīdào hěnduō",'you know much'],	
    ["他知道	tā zhīdào",'he knows that'],	
    ["我什么都不做	 wǒ shénme dōu bù zuò",'i do nothing'],	
    ["你做吧	nǐ zuò ba",'you do that'],	
    ["他做了很多	tā zuòle hěnduō",'he does much'],
    ["我不明白 wǒ bù míngbái",'i do not understand'],	
    ['我不知道 wǒ3bù4zhī1dào4',"i don't know"],
    ]

words_ch_hanzi_1 = [ # 300 most frequent from https://sensiblechinese.com/common-chinese-characters/
['我   wǒ ' ,'I ; me'],	['的   de ' ,'possessive p.'],	['你   nǐ ' ,'you'],	['是   shì ' ,'to be; is'],	['了   le ' ,'completed action p.'],	['不   bù ' ,'no; not'],	['们   men ' ,'plural p.'],	['这   zhè ' ,'this'],	['一   yī ' ,'one; a'],	['他   tā ' ,'he; him'],	['么   me ' ,'interrogative p.'],	['在   zài ' ,'at'],	['有   yǒu ' ,'to have; there is'],	['个   gè ' ,'general measure word'],	['好   hǎo ' ,'good; well'],	['来   lái ' ,'to come'],	['人   rén ' ,'man; person'],	['那   nà ' ,'that'],	['要   yào ' ,'to want; important'],	['会   huì ' ,'can; will; to know'],	['就   jiù ' ,'then; just (emp.)'],	['什   shén ' ,'what'],	['没   méi ' ,'not'],	['到   dào ' ,'to arrive; until (time)'],	['说   shuō ' ,'to speak'],	['吗   ma ' ,'question p.'],	['为   wèi ' ,'because of; for'],	['想   xiǎng ' ,'to think; to want'],	['能   néng ' ,'to be able to'],	['上   shàng ' ,'above; top'],	['去   qù ' ,'to go'],	['道   dào ' ,'way; method'],	['她   tā ' ,'she'],	['很   hěn ' ,'very'],	['看   kàn ' ,'to see; to look at'],	['可   kě ' ,'can; able to'],	['知   zhī ' ,'to know'],	['得   de ' ,'complement p. (V + 得 + Adverb)'],	['过   guo ' ,'experienced action p.'],	['吧   ba ' ,'…right?'],	['还   hái ' ,'still; yet; to return'],	['对   duì ' ,'correct; opposite'],	['里   lǐ ' ,'inside'],	['以   yǐ ' ,'according to; by'],	['都   dōu ' ,'all; both'],	['事   shì ' ,'thing; item'],	['子   zǐ ' ,'child'],	['生   shēng ' ,'life; raw'],	['时   shí ' ,'time'],	['样   yàng ' ,'manner'],	['也   yě ' ,'also; too'],	['和   hé ' ,'and'],	['下   xià ' ,'below; down'],	['真   zhēn ' ,'really; truly'],	['现   xiàn ' ,'present'],	['做   zuò ' ,'to do'],	['大   dà ' ,'big'],	['啊   a ' ,'ah!'],	['怎   zěn ' ,'how'],	['出   chū ' ,'to go out'],	['点   diǎn ' ,'a dot; o clock'],	['起   qǐ ' ,'to rise'],	['天   tiān ' ,'day; heaven'],	['把   bǎ ' ,'direct object p.; to hold'],	['开   kāi ' ,'to open; to start'],	['让   ràng ' ,'to allow; passive p.'],	['给   gěi ' ,'to give; for; passive p.'],	['但   dàn ' ,'but; yet'],	['谢   xiè ' ,'to thank'],	['着   zhe ' ,'action in progress p.'],	['只   zhǐ ' ,'only'],	['些   xiē ' ,'some; few'],	['如   rú ' ,'as; as if'],	['家   jiā ' ,'home; family'],	['后   hòu  ' ,'behind; after'],	['儿   ér ' ,'son'],	['多   duō ' ,'many; much'],	['意   yì ' ,'idea; meaning'],	['别   bié ' ,'must not; other'],	['所   suǒ ' ,'actually; place'],	['话   huà ' ,'language; talk'],	['小   xiǎo ' ,'small'],	['自   zì ' ,'self'],	['回   huí ' ,'to answer; to return'],	['然   rán ' ,'correct'],	['果   guǒ ' ,'fruit'],	['发   fā ' ,'to send; to develop'],	['见   jiàn ' ,'to see; to meet'],	['心   xīn ' ,'heart'],	['走   zǒu ' ,'to walk; away'],	['定   dìng ' ,'to set'],	['听   tīng ' ,'to listen'],	['觉   jué ' ,'to feel'],	['太   tài ' ,'too (much)'],	['该   gāi ' ,'should'],	['当   dāng ' ,'to be; just at'],	['经   jīng ' ,'pass through'],	['妈   mā ' ,'mum'],	['用   yòng ' ,'to use'],	['打   dǎ ' ,'to hit'],	['地   de ' ,'-ly structural p.'],	['再   zài ' ,'again; then'],	['因   yīn ' ,'reason'],	['呢   ne ' ,'how about…?; continuing p.'],	['女   nǚ ' ,'female'],	['告   gào ' ,'to tell'],	['最   zuì ' ,'most; -est'],	['手   shǒu ' ,'hand'],	['前   qián ' ,'front'],	['找   zhǎo ' ,'to look for'],	['行   xíng ' ,'to travel; OK!'],	['快   kuài ' ,'rapid; almost'],	['而   ér ' ,'and; as well as'],	['死   sǐ ' ,'to die'],	['先   xiān ' ,'first; former'],	['像   xiàng ' ,'to be like; image'],	['等   děng ' ,'rank; to wait for'],	['被   bèi ' ,'passive p.'],	['从   cóng ' ,'from; to follow'],	['明   míng ' ,'bright'],	['中   zhōng ' ,'middle'],	['哦   ó ' ,'oh'],	['情   qíng ' ,'emotion'],	['作   zuò ' ,'to do'],	['跟   gēn ' ,'with; to follow'],	['面   miàn ' ,'side; aspect'],	['诉   sù ' ,'to tell; to complain'],	['爱   ài ' ,'to love'],	['已   yǐ ' ,'already'],	['之   zhī ' ,'possessive p.'],	['问   wèn ' ,'to ask'],	['错   cuò ' ,'mistake; bad'],	['孩   hái ' ,'child'],	['斯   sī ' ,'this'],	['成   chéng ' ,'to become'],	['它   tā ' ,'it'],	['感   gǎn ' ,'to feel; emotion'],	['干   gàn ' ,'to do'],	['法   fǎ ' ,'law'],	['电   diàn ' ,'electric'],	['间   jiān ' ,'between; room'],	['哪   nǎ ' ,'which'],	['西   xī ' ,'West'],	['己   jǐ ' ,'oneself'],	['候   hòu ' ,'to wait; season'],	['次   cì ' ,'mw. for time'],	['信   xìn ' ,'letter; to trust'],	['欢   huān ' ,'joyous'],	['正   zhèng ' ,'just (right); correct'],	['实   shí ' ,'real; honest'],	['关   guān ' ,'to shut'],	['进   jìn ' ,'to enter'],	['车   chē ' ,'vehicle'],	['年   nián ' ,'year'],	['喜   xǐ ' ,'to like'],	['认   rèn ' ,'to recognize'],	['克   kè ' ,'gram; to overcome'],	['爸   bà ' ,'father'],	['谁   shuí ' ,'who'],	['方   fāng ' ,'place; square'],	['老   lǎo ' ,'old prefix'],	['应   yīng ' ,'should; ought to'],	['比   bǐ ' ,'comparison p.'],	['帮   bāng ' ,'to help'],	['无   wú ' ,'not to have; -less'],	['晚   wǎn ' ,'evening; late'],	['动   dòng ' ,'to move'],	['头   tóu ' ,'head'],	['机   jī ' ,'machine'],	['分   fēn ' ,'to divide; fraction'],	['特   tè ' ,'special; unique'],	['相   xiāng ' ,'mutual; each other'],	['全   quán ' ,'all; whole'],	['杀   shā ' ,'to kill'],	['需   xū ' ,'to need; to want'],	['放   fàng ' ,'to put'],	['常   cháng ' ,'always; general'],	['直   zhí ' ,'straight'],	['才   cái ' ,'just now; ability'],	['美   měi ' ,'beautiful'],	['于   yú ' ,'in; at; on'],	['带   dài ' ,'to bring; belt'],	['今   jīn ' ,'today; now'],	['力   lì ' ,'power'],	['工   gōng ' ,'work'],	['许   xǔ ' ,'to permit'],	['东   dōng ' ,'East'],	['名   míng ' ,'name'],	['同   tóng ' ,'same; similar'],	['长   cháng ' ,'long; length'],	['亲   qīn ' ,'parent; relative'],	['种   zhǒng ' ,'kind'],	['者   zhě ' ,'one who (is)'],	['嘿   hēi ' ,'hey'],	['白   bái ' ,'white; pure'],	['学   xué ' ,'to learn'],	['安   ān ' ,'safe; calm'],	['尔   ěr ' ,'thus; thou'],	['叫   jiào ' ,'to call'],	['理   lǐ ' ,'essence; truth'],	['本   běn ' ,'mw. for books; origin'],	['国   guó ' ,'country'],	['第   dì ' ,'ordinal #'],	['友   yǒu ' ,'friend'],	['高   gāo ' ,'high; tall'],	['两   liǎng ' ,'two (used with mw.)'],	['保   bǎo ' ,'to defend'],	['请   qǐng ' ,'to invite'],	['非   fēi ' ,'not'],	['重   zhòng ' ,'heavy; serious'],	['公   gōng ' ,'public'],	['记   jì ' ,'to record'],	['身   shēn ' ,'body'],	['受   shòu ' ,'to receive'],	['住   zhù ' ,'to live; to reside'],	['活   huó ' ,'to live'],	['加   jiā ' ,'to add; plus'],	['何   hé ' ,'question word'],	['伙   huǒ ' ,'companion; buddy'],	['题   tí ' ,'topic; subject'],	['完   wán ' ,'to finish; complete'],	['接   jiē ' ,'to receive; to join'],	['拿   ná ' ,'to take'],	['望   wàng ' ,'to gaze; to hope'],	['解   jiě ' ,'to divide; to explain'],	['其   qí ' ,'his; hers; its'],	['离   lí ' ,'to leave; (distance) from'],	['谈   tán ' ,'to chat'],	['又   yòu ' ,'again; also'],	['新   xīn ' ,'new'],	['更   gèng ' ,'more'],	['钱   qián ' ,'money'],	['马   mǎ ' ,'horse'],	['思   sī ' ,'to think; to consider'],	['部   bù ' ,'section; part'],	['场   cháng ' ,'open area'],	['嗯   en ' ,'approval interjection'],	['计   jì ' ,'to plan'],	['任   rèn ' ,'to appoint; office'],	['确   què ' ,'solid; real'],	['吃   chī ' ,'to eat'],	['始   shǐ ' ,'to begin'],	['结   jiē ' ,'to produce'],	['利   lì ' ,'sharp; benefit'],	['朋   péng ' ,'friend'],	['警   jǐng ' ,'police; to warn'],	['士   shì ' ,'scholar; soldier'],	['外   wài ' ,'outside; foreign'],	['件   jiàn ' ,'mw. for items'],	['难   nán ' ,'difficult'],	['位   wèi ' ,'mw. for people'],	['表   biǎo ' ,'exterior surface'],	['刚   gāng ' ,'just (now); hard'],	['希   xī  ' ,'rare: hope'],	['查   chá ' ,'to research'],	['拉   lā ' ,'to pull'],	['边   biān ' ,'side; edge'],	['或   huò ' ,'maybe; perhaps'],	['将   jiāng ' ,'will; shall'],	['男   nán ' ,'male'],	['准   zhǔn ' ,'to allow'],	['变   biàn ' ,'to change'],	['证   zhèng ' ,'proof'],	['物   wù ' ,'thing; object'],	['员   yuán ' ,'employee; member'],	['总   zǒng ' ,'always'],	['噢   ō  ' ,'moan sound'],	['系   xì ' ,'system; to connect'],	['几   jǐ ' ,'how many'],	['管   guǎn ' ,'to control'],	['玩   wán ' ,'to play'],	['处   chù ' ,'place; location'],	['办   bàn ' ,'to do; to manage'],	['主   zhǔ ' ,'master; main'],	['气   qì ' ,'air'],	['每   měi ' ,'each; every'],	['少   shǎo ' ,'few; little'],	['切   qiē ' ,'to cut; to slice'],	['失   shī ' ,'to lose'],	['算   suàn ' ,'to calculate'],	['性   xìng ' ,'nature; gender'],	['此   cǐ ' ,'this; these'],	['必   bì ' ,'must; will'],	['备   bèi ' ,'get ready'],	['合   hé ' ,'to close; together'],	['德   dé ' ,'virtue; ethics'],	['队   duì ' ,'team; group'],	['试   shì ' ,'to test; to try'],	['抱   bào ' ,'to carry in arms'],	['医   yī ' ,'medical'],	['通   tōng ' ,'to connect; open'],	['体   tǐ ' ,'body; form'],	['乐   lè ' ,'happy'],	['并   bìng ' ,'(not) at all'],	['三   sān ' ,'three'],	['早   zǎo ' ,'early; morning'],	['门   mén ' ,'door; gate'],	['害   hài ' ,'harm'],	['歉   qiàn ' ,'to apologize'],	['选   xuǎn ' ,'to choose']]
words_ch_hanzi_2 = [ #301-600 most frequent
['嗨   hāi  ' ,'an exclamation'],	['房   fáng ' ,'house; room'],	['命   mìng ' ,'life; fate'],	['且   qiě ' ,'moreover; both'],	['向   xiàng ' ,'towards; direction'],	['兴   xīng ' ,'to rise; to flourish'],	['球   qiú ' ,'ball; sphere'],	['服   fú ' ,'clothes; to serve'],	['入   rù ' ,'to enter'],	['照   zhào ' ,'according to; to shine'],	['提   tí ' ,'to lift'],	['掉   diào ' ,'to fall; to lose'],	['夫   fū ' ,'husband'],	['路   lù ' ,'road'],	['演   yǎn ' ,'to act; to develop'],	['够   gòu ' ,'to be enough'],	['日   rì ' ,'sun; day'],	['案   àn ' ,'legal case; record'],	['舞   wǔ ' ,'to dance'],	['决   jué ' ,'to decide'],	['求   qiú ' ,'to look for; to request'],	['约   yuē ' ,'appointment; to invite'],	['字   zì ' ,'word; character'],	['呃   è  ' ,'belch; hiccup'],	['肯   kěn ' ,'to agree'],	['目   mù ' ,'eye'],	['笑   xiào ' ,'to laugh'],	['伤   shāng ' ,'wound'],	['神   shén ' ,'deity; spirit'],	['父   fù ' ,'father'],	['指   zhǐ ' ,'finger; refer to'],	['报   bào ' ,'to announce'],	['留   liú ' ,'to stay; to remain'],	['水   shuǐ ' ,'water; liquid'],	['教   jiào ' ,'to teach'],	['枪   qiāng ' ,'gun'],	['清   qīng ' ,'clear'],	['色   sè ' ,'color'],	['号   hào ' ,'number'],	['世   shì ' ,'life; age; world'],	['远   yuǎn ' ,'far; distant'],	['片   piàn ' ,'thin piece; slice'],	['官   guān ' ,'official'],	['口   kǒu ' ,'mouth'],	['师   shī ' ,'teacher; master'],	['原   yuán ' ,'original'],	['酒   jiǔ ' ,'wine'],	['周   zhōu ' ,'circle; week'],	['星   xīng ' ,'star'],	['识   shí ' ,'to know'],	['赛   sài ' ,'competition'],	['救   jiù ' ,'to save'],	['底   dǐ ' ,'bottom; end'],	['棒   bàng ' ,'wonderful; stick'],	['须   xū ' ,'must; beard'],	['收   shōu ' ,'to receive'],	['交   jiāo ' ,'to deliver; to pay'],	['坐   zuò ' ,'to sit'],	['停   tíng ' ,'to stop'],	['卡   kǎ ' ,'card; to block'],	['尼   ní ' ,'Buddhist nun'],	['婚   hūn ' ,'to marry'],	['格   gé ' ,'grid; pattern'],	['眼   yǎn ' ,'eye'],	['金   jīn ' ,'gold'],	['蛋   dàn ' ,'egg'],	['息   xī ' ,'breath; to rest'],	['室   shì ' ,'room'],	['内   nèi ' ,'inside; inner'],	['运   yùn ' ,'to move; fortune'],	['根   gēn ' ,'root; basis'],	['单   dān ' ,'single; list'],	['宝   bǎo ' ,'jewel; treasure'],	['哥   gē ' ,'elder brother'],	['张   zhāng ' ,'mw. for flat obj.'],	['搞   gǎo ' ,'to make; to set up'],	['战   zhàn ' ,'to fight; war'],	['火   huǒ ' ,'fire'],	['罗   luó ' ,'gauze; to gather'],	['至   zhì ' ,'to arrive'],	['万   wàn ' ,'ten thousand'],	['声   shēng ' ,'sound; voice'],	['布   bù ' ,'cloth; to spread'],	['音   yīn ' ,'sound; noise'],	['期   qī ' ,'period of time'],	['条   tiáo ' ,'mw. long thing obj.'],	['消   xiāo ' ,'to vanish; need'],	['买   mǎi ' ,'to buy'],	['病   bìng ' ,'illness; disease'],	['整   zhěng ' ,'ordered'],	['奇   qí ' ,'strange'],	['弟   dì ' ,'young brother'],	['犯   fàn ' ,'to violate; to offend'],	['装   zhuāng ' ,'clothing; to pretend'],	['贝   bèi ' ,'shell'],	['您   nín ' ,'you (polite)'],	['送   sòng ' ,'to give; to deliver'],	['怕   pà ' ,'to fear'],	['护   hù ' ,'to protect'],	['度   dù ' ,'degree; measure'],	['花   huā ' ,'flower; to spend'],	['节   jié ' ,'festival'],	['近   jìn ' ,'near'],	['怪   guài ' ,'odd; monster'],	['持   chí ' ,'to maintain; to manage'],	['光   guāng ' ,'bright; only'],	['与   yǔ ' ,'and; with'],	['穿   chuān ' ,'to wear'],	['愿   yuàn ' ,'to hope; willing'],	['象   xiàng ' ,'elephant; form'],	['影   yǐng ' ,'image'],	['击   jí ' ,'to hit'],	['使   shǐ ' ,'to cause'],	['二   èr ' ,'two'],	['喝   hē ' ,'to drink'],	['月   yuè ' ,'moon; month'],	['器   qì ' ,'device; tool'],	['察   chá ' ,'to examine; to observe'],	['制   zhì ' ,'to manufacture'],	['嘛   ma ' ,'obvious p.; pause p.'],	['哈   hā ' ,'laughter'],	['助   zhù ' ,'to help'],	['达   dá ' ,'to reach'],	['海   hǎi ' ,'ocean; sea'],	['待   dài ' ,'to wait; about to'],	['托   tuō ' ,'support; to entrust'],	['除   chú ' ,'to remove'],	['写   xiě ' ,'to write'],	['绝   jué ' ,'sever; absolutely'],	['界   jiè ' ,'boundary; scope'],	['帝   dì ' ,'emperor'],	['姐   jiě ' ,'older sister'],	['反   fǎn ' ,'contrary; opposite'],	['担   dān ' ,'to undertake'],	['司   sī ' ,'to manage; department'],	['强   qiáng ' ,'strong; powerful'],	['由   yóu ' ,'from; by'],	['论   lùn ' ,'opinion; theory'],	['飞   fēi ' ,'to fly'],	['亚   yà ' ,'Asia'],	['续   xù ' ,'to continue'],	['视   shì ' ,'to look at'],	['母   mǔ ' ,'mother'],	['空   kōng ' ,'empty; air'],	['军   jūn ' ,'army'],	['跑   pǎo ' ,'to run'],	['阿   ā ' ,'prefix for names'],	['尽   jìn ' ,'to greatest extent'],	['注   zhù ' ,'pay attention; to register'],	['弄   nòng ' ,'to do'],	['密   mì ' ,'secret'],	['线   xiàn ' ,'thread'],	['代   dài ' ,'to substitute; era'],	['忙   máng ' ,'busy'],	['坏   huài ' ,'bad; broken'],	['久   jiǔ ' ,'long (time)'],	['议   yì ' ,'to discuss'],	['衣   yī ' ,'clothes'],	['血   xiě ' ,'blood'],	['钟   zhōng ' ,'clock; o clock'],	['继   jì ' ,'to carry on'],	['礼   lǐ ' ,'gift; ceremony'],	['数   shù ' ,'number; figure'],	['份   fèn ' ,'mw. for papers, sets'],	['疯   fēng ' ,'insane'],	['平   píng ' ,'flat; equal'],	['止   zhǐ ' ,'to prohibit'],	['十   shí ' ,'ten'],	['拜   bài ' ,'to pay respect'],	['鬼   guǐ ' ,'ghost'],	['睡   shuì ' ,'to sleep'],	['啦   la ' ,'exclamation p.'],	['调   diào ' ,'to transfer; tone'],	['巴   bā ' ,'to stick to; close to'],	['兄   xiōng ' ,'elder brother'],	['紧   jǐn ' ,'strict; tight'],	['站   zhàn ' ,'to stop; station'],	['品   pǐn ' ,'goods; product'],	['英   yīng ' ,'brave'],	['罪   zuì ' ,'guilt; crime'],	['文   wén ' ,'language; culture'],	['亮   liàng ' ,'bright; clear'],	['抓   zhuā ' ,'to grab'],	['跳   tiào ' ,'to jump'],	['联   lián ' ,'to unite; to join'],	['混   hùn ' ,'to mix'],	['便   biàn ' ,'ordinary; convenient'],	['狗   gǒu ' ,'dog'],	['脑   nǎo ' ,'brain; mind'],	['业   yè ' ,'occupation'],	['歌   gē ' ,'song'],	['精   jīng ' ,'essence; vitality'],	['包   bāo ' ,'to wrap; bag'],	['转   zhuǎn ' ,'to revolve; to turn'],	['却   què ' ,'but; however'],	['参   cān ' ,'to participate'],	['院   yuàn ' ,'courtyard; institution'],	['务   wù ' ,'affair; business'],	['基   jī ' ,'base; foundation'],	['台   tái ' ,'platform'],	['另   lìng ' ,'other; another'],	['恩   ēn ' ,'grace'],	['书   shū ' ,'book'],	['统   tǒng ' ,'to unite'],	['风   fēng ' ,'wind'],	['况   kuàng ' ,'situation; moreover'],	['四   sì ' ,'four'],	['黑   hēi ' ,'black'],	['否   fǒu ' ,'to deny'],	['险   xiǎn ' ,'danger'],	['言   yán ' ,'words; speech'],	['米   mǐ ' ,'rice'],	['杰   jié ' ,'distinguished'],	['校   xiào ' ,'school'],	['幸   xìng ' ,'fortunate'],	['传   chuán ' ,'to transfer; send'],	['复   fù ' ,'to return; to repeat'],	['量   liàng ' ,'quantity; amount'],	['首   shǒu ' ,'head; chief'],	['改   gǎi ' ,'to change'],	['忘   wàng ' ,'to forget'],	['术   shù ' ,'method; technique'],	['局   jú ' ,'office; narrow'],	['客   kè ' ,'customer; guest'],	['假   jiǎ ' ,'fake; to borrow'],	['永   yǒng ' ,'forever'],	['维   wéi ' ,'to maintain'],	['岁   suì ' ,'years (of age)'],	['据   jù ' ,'according to; to seize'],	['派   pài ' ,'school of though'],	['票   piào ' ,'ticket'],	['兰   lán ' ,'orchid'],	['恶   è ' ,'evil; ugly'],	['烦   fán ' ,'to trouble'],	['取   qǔ ' ,'to take'],	['游   yóu ' ,'to swim; to travel'],	['糟   zāo  ' ,'dregs'],	['令   lìng ' ,'command; to order'],	['随   suí ' ,'to follow; comply'],	['五   wǔ ' ,'five'],	['圣   shèng ' ,'holy'],	['式   shì ' ,'type; style'],	['探   tàn ' ,'to explore'],	['嘴   zuǐ ' ,'mouth'],	['毒   dú ' ,'poison'],	['越   yuè ' ,'to climb over'],	['律   lǜ ' ,'law'],	['费   fèi ' ,'expense'],	['科   kē ' ,'division'],	['麻   má ' ,'hemp; rough'],	['简   jiǎn ' ,'simple'],	['易   yì ' ,'easy'],	['流   liú ' ,'to flow'],	['治   zhì ' ,'to govern; solve'],	['唱   chàng ' ,'to sing'],	['答   dá ' ,'to reply; answer'],	['倒   dǎo ' ,'to invert; actually'],	['划   huà ' ,'to plan; row'],	['控   kòng ' ,'to accuse; manage'],	['味   wèi ' ,'taste; smell'],	['区   qū ' ,'area'],	['漂   piāo ' ,'to float'],	['支   zhī ' ,'to support'],	['乎   hū ' ,'in; at; from'],	['录   lù ' ,'diary; record'],	['考   kǎo ' ,'to test'],	['超   chāo ' ,'to exceed; super-'],	['拍   pāi ' ,'to clap; to take (photo)'],	['轻   qīng ' ,'light; gentle'],	['连   lián ' ,'to link; even…'],	['往   wǎng ' ,'towards'],	['组   zǔ ' ,'to organize; group'],	['满   mǎn ' ,'to fill; satisfied'],	['造   zào ' ,'to build; to make'],	['弹   dàn ' ,'bullet'],	['静   jìng ' ,'still; calm'],	['故   gù ' ,'old; happening'],	['吸   xī ' ,'to breathe; inhale'],	['喂   wèi ' ,'call attention'],	['集   jí ' ,'to gather; to collect'],	['极   jí ' ,'extremely'],	['讲   jiǎng ' ,'to speak; lecture'],	['块   kuài ' ,'colloq. money; lump'],	['趣   qù ' ,'interesting'],	['类   lèi ' ,'kind; category'],	['呀   yā ' ,'surprise p.'],	['戏   xì ' ,'drama; trick'],	['曾   céng ' ,'once; already'],	['容   róng ' ,'to contain; appearance'],	['步   bù ' ,'a step'],	['投   tóu ' ,'to cast'],	['化   huà ' ,'to change into'],	['未   wèi ' ,'not; have not'],	['束   shù ' ,'to bind; bundle'],	['醒   xǐng ' ,'to wake up'],	['威   wēi ' ,'power'],	['班   bān ' ,'team; class'],	['终   zhōng ' ,'end; finish'],	['差   chà ' ,'inferior; bad'],	['梦   mèng ' ,'dream']]
words_ch_hanzi_3 = [ #601-900 most frequent
['赢   yíng ' ,'to win'],	['药   yào ' ,'medicine'],	['迪   dí  ' ,'to enlighten'],	['店   diàn ' ,'inn; shop'],	['丽   lì ' ,'beautiful'],	['卖   mài ' ,'to sell'],	['显   xiǎn ' ,'prominent; to show'],	['监   jiān ' ,'to supervise'],	['图   tú ' ,'diagram; map'],	['半   bàn ' ,'half'],	['语   yǔ ' ,'language; speech'],	['付   fù ' ,'to pay; hand over'],	['热   rè ' ,'hot'],	['排   pái ' ,'a row; to arrange'],	['楚   chǔ ' ,'distinct; clear'],	['偷   tōu ' ,'to steal'],	['敢   gǎn ' ,'to dare'],	['油   yóu ' ,'oil'],	['餐   cān ' ,'meal'],	['破   pò ' ,'broken; to destroy'],	['杯   bēi ' ,'cup'],	['市   shì ' ,'market; city'],	['城   chéng ' ,'city; town'],	['哇   wā ' ,'child cry sound'],	['权   quán ' ,'authority; power'],	['某   mǒu ' ,'some; a certain'],	['激   jī ' ,'to excite; fierce'],	['立   lì ' ,'to stand'],	['程   chéng ' ,'rule; order'],	['伊   yī ' ,'he; she'],	['讨   tǎo ' ,'to invite; to discuss'],	['责   zé ' ,'duty'],	['昨   zuó ' ,'yesterday'],	['闭   bì ' ,'to close; to shut'],	['庭   tíng ' ,'main hall; courtyard'],	['落   luò ' ,'to set; to decline'],	['饭   fàn ' ,'food; meal'],	['林   lín ' ,'forest'],	['换   huàn ' ,'to change'],	['及   jí ' ,'to reach; up to'],	['船   chuán ' ,'boat'],	['争   zhēng ' ,'to strive for'],	['猜   cāi ' ,'to guess'],	['级   jí ' ,'level; rank'],	['姆   mǔ  ' ,'matron'],	['雷   léi ' ,'thunder'],	['刻   kè ' ,'quarter (hour); to cut'],	['建   jiàn ' ,'to establish'],	['团   tuán ' ,'round'],	['王   wáng ' ,'king'],	['惊   jīng ' ,'frightened'],	['迎   yíng ' ,'to welcome'],	['段   duàn ' ,'section'],	['标   biāo ' ,'sign; prize'],	['检   jiǎn ' ,'to check'],	['各   gè ' ,'each; every'],	['义   yì ' ,'justice'],	['百   bǎi ' ,'hundred'],	['民   mín ' ,'the people'],	['功   gōng ' ,'result; achievement'],	['唯   wěi ' ,'yes'],	['夜   yè ' ,'night'],	['示   shì ' ,'to show'],	['靠   kào ' ,'to lean on'],	['释   shì ' ,'to explain'],	['脸   liǎn ' ,'face'],	['引   yǐn ' ,'to pull; to guide'],	['择   zé ' ,'to select'],	['疑   yí ' ,'to doubt'],	['赶   gǎn ' ,'to hurry'],	['俩   liǎ ' ,'two (coll. 两）'],	['独   dú ' ,'alone'],	['冷   lěng ' ,'cold'],	['妹   mèi ' ,'younger sister'],	['楼   lóu ' ,'building; floor'],	['皮   pí ' ,'leather; skin'],	['存   cún ' ,'to exist; to deposit'],	['练   liàn ' ,'to practice'],	['娘   niáng ' ,'mother; young lady'],	['顿   dùn ' ,'to pause; mw. for meals'],	['断   duàn ' ,'to break; defiitely'],	['设   shè ' ,'to set up'],	['松   sōng ' ,'loose; to relax'],	['博   bó ' ,'rich; extensive'],	['置   zhì ' ,'to install'],	['逃   táo ' ,'to escape'],	['观   guān ' ,'to watch'],	['痛   tòng ' ,'ache; pain'],	['狂   kuáng ' ,'mad; wild'],	['足   zú ' ,'foot'],	['码   mǎ ' ,'number; code'],	['恐   kǒng ' ,'afraid'],	['吉   jí ' ,'lucky'],	['历   lì ' ,'calendar; to experience'],	['慢   màn ' ,'slow'],	['妻   qī ' ,'wife'],	['山   shān ' ,'mountain'],	['普   pǔ ' ,'general; popular'],	['价   jià ' ,'price; value'],	['元   yuán ' ,'unit of money'],	['角   jiǎo ' ,'angle; 0.1元'],	['怀   huái ' ,'bosom; heart'],	['床   chuáng ' ,'bed'],	['奥   ào ' ,'obscure'],	['模   mó ' ,'to imitate'],	['验   yàn ' ,'to examine'],	['索   suǒ ' ,'to search; to ask'],	['街   jiē ' ,'street'],	['呼   hū ' ,'to call'],	['祝   zhù ' ,'to wish; to pray'],	['料   liào ' ,'material; stuff'],	['休   xiū ' ,'to rest'],	['灵   líng ' ,'quick; effective'],	['狱   yù  ' ,'prison; lawsuit'],	['剧   jù ' ,'drama; play'],	['乱   luàn ' ,'messy; disorder'],	['展   zhǎn ' ,'to spread out'],	['板   bǎn ' ,'board; plank'],	['承   chéng ' ,'to bear; to carry'],	['则   zé ' ,'in contrast; norm'],	['顾   gù ' ,'to look after'],	['深   shēn ' ,'deep; profound'],	['产   chǎn ' ,'give birth; to produce'],	['洗   xǐ ' ,'to wash'],	['政   zhèng ' ,'political'],	['迷   mí ' ,'fan (of)'],	['领   lǐng ' ,'neck'],	['午   wǔ ' ,'noon'],	['纳   nà ' ,'to receive; to bring in'],	['谎   huǎng  ' ,'lie'],	['具   jù ' ,'tool; ability'],	['退   tuì ' ,'to retreat; to decline'],	['福   fú ' ,'luck; fortune'],	['习   xí ' ,'to study; habit'],	['秘   mì ' ,'secret'],	['奶   nǎi ' ,'milk; breast'],	['遇   yù ' ,'to meet; to encounter'],	['职   zhí ' ,'office; duty'],	['架   jià ' ,'to support; framework'],	['即   jí ' ,'namely; at once'],	['挺   tǐng  ' ,'to stand upright'],	['史   shǐ ' ,'history'],	['负   fù ' ,'to bear'],	['千   qiān ' ,'thousand'],	['脱   tuō ' ,'to take off'],	['瑞   ruì ' ,'auspicious'],	['背   bèi ' ,'back of object'],	['仅   jǐn ' ,'barely; merely'],	['追   zhuī ' ,'to chase'],	['伦   lún ' ,'relationship'],	['炸   zhá ' ,'to fry in oil'],	['资   zī  ' ,'property; wealth'],	['画   huà ' ,'to draw; picture'],	['踪   zōng  ' ,'footprints; traces'],	['射   shè ' ,'to shoot'],	['弃   qì ' ,'to abandon'],	['傻   shǎ ' ,'foolish'],	['藏   cáng ' ,'to conceal; to store'],	['屁   pì ' ,'fart; nonsense'],	['瞧   qiáo  ' ,'to glance at'],	['修   xiū ' ,'to repair'],	['尸   shī  ' ,'corpse'],	['闻   wén ' ,'to hear; news'],	['共   gòng ' ,'common; general'],	['懂   dǒng ' ,'to understand'],	['蒂   dì  ' ,'stem of plant'],	['危   wēi ' ,'danger'],	['专   zhuān ' ,'specialized'],	['呆   ái ' ,'stupid'],	['介   jiè ' ,'to introduce'],	['萨   sà ' ,'Bodhissatva'],	['魔   mó ' ,'devil; magic'],	['急   jí ' ,'urgent; worried'],	['碰   pèng ' ,'to bump'],	['甚   shén ' ,'variant of 什'],	['糕   gāo  ' ,'cake'],	['苦   kǔ ' ,'bitter; pain'],	['念   niàn ' ,'to miss (sb); thought'],	['适   shì ' ,'to fit; suitable'],	['华   huá ' ,'splendid'],	['冲   chōng ' ,'to clash; to rinse'],	['骗   piàn ' ,'to cheat'],	['厌   yàn ' ,'to loathe'],	['型   xíng ' ,'model; type'],	['麦   mài ' ,'wheat; oats'],	['似   sì ' ,'-like'],	['红   hóng ' ,'red'],	['值   zhí ' ,'value'],	['脚   jiǎo ' ,'foot'],	['六   liù ' ,'six'],	['谋   móu  ' ,'plan; scheme'],	['套   tào ' ,'cover; mw. for sets'],	['凯   kǎi ' ,'triumphant'],	['众   zhòng ' ,'many; crowd'],	['预   yù ' ,'to advance; prepare'],	['际   jì ' ,'border; between'],	['咱   zá/zán  ' ,'we; us'],	['波   bō ' ,'wave'],	['卫   wèi ' ,'to guard'],	['聊   liáo ' ,'to chat'],	['养   yǎng ' ,'to raise; to bring up'],	['导   dǎo ' ,'to guide'],	['虑   lǜ ' ,'to think over'],	['私   sī ' ,'private'],	['戴   dài ' ,'to put on'],	['毁   huǐ ' ,'to destroy'],	['鱼   yú ' ,'fish'],	['滚   gǔn ' ,'to boil'],	['志   zhì ' ,'sign; ambition'],	['杂   zá ' ,'mixed'],	['居   jū ' ,'to reside; residence'],	['词   cí ' ,'word'],	['食   shí ' ,'food'],	['诺   nuò ' ,'promise'],	['读   dú ' ,'to read'],	['误   wù ' ,'mistake'],	['撒   sā ' ,'to release'],	['突   tū ' ,'to dash; sudden'],	['牛   niú ' ,'cow'],	['馆   guǎn ' ,'building; shop'],	['规   guī ' ,'a rule; compass'],	['陪   péi ' ,'to accompany'],	['州   zhōu  ' ,'a state'],	['肉   ròu ' ,'flesh; meat'],	['形   xíng ' ,'form; appear'],	['凶   xiōng  ' ,'culprit; scary'],	['森   sēn ' ,'forest'],	['商   shāng ' ,'commernce'],	['纪   jì ' ,'order; to discipline'],	['浪   làng ' ,'wave'],	['石   shí ' ,'stone'],	['顺   shùn ' ,'to obey; along'],	['举   jǔ ' ,'to lift'],	['按   àn ' ,'to press; to restrain'],	['旅   lǚ ' ,'journey'],	['努   nǔ ' ,'to exert'],	['坚   jiān ' ,'strong'],	['测   cè ' ,'to measure'],	['免   miǎn ' ,'to exempt; to avoid'],	['喔   ō ' ,'I see; oh'],	['丝   sī ' ,'silk'],	['辆   liàng  ' ,'mw. for vehicles'],	['乔   qiáo  ' ,'tall; lofty'],	['防   fáng ' ,'to protect'],	['句   jù ' ,'sentence'],	['印   yìn ' ,'to print; image'],	['恋   liàn ' ,'to feel attached to'],	['弗   fú  ' ,'not, negative'],	['季   jì ' ,'season'],	['严   yán ' ,'strict; tight'],	['推   tuī ' ,'to push'],	['伯   bó ' ,'eldest uncle'],	['莉   lì  ' ,'white jasmine'],	['武   wǔ ' ,'martial'],	['胜   shèng ' ,'victory; better'],	['毛   máo ' ,'hair; coarse'],	['压   yā ' ,'to push down'],	['败   bài ' ,'to defeat'],	['究   jiū ' ,'after all; to investigate'],	['评   píng ' ,'to comment; criticize'],	['屋   wū ' ,'house; room'],	['双   shuāng ' ,'pair; double'],	['牙   yá ' ,'tooth'],	['斗   dòu ' ,'to fight'],	['鸡   jī ' ,'chicken'],	['审   shěn ' ,'to examine'],	['南   nán ' ,'South'],	['速   sù ' ,'fast; rapid'],	['蠢   chǔn  ' ,'stupid'],	['丈   zhàng  ' ,'husband'],	['守   shǒu ' ,'to guard'],	['获   huò ' ,'to capture; to reap'],	['八   bā ' ,'eight'],	['致   zhì ' ,'fine; delicate'],	['细   xì ' ,'thin; fine'],	['勒   lè ' ,'to rein in; to compel'],	['称   chēng ' ,'to weigh; name'],	['塔   tǎ ' ,'pagoda; tower'],	['丢   diū ' ,'to lose'],	['冰   bīng ' ,'ice'],	['态   tài ' ,'attitude'],	['吓   xià ' ,'to scare'],	['古   gǔ ' ,'ancient'],	['亡   wáng ' ,'to die'],	['状   zhuàng ' ,'suit; strong'],	['鲁   lǔ  ' ,'foolish, Shandong'],	['疗   liáo  ' ,'to be healed'],	['操   cāo ' ,'to operate'],	['遗   yí ' ,'to lose; to omit'],	['判   pàn ' ,'to judge'],	['响   xiǎng ' ,'sound; noise'],	['网   wǎng ' ,'net; network'],	['箱   xiāng ' ,'box; chest'],	['货   huò ' ,'goods'],	['围   wéi ' ,'to encircle'],	['签   qiān ' ,'to sign; label'],	['牌   pái ' ,'card; tablet'],	['户   hù ' ,'door; household'],	['寻   xún ' ,'to search'],	['质   zhì ' ,'character; quality']]
words_ch_hanzi_4 = [ #901-1200 most frequent    
['供   gōng ' ,'to supply'],	['奖   jiǎng ' ,'prize'],	['袋   dài  ' ,'pocket'],	['胡   hú ' ,'beard; mustache'],	['脏   zāng  ' ,'dirty'],	['堂   táng ' ,'hall; mw. for furniture sets'],	['曼   màn  ' ,'extended'],	['效   xiào ' ,'effect'],	['露   lù ' ,'dew; to reveal'],	['替   tì ' ,'on behalf'],	['娜   nuó ' ,'elegant; delicate'],	['座   zuò ' ,'seat'],	['园   yuán ' ,'park'],	['拥   yǒng ' ,'to embrace'],	['睛   jīng ' ,'eye; eyeball'],	['冒   mào ' ,'to emit'],	['甜   tián  ' ,'sweet'],	['股   gǔ ' ,'portion; thigh'],	['香   xiāng ' ,'fragrant'],	['笔   bǐ ' ,'pen; brush'],	['沙   shā ' ,'sand'],	['扰   rǎo ' ,'to disturb'],	['挑   tiāo ' ,'to choose'],	['姑   gū  ' ,'aunt'],	['爆   bào ' ,'to explode'],	['镇   zhèn ' ,'suppress; small town'],	['暴   bào ' ,'violent; cruel'],	['困   kùn ' ,'sleepy; difficult'],	['项   xiàng ' ,'item; back of neck'],	['概   gài ' ,'approximate'],	['摩   mó ' ,'to rub'],	['虽   suī ' ,'although'],	['纽   niǔ  ' ,'knot; button; knob'],	['享   xiǎng ' ,'to enjoy'],	['配   pèi ' ,'to join; to match'],	['迹   jì  ' ,'traces'],	['登   dēng ' ,'to ascend'],	['诞   dàn  ' ,'give birth'],	['竟   jìng ' ,'unexpectedly'],	['叔   shū  ' ,'fathers younger brother'],	['捕   bǔ  ' ,'to arrest'],	['赌   dǔ  ' ,'to gamble'],	['阻   zǔ ' ,'to obstruct'],	['彩   cǎi ' ,'color; variety'],	['搬   bān ' ,'to move (house)'],	['属   shǔ ' ,'category; affiliation'],	['招   zhāo ' ,'to recruit'],	['婆   pó ' ,'grandmother'],	['巧   qiǎo ' ,'opportunely; timely'],	['骨   gǔ ' ,'bone'],	['塞   sāi ' ,'to stop up'],	['剩   shèng ' ,'to remain'],	['酷   kù ' ,'ruthless; cool'],	['啡   fēi  ' ,'coffee; morphine'],	['课   kè ' ,'subject; lesson'],	['烟   yān ' ,'cigarette; to smoke'],	['摄   shè ' ,'to absorb'],	['封   fēng ' ,'to grant; title'],	['咖   kā  ' ,'coffee (phonetic)'],	['低   dī ' ,'low; beneath'],	['技   jì ' ,'skill'],	['迟   chí  ' ,'late; slow'],	['纸   zhǐ ' ,'paper'],	['烧   shāo ' ,'to cook; roast/bake'],	['委   wěi ' ,'to entrust'],	['暗   àn ' ,'dark; gloomy'],	['左   zuǒ ' ,'left'],	['输   shū ' ,'to lose'],	['曲   qǔ ' ,'song; tune'],	['仍   réng ' ,'still; yet'],	['训   xùn ' ,'to tell; to teach'],	['借   jiè ' ,'to lend; to borrow'],	['扔   rēng  ' ,'to throw'],	['善   shàn ' ,'virtuous; kind'],	['社   shè ' ,'society'],	['轮   lún ' ,'wheel; by turns'],	['顶   dǐng ' ,'apex; to replace'],	['聪   cōng ' ,'intelligent'],	['秀   xiù ' ,'handsome; elegant'],	['刀   dāo ' ,'knife'],	['莫   mò ' ,'do not'],	['腿   tuǐ  ' ,'legs; thighs'],	['族   zú ' ,'race; nationality'],	['鞋   xié  ' ,'shoes'],	['兵   bīng ' ,'soldiers'],	['锁   suǒ ' ,'lock'],	['妮   nī  ' ,'girl'],	['异   yì ' ,'different; other'],	['誓   shì  ' ,'swear; oath'],	['树   shù ' ,'tree'],	['木   mù ' ,'tree; wood'],	['抢   qiǎng  ' ,'to plunder'],	['档   dǎng ' ,'grade (of goods); shelves'],	['雇   gù  ' ,'to employ'],	['广   guǎng ' ,'wide'],	['丹   dān  ' ,'cinnabar'],	['银   yín ' ,'silver'],	['镜   jìng ' ,'mirror'],	['群   qún ' ,'group'],	['坦   tǎn  ' ,'flat; smooth'],	['汉   hàn ' ,'Han people'],	['土   tǔ ' ,'earth'],	['短   duǎn ' ,'short; brief'],	['伴   bàn ' ,'partner'],	['播   bō ' ,'to scatter'],	['环   huán ' ,'ring; to circle'],	['恨   hèn ' ,'to hate'],	['移   yí ' ,'to move; to alter'],	['编   biān ' ,'to organize; to compile'],	['温   wēn ' ,'warm'],	['刺   cì ' ,'to stab; to pierce'],	['毫   háo  ' ,'fine hair'],	['右   yòu ' ,'right'],	['野   yě ' ,'field; wild'],	['哭   kū ' ,'to cry'],	['遍   biàn ' ,'everywhere; all over'],	['库   kù ' ,'warehouse'],	['搭   dā ' ,'to put up'],	['康   kāng ' ,'healthy'],	['症   zhèng ' ,'disease; illness'],	['荣   róng ' ,'glory; honor'],	['充   chōng ' ,'to fill; to satisfy'],	['创   chuāng ' ,'a wound'],	['尝   cháng  ' ,'taste; experience'],	['列   liè ' ,'to arrange; list'],	['毕   bì ' ,'the whole of; to finish'],	['般   bān ' ,'sort; kind'],	['聚   jù ' ,'to assemble'],	['劳   láo ' ,'to toil'],	['攻   gōng ' ,'to attack'],	['忍   rěn ' ,'to endure'],	['势   shì ' ,'power; potential'],	['尊   zūn ' ,'senior; to honor'],	['吻   wěn  ' ,'kiss; lips'],	['汤   tāng ' ,'soup; hot water'],	['优   yōu ' ,'excellent'],	['境   jìng ' ,'border; place'],	['蒙   méng ' ,'cover; ignorant'],	['偶   ǒu ' ,'accidental'],	['熟   shú ' ,'cooked; ripe; familiar'],	['营   yíng ' ,'camp; barracks'],	['苏   sū ' ,'to revive'],	['爷   yé  ' ,'father; grandfather'],	['微   wēi ' ,'tiny'],	['埃   āi  ' ,'fine dust; dirt'],	['抽   chōu ' ,'to draw out'],	['盖   gài ' ,'lid; cover'],	['灯   dēng ' ,'light; lamp'],	['莎   shā ' ,'sedge grass'],	['府   fǔ ' ,'seat of power'],	['透   tòu ' ,'to penetrate'],	['魂   hún ' ,'soul; spirit'],	['艺   yì ' ,'skill; art'],	['掌   zhǎng ' ,'palm of hand'],	['啥   shà ' ,'what?'],	['升   shēng ' ,'to ascend; promote'],	['裤   kù  ' ,'trousers'],	['临   lín ' ,'to face'],	['智   zhì ' ,'wisdom'],	['盘   pán ' ,'plate'],	['研   yán ' ,'study; research'],	['菲   fēi  ' ,'fragrant; luxuriant'],	['归   guī ' ,'to return'],	['撞   zhuàng ' ,'to hit'],	['隐   yǐn ' ,'secret'],	['附   fù ' ,'to be close to; to add'],	['搜   sōu  ' ,'to seek'],	['摆   bǎi ' ,'to arrange'],	['散   sàn ' ,'to scatter'],	['阳   yáng ' ,'male; sun'],	['协   xié ' ,'to cooperate'],	['租   zū ' ,'to hire'],	['泰   tài ' ,'safe; grand'],	['岛   dǎo ' ,'island'],	['健   jiàn ' ,'healthy'],	['饼   bǐng  ' ,'biscuits'],	['较   jiào ' ,'comparatively'],	['避   bì ' ,'to flee; to avoid'],	['猫   māo ' ,'cat'],	['七   qī ' ,'seven'],	['菜   cài ' ,'dish; cuisine; vegetable'],	['糖   táng  ' ,'sugar; sweets'],	['痴   chī ' ,'imbecile'],	['富   fù ' ,'rich; abundant'],	['降   jiàng ' ,'to drop; descend'],	['怜   lián ' ,'to pity'],	['既   jì ' ,'already; both…'],	['织   zhī ' ,'to weave'],	['执   zhí ' ,'to execute; to grasp'],	['戒   jiè  ' ,'to warn'],	['佛   fó ' ,'Buddha'],	['抗   kàng ' ,'to resist; anti-'],	['笨   bèn ' ,'stupid'],	['航   háng ' ,'boat; to sail'],	['妙   miào ' ,'wonderful'],	['迈   mài  ' ,'to pass by'],	['耳   ěr ' ,'ear'],	['匙   chí  ' ,'spoon'],	['宣   xuān ' ,'to announce'],	['烂   làn ' ,'soft; rotten'],	['秒   miǎo  ' ,'a second'],	['挂   guà ' ,'to hang; to register'],	['旁   páng ' ,'beside; side'],	['勇   yǒng ' ,'brave'],	['钥   yào/yuè  ' ,'key; lock'],	['悲   bēi ' ,'sorrow'],	['妇   fù  ' ,'married woman'],	['圈   quān ' ,'ring; to circle'],	['敬   jìng ' ,'to respect'],	['劲   jìn/jìng  ' ,'strong; tough'],	['帕   pà  ' ,'turban; veil'],	['草   cǎo ' ,'grass'],	['醉   zuì ' ,'intoxicated'],	['绑   bǎng  ' ,'to tie'],	['层   céng ' ,'layer; floor (of building)'],	['吵   chǎo ' ,'to quarrel'],	['龙   lóng ' ,'dragon'],	['挥   huī ' ,'to wave; to disperse'],	['奋   fèn  ' ,'to strive'],	['忆   yì ' ,'to remember'],	['折   zhé ' ,'to break; to turn'],	['彼   bǐ ' ,'that; those'],	['末   mò ' ,'tip; final'],	['北   běi ' ,'North'],	['景   jǐng ' ,'scenery'],	['沃   wò  ' ,'to irrigate'],	['废   fèi ' ,'to abolish'],	['副   fù ' ,'secondary; vice-'],	['默   mò ' ,'silent'],	['铁   tiě ' ,'iron'],	['初   chū ' ,'at first'],	['雪   xuě ' ,'snow'],	['瓦   wǎ  ' ,'tile; pottery'],	['素   sù ' ,'raw silk; nature'],	['禁   jìn ' ,'to prohibit'],	['诚   chéng ' ,'honest; sincere'],	['黄   huáng ' ,'yellow'],	['敌   dí ' ,'enemy; to resist'],	['夏   xià ' ,'Summer'],	['贵   guì ' ,'expensive'],	['欧   ōu ' ,'Europe'],	['旦   dàn  ' ,'dawn'],	['依   yī ' ,'to depend on'],	['谅   liàng ' ,'to forgive'],	['桌   zhuō ' ,'table'],	['雄   xióng ' ,'male; grand'],	['丁   dīng ' ,'male adult; robust'],	['舒   shū ' ,'leisurely; to stretch'],	['粉   fěn  ' ,'powder'],	['旧   jiù ' ,'old'],	['朝   cháo ' ,'dynasty'],	['厅   tīng ' ,'hall'],	['恭   gōng ' ,'polite'],	['汽   qì ' ,'steam'],	['补   bǔ ' ,'to make up for'],	['徒   tú ' ,'apprentice'],	['稍   shāo ' ,'somewhat; a little'],	['摇   yáo ' ,'to shake'],	['躲   duǒ  ' ,'to hide'],	['窗   chuāng ' ,'window'],	['源   yuán ' ,'source; origin'],	['蓝   lán ' ,'blue'],	['章   zhāng ' ,'chapter'],	['灭   miè ' ,'to extinguish'],	['疼   téng  ' ,'aches; pains'],	['孤   gū ' ,'lonely'],	['滑   huá ' ,'to slip; cunning'],	['碎   suì  ' ,'to break; broken'],	['弱   ruò ' ,'weak'],	['仔   zǐ ' ,'meticulous; young'],	['款   kuǎn ' ,'section'],	['拒   jù ' ,'to resist'],	['河   hé ' ,'river'],	['伍   wǔ ' ,'to associate with'],	['纹   wén  ' ,'line; streak'],	['臭   chòu ' ,'smell; stink'],	['幻   huàn ' ,'fantasy'],	['童   tóng ' ,'child'],	['翰   hàn  ' ,'writing brush'],	['闪   shǎn ' ,'to dodge; flash'],	['残   cán ' ,'to injure; cruel'],	['鸟   niǎo ' ,'bird'],	['骑   qí ' ,'to ride'],	['翻   fān ' ,'to translate; to flip'],	['洲   zhōu ' ,'continent; island'],	['沉   chén ' ,'to submerge; sink'],	['饿   è  ' ,'hungry'],	['砸   zá  ' ,'to smash'],	['互   hù ' ,'mutual'],	['卷   juǎn ' ,'roll; to roll up'],	['拖   tuō ' ,'to drag'],	['瓜   guā ' ,'melon'],	['例   lì ' ,'example; case'],	['财   cái ' ,'money; wealth'],	['瓶   píng ' ,'bottle; vase'],	['墙   qiáng  ' ,'wall'],	['拳   quán ' ,'fist; boxing'],	['牢   láo  ' ,'prison; stable'],	['典   diǎn ' ,'dictionary; law'],	['垃   lā  ' ,'waste']]
words_ch_hanzi_5 = [ #1201-1500 most frequent     
['染   rǎn ' ,'to dye; to acquire'],	['漫   màn ' ,'free; to inundate'],	['触   chù ' ,'to touch'],	['胁   xié  ' ,'ribs; to threaten'],	['圾   jī  ' ,'garbage'],	['施   shī ' ,'to grant'],	['胸   xiōng  ' ,'breast; chest'],	['阴   yīn ' ,'cloudy; female'],	['孕   yùn  ' ,'be pregnant'],	['惹   rě  ' ,'to irritate'],	['硬   yìng ' ,'hard'],	['逮   dài  ' ,'to seize'],	['销   xiāo ' ,'to melt'],	['邦   bāng ' ,'country; nation'],	['劫   jié  ' ,'to take by force'],	['袭   xí  ' ,'to raid'],	['育   yù ' ,'to bring up'],	['虫   chóng ' ,'insects'],	['嫌   xián  ' ,'to hate'],	['累   léi ' ,'tired'],	['怖   bù  ' ,'terror; fear'],	['握   wò ' ,'to grasp'],	['雨   yǔ ' ,'rain'],	['缺   quē ' ,'lack'],	['琳   lín  ' ,'gem'],	['墨   mò  ' ,'black; corrupt'],	['迫   pò ' ,'to force'],	['采   cǎi ' ,'to select; looks'],	['辈   bèi ' ,'generation'],	['陷   xiàn  ' ,'to submerge'],	['蹈   dǎo  ' ,'to stamp feet'],	['限   xiàn ' ,'limit'],	['巨   jù ' ,'huge'],	['鲍   bào  ' ,'dried fish'],	['针   zhēn ' ,'needle'],	['雅   yǎ ' ,'elegant'],	['兹   zī  ' ,'now; here; this'],	['尾   wěi ' ,'tail'],	['青   qīng ' ,'green/blue; young'],	['席   xí ' ,'mat; banquet'],	['逼   bī  ' ,'to pressure'],	['犹   yóu  ' ,'like; similar to'],	['扮   bàn  ' ,'to dress up'],	['赞   zàn ' ,'to praise; to support'],	['邀   yāo  ' ,'to invite'],	['净   jìng ' ,'clean'],	['闹   nào ' ,'noisy'],	['访   fǎng ' ,'to call on; to inquire'],	['良   liáng ' ,'good; very much'],	['叛   pàn  ' ,'to rebel; rebellion'],	['驾   jià  ' ,'to operate vehicle'],	['范   fàn ' ,'pattern; model'],	['俄   é  ' ,'sudden(ly)'],	['猪   zhū ' ,'pig'],	['辛   xīn ' ,'hot taste; hard'],	['杉   shān  ' ,'pine/fir tree'],	['淘   táo  ' ,'wash in sieve'],	['洞   dòng ' ,'cave; hole'],	['冠   guān ' ,'hat; crown'],	['伟   wěi ' ,'big; great'],	['珍   zhēn ' ,'precious'],	['梅   méi ' ,'plum'],	['朗   lǎng  ' ,'clear; bright'],	['欠   qiàn  ' ,'owe; lack'],	['扯   chě  ' ,'rip up; haul'],	['丑   chǒu  ' ,'clown; ugly'],	['竞   jìng ' ,'to compete'],	['剂   jì  ' ,'liquid solution'],	['烈   liè ' ,'fierce; intense'],	['李   lǐ ' ,'plum'],	['村   cūn ' ,'village'],	['厉   lì ' ,'strict'],	['厨   chú  ' ,'kitchen'],	['允   yǔn  ' ,'to grant'],	['授   shòu ' ,'to teach'],	['堆   duī ' ,'to pile up; heap'],	['庆   qìng ' ,'to celebrate'],	['率   shuài ' ,'to lead; frank'],	['怒   nù  ' ,'anger; rage'],	['寓   yù  ' ,'residence'],	['液   yè  ' ,'sap; juice'],	['谓   wèi ' ,'to speak; meaning'],	['估   gū ' ,'to estimate'],	['鲜   xiān ' ,'fresh'],	['磨   mó/mò  ' ,'grind; rub'],	['帅   shuài ' ,'handsome'],	['婊   biǎo  ' ,'prostitute'],	['尿   niào  ' ,'urine'],	['键   jiàn ' ,'key(board)'],	['余   yú  ' ,'surplus'],	['绍   shào ' ,'to continue'],	['娃   wá  ' ,'baby; doll'],	['刑   xíng  ' ,'to punish'],	['扫   sǎo ' ,'to sweep'],	['核   hé ' ,'seed'],	['损   sǔn ' ,'to decrease; damage'],	['辩   biàn ' ,'to dispute'],	['惯   guàn ' ,'accustomed to'],	['傲   ào  ' ,'proud'],	['减   jiǎn ' ,'to lower'],	['泡   pào ' ,'bubble; to steep'],	['摸   mō ' ,'feel with hand'],	['著   zhù  ' ,'manifest'],	['途   tú ' ,'way; route'],	['矶   jī  ' ,'jetty'],	['鼓   gǔ ' ,'drum'],	['堡   bǎo ' ,'fortress'],	['愚   yú  ' ,'stupid'],	['敏   mǐn ' ,'quick'],	['版   bǎn ' ,'edition'],	['盒   hé  ' ,'small box'],	['订   dìng ' ,'to agree'],	['寄   jì ' ,'to mail'],	['赚   zhuàn ' ,'to earn'],	['爵   jué  ' ,'feudal title'],	['材   cái ' ,'material'],	['盛   chéng ' ,'to ladle'],	['尤   yóu ' ,'especially'],	['皇   huáng ' ,'emperor'],	['夺   duó  ' ,'to take by force'],	['邮   yóu ' ,'post; mail'],	['俱   jù  ' ,'all; together'],	['九   jiǔ ' ,'nine'],	['盗   dào  ' ,'to steal'],	['尺   chǐ ' ,'Chinese "foot"'],	['愉   yú  ' ,'pleasant'],	['序   xù ' ,'order; sequence'],	['鼠   shǔ ' ,'rat'],	['幕   mù ' ,'curtain'],	['踢   tī  ' ,'kick'],	['憾   hàn  ' ,'to regret'],	['汰   tài  ' ,'excessive'],	['隔   gé ' ,'to partition'],	['彻   chè  ' ,'to penetrate'],	['插   chā ' ,'to insert; pierce'],	['猎   liè  ' ,'to hunt'],	['尚   shàng ' ,'still; yet; to value'],	['潜   qián  ' ,'to hide; hidden'],	['构   gòu ' ,'to assign; faciton'],	['烤   kǎo  ' ,'bake; roast'],	['霍   huò  ' ,'quickly'],	['悔   huǐ ' ,'to regret'],	['暂   zàn ' ,'temporary'],	['爽   shuǎng ' ,'bright; crisp'],	['扎   zhā ' ,'to pierce'],	['绪   xù ' ,'beginnings; thread'],	['讯   xùn ' ,'to question'],	['吐   tù  ' ,'to vomit'],	['吹   chuī ' ,'to blow'],	['宾   bīn  ' ,'guest; visitor'],	['侦   zhēn  ' ,'spy'],	['颗   kē ' ,'particle'],	['宁   níng ' ,'peaceful'],	['罚   fá  ' ,'penalty'],	['欲   yù ' ,'to wish for; desire'],	['乡   xiāng ' ,'countryside'],	['帽   mào ' ,'hat'],	['杜   dù  ' ,'to prevent'],	['豪   háo ' ,'heroic'],	['征   zhēng ' ,'to recruit'],	['括   kuò ' ,'to enclose; to include'],	['盯   dīng  ' ,'to keep eyes on'],	['稳   wěn ' ,'steady; stable'],	['胆   dǎn  ' ,'gall; bravery'],	['甲   jiǎ ' ,'first; shell'],	['赖   lài ' ,'to depend on; bad'],	['啤   pí  ' ,'beer'],	['佩   pèi ' ,'to respect; wear (belt)'],	['启   qǐ ' ,'to start; to open'],	['胎   tāi  ' ,'embryo; fetus'],	['帐   zhàng ' ,'screen'],	['赏   shǎng ' ,'to bestow'],	['抛   pāo  ' ,'throw (away)'],	['遭   zāo ' ,'meet by chance'],	['若   ruò ' ,'seem like'],	['梯   tī  ' ,'ladder'],	['震   zhèn ' ,'to shake'],	['述   shù ' ,'to tell'],	['阵   zhèn ' ,'short time'],	['仪   yí ' ,'ceremony'],	['乖   guāi ' ,'clever; shrewd'],	['宫   gōng ' ,'palace'],	['咬   yǎo  ' ,'bite; gnaw'],	['祷   dǎo  ' ,'to pray'],	['祖   zǔ ' ,'ancestor'],	['蜜   mì  ' ,'honey'],	['耍   shuǎ  ' ,'to frolic'],	['拼   pīn ' ,'to join together'],	['惜   xī ' ,'to cherish'],	['忠   zhōng ' ,'loyal'],	['策   cè ' ,'policy'],	['鼻   bí  ' ,'nose'],	['钻   zuān ' ,'to drill'],	['池   chí ' ,'pond; reservoir'],	['虚   xū ' ,'emptiness; modest'],	['桑   sāng  ' ,'mulberry tree'],	['拾   shí ' ,'to collect'],	['泳   yǒng  ' ,'to dive; swim'],	['频   pín ' ,'frequently'],	['尖   jiān  ' ,'sharp; acute'],	['申   shēn ' ,'to extend; to state'],	['违   wéi ' ,'to disobey'],	['零   líng ' ,'zero'],	['诊   zhěn  ' ,'to diagnose'],	['嘘   xū  ' ,'to exhale'],	['惧   jù  ' ,'to fear'],	['拯   zhěng  ' ,'to help; to save'],	['痕   hén  ' ,'scar'],	['批   pī ' ,'to criticize'],	['绿   lǖ ' ,'green'],	['乘   chéng ' ,'to ride'],	['佳   jia ' ,'beautiful'],	['熊   xióng ' ,'bear'],	['辣   là  ' ,'hot; spicy'],	['躺   tǎng  ' ,'to lie down'],	['祈   qí  ' ,'to pray'],	['肥   féi  ' ,'fat; plump'],	['址   zhǐ ' ,'location'],	['占   zhān ' ,'to divine'],	['络   luò ' ,'net'],	['掩   yǎn  ' ,'to cover'],	['省   shěng ' ,'to save; province'],	['羊   yáng ' ,'sheep'],	['荒   huāng  ' ,'wasteland'],	['督   dū ' ,'to supervise'],	['撤   chè  ' ,'to omit'],	['胖   pàng ' ,'fat'],	['辞   cí  ' ,'words'],	['增   zēng ' ,'to increase; add'],	['援   yuán ' ,'to help'],	['郎   láng ' ,'young man'],	['献   xiàn ' ,'to offer'],	['擦   cā  ' ,'to wipe'],	['农   nóng ' ,'agriculture'],	['邪   xié ' ,'demonic; evil'],	['姻   yīn  ' ,'marriage'],	['恢   huī  ' ,'to restore'],	['描   miáo ' ,'to copy'],	['匹   pǐ ' ,'mw. for horses'],	['软   ruǎn ' ,'soft; flexible'],	['埋   mái ' ,'to bury'],	['惨   cǎn ' ,'miserable'],	['洋   yáng ' ,'ocean'],	['纯   chún ' ,'pure'],	['浴   yù  ' ,'to bathe'],	['贴   tiē ' ,'to paste; to post'],	['尉   wèi  ' ,'officer'],	['略   lüè ' ,'summary; strategy'],	['符   fú ' ,'symbol; charm'],	['侵   qīn  ' ,'to invade'],	['陆   lù ' ,'shore; land'],	['载   zài ' ,'to carry'],	['爬   pá  ' ,'to crawl'],	['挖   wā  ' ,'to dig'],	['骄   jiāo  ' ,'pride'],	['兽   shòu  ' ,'beast'],	['嫁   jià  ' ,'to marry'],	['洁   jié  ' ,'clean'],	['晨   chén  ' ,'early morning'],	['喊   hǎn  ' ,'to shout'],	['奏   zòu ' ,'to play music'],	['灰   huī  ' ,'ashes'],	['摔   shuāi  ' ,'to stumble'],	['羞   xiū  ' ,'disgrace; shy'],	['邻   lín  ' ,'neighbour'],	['椅   yǐ  ' ,'chair'],	['颜   yán ' ,'face'],	['欺   qī  ' ,'cheat'],	['端   duān ' ,'to hold; end points'],	['贺   hè  ' ,'congratulate'],	['茶   chá ' ,'tea'],	['障   zhàng ' ,'to block'],	['慈   cí  ' ,'kind; charitable'],	['仇   chóu ' ,'enemy; hate'],	['厂   chǎng ' ,'factory'],	['怨   yuàn ' ,'to blame'],	['逊   xùn  ' ,'humble; worse'],	['黎   lí  ' ,'dawn; black'],	['剪   jiǎn  ' ,'scissors'],	['春   chūn ' ,'Spring'],	['额   é ' ,'forehead'],	['豆   dòu ' ,'bean'],	['罢   bà ' ,'to stop; to suspend'],	['裂   liè  ' ,'crack'],	['挡   dǎng ' ,'to obstruct'],	['偏   piān ' ,'to lean; oblique'],	['糊   hù  ' ,'paste'],	['卧   wò ' ,'to crouch'],	['敲   qiāo  ' ,'to strike'],	['丧   sàng  ' ,'to lose'],	['乌   wū ' ,'crow'],	['购   gòu ' ,'to purchase'],	['域   yù ' ,'field; region'],	['闲   xián ' ,'idle'],	['宇   yǔ ' ,'universe'],	['姓   xìng ' ,'surname'],	['葬   zàng ' ,'to bury (dead)'],	['党   dǎng ' ,'party; association'],	['售   shòu ' ,'to sell'],	['涂   tú ' ,'to apply (paint)']]
  
    
      
words_ja_hiragana = [
    ['う ら ち ぢ','u ra chi ji'],
    ['れ わ か  が','re wa ka ga'],
    ['き ぎ さ ざ','ki gi sa za'],
    ['く ぐ','ku gu'],
    ['け げ','ke ge'],
    ['こ ご','ko go'],
    ['し じ','shi ji'],
    ['す ず', 'su zu'],
    ['せ ぜ', 'se ze'],
    ['そ ぞ','so zo'],
    ['に た だ','ni ta da'],
    ['つ づ','tsu zu'],
    ['て で','te de'],
    ['と ど','to do'],
    ['の め ぬ ね お あ','no me nu ne o a'],
    ['な は ば ぱ','na ha ba pa'],
    ['ほ ぼ ぽ','ho bo po'],
    ['ま よ', 'ma yo'], 
    ['ひ び ぴ','hi bi pi'],
    ['ふ ぶ ぷ','fu bu pu'],
    ['へ ベ ぺ','he be pe'],
    ['い り み	','i ri mi'],
    ['も む','mo mu'],
    ['や ゆ','ya yu'],
    ['ろ る','ro ru'],    
    ['を','(w)o'],
    ['え ん','e n'],
    ]

words_ja_pronouns = [
	['私 watashi','i'],
    ['あなた anata','you'],
    ['彼 kare','he'],
    ['彼 女 kanojo','she'],
    ['私たち watashi-tachi','we'],
    ['彼 ら karera','they']]

words_ja_hiragana_particles = [
    ['私...  (my)','no'],
    ['これは    私...(that is MINE; possessive particle)','no'],
    ['私は    野菜...   食べます。(I will eat VEGETABLES; object particle)','wo'],
    ['彼は  学校...  行きました。  (He went TO school; target particle)','ni'],
    ['猫は    庭...  います。 (The cat is IN the garden; target particle)','	ni'],
    ['私は    学校...    勉強しました。 (I studied AT school; contextual particle)','de'],
    ['私は    自転車...  帰りました。(I went home BY bicycle; contextual particle)','de'],    
    ['私は    小説...   手紙を   書かきます。(I will write a letter AND a novel; connecting particle)','to'],
    ['私は     学生だ...     言いました。(I said THAT I am a student; phrasing a clause)','to'],
    ['マイク...    水を   飲みました。 (Mike also drank water (as did someone else); inclusive particle)','mo'],
    ['マイクは     水...   飲みました。 (Mike also drank water (on top of drinking sth else); inclusive particle)	','mo'],
    ['山田さん   は    先生   です... . (Is Yamada-san a teacher?; question particle)','ka'],
    ['ロバートに...       会います。    (I will meet Robert (NOT ANYONE ELSE); topic particle (as for...))','ha'],
    ['沙織は    妹が    やさしいです。  (As for Saori, her younger sister is (THE ONE WHO IS) kind; subject particle, opposite of は="as for …")	','ga'],
    ['明日... . (FROM tomorrow)','ka ra'],
    ['明日.... (UNTIL  tomorrow)','ma de'],
    ['A... B... ...  (A, B, ETCETERA)','ya na do'],
    ['学校へ   行きます。 (I will go TO school, directional particle, ~literature version of the target particle に)','he'],
    ['... (YOU KNOW; ending particle)','yo'],
    ['... (ISNT IT; ending particle)','ne'],
    ['大地も   お祭りに来ます... ... (Daichi is also coming to the festival, RIGHT?; ending particle)','yo ne']
    ]

words_ja_vocab = [    
    ['はい hai','yes'],
    ['いいえ Īe','no'],
    ["こんにちは kon'nichiwa",'hello'],
    ['さようなら sayōnara','goodbye'],
    ['ありがとう arigatō','thanks'],
    ['お願いします	onegaishimasu','please'],
    ['一 (ichi)','one'],
    ['二 (ni)','two'],
    ['三 (san)','three'],
    ['四 (shi, yon)','four'],
    ['五 (go)','five'],
    ['六 (roku)','six'],
    ['七 (shichi, nana)','seven'],
    ['八 (hachi)','eight'],
    ['九 (ku, kyuu)','nine'],
    ['十 (juu)','ten'],
    ['知りません shirimasen',"i don't know"],
    ['時間 jikan','hour'],
    ['日 hi','day'],
    ['学校 gakkō','school'],
    ['家 ie','house'],
    ['店 mise','shop'],
    ['ホテル hoteru','hotel'],
    ['病院 byōin','hospital'],
    ['車 Kuruma','car'],
    ['お金 okane','money'],
    ['人 hito','person'],
    ['男 otoko','man'],
    ['女性 josei','woman'],
    ['子 ko','child'],
    ['水 mizu','water'],
    ['食物 shokumotsu','food'],
    ['道路 dōro','road'],
    ["ここに koko",'here'],
    ["そこ ni",'there'],
    ["多く soko",'much'],
    ["何もない ōku nanimonai",'nothing'],
    ['来る kitaru','to come'],
    ['働く hataraku','to work'],
    ['たべる taberu','to eat'],
    ['話す hanasu','to speak'],
    ['買う kau','to buy'],
    ['眠る nemuru','to sleep'],
    ['取る toru' ,'to take'],
    ['知る shiru','to know'],
    ['する suru','to do'],
    ["ここに来た	koko ni kita",'i came here'],
    ["あなたはここに来るでしょう	anata wa koko ni kurudeshou",'you will come here'],
    ["彼はここに来る	kare wa koko ni kuru",'he comes here'],
    ["お店に行きます	o-ten ni ikimasu",'i go to the shop'],
    ["あなたがそこに行きます	anata ga soko ni ikimasu",'you go there'],
    ["彼はそこに行きました	kare wa soko ni ikimashita",'he went there'],
    ["私は働く	watashi wa hataraku",'i work'],
    ["あなたは働く	anata wa hataraku"	,'you work'],
    ["彼は働く	kare wa hataraku",'he works'],
    ["私は食べ物を食べます	watashi wa tabemono o tabemasu",'i eat food'],
    ["あなたは食べ物を食べます	anata wa tabemono o tabemasu",'you eat food'],
    ["彼は食べ物を食べました	kare wa tabemono o tabemashita",'he ate food'],
    ["私は彼らに話しました	watashi wa karera to hanashimashita",'i spoke to them'],
    ["あなたは話す	anata wa hanasu",'you speak'],
    ["彼が話します	kare ga hanashimasu" ,'he speaks'],
    ["これを買います	watashi wa kore o kōnyū shimasu",'i will buy this'],
    ["あなたは家を買わなかった	anata wa ie o kōnyū shimasendeshita",'you bought no house'],
    ["彼は2軒の家を買う	Kare wa ni-ken no ie o kōnyū shimasu",'he buys two houses'],
    ["私は寝ました	watashi wa nemashita" ,'i slept'],
    ["あなたは眠る	anata wa nemuru",'you sleep'],
    ["彼は寝る	kare wa neru",'he sleeps'],
    ["お金がかかる	watashi wa takusan no okane o torimasu",'i take much money'],
    ["あなたはお金を取りません	anata wa okane o torimasen",'you take no money'],
    ["彼はお金を取った	kare wa okane o totta",'he took money'],
    ["私は何も知りません	watashi wa nani mo shirimasen",'i know nothing'],
    ["あなたはよく知っています	anata wa yoku shitte imasu",'you know much'],
    ["彼はそれを知っています	kare wa sore o shitte imasu",'he knows that'],
    ["私は何もしません	watashi wa nani mo shimasen",'i do nothing'],
    ["あなたはそれをします	anata wa sore o shimasu",'you do that'],
    ["彼は多くのことをします	kare wa ōku no koto o shimasu",'he does much'],
    ["理解できません	rikai dekimasen	",'i do not understand'],
    ]
    

words_tr_cse_admin = [['administration', 'yonetim'], 
                   ['registration', 'kayit'], ['login', 'oturum ac'], ['account','hesap'],
                   ['password','sifre'],['key','parola'], ['to enter a password','sifre girmek'],
                   ['to register','kayit olmak'], ['subscription','abonelik'],
                   ['limited subscription', 'sinirli abonelik'], ['online payment', 'online odeme'],
                   ['application', 'uygulama'], ['to send an email','e-posta gondermek'],
                   ['to receive an email', 'e-posta almak'], ['to access an email account','e-posta hesabina erismek'],
                    ['to have access','erisime sahip olmak'], ['permission','izin'],
                    ['confirmation email','dogrulama maili'], ['administrator','yonetici'],
                    ['moderator', 'moderator'], ['homepage', 'ana sayfa'],
                    ['contact information', 'iletisim bilgileri'], ['service','hizmet'],
                    ['support', 'destek'],['announcements', 'duyurlar'],
                    ['events', 'etkinlikler'],['spreadsheet', 'hesap tablosu'],
                    ['sheet, row, column','sayfa, sira, sutun'],['enter the information in the form', 'bilgileri forma giriniz'],
                    ['publication', 'yayin'],['request','talebi'],['bulletin','bulten'], ['dear ...', 'degerli ...'],['dear members','degerli mesuplar'],
                    ['document','belge'],['licence','ruhsat'],['certificate','sertifika'],['available','mevcut'],['customer','musteri'],
                    ['representative','temsilci'],['to graduate','mezun olmak'],['receipt','makbuz']
                    ]


words_tr_cse_general = [
                ['user interface', 'kullanici arayuzu'],['computer', 'bilgisayar'],['device','cihaz'],
                ['window','pencere'], ['desktop computer','masaustu bilgisayar'], ['laptop', 'dizustu bilgisayar'],
                ['cell phone', 'cep telefonu' ], ['smartphone', 'akilli telefon'], ['tablet','tablet'],
                ['keyboard', 'tus takimi'], ['button','dugme'], ['mouse',	'fare'],
                ['settings','ayarlar'],['configuration','konfigurasyon'],
                ['screen','ekran'],['screen resolution','ekran cozunurlugu'],
                ['mouse click','fare tiklamasi'],['scroll bar','kaydirma cubugu'],
                ['microphone','mikrofon'],['camera','kamera'],
                ['usb stick', 'usb bellek'],['dongle','dongle'],
                ['printer',	'yazici'],['user manual', 'kullanim kilavuzu'],
                ['backspace','geri tusu'],['spacebar', 'bosluk cubugu'],
                ['file', 'dosya'],['to install','yuklemek'],
                ['to update', 'guncellemek'],['update','guncelleme'],
                ['to remove','kaldirmak'],
                ['version', 'surum'],['to save', 'kaydetmek'],
                ['to store', 'saklamak'],['to load', 'yuklemek'],
                ['to move', 'tasimak'],['to exit', 'cikmak'],
                ['to delete', 'silmek'],['to rename', 'yeniden adlandirmak'],
                ['to format', 'bicimlendirmek'],['to backup', 'yedekleme yapmak'],
                ['internet browser', 'internet tarayicisi'], ['favorites', 'favoriler'],
                ['to download', 'indirmek'],['downloads', 'indirilenler'],
                ['to upload', 'yuklemek'],['uploads', 'yuklemeler'],
                ['download limit','indirme siniri'],['bookmarks', 'yer imleri'],
                ['appearance',	'gorunum'],['search engine','arama motoru'],
                ['search results','arama sonuclari'],['plugins', 'eklentiler'],
                ['screenshot','ekran goruntusu'],['autocorrection','oto duzeltme'],
                ['perfect','mukemmel'],['imperfect','kusurlu'],['noble','asil'],
                ['partner','asil'],['total','toplam'],['most sentences are perfect','cogu cumle mukemmel'],
                ['clothes','giyisi'],['to research','arastirmak'],['bakan','minister'],
                ['environment','ortam'],['should i explain it?','aciklamali miyim'],
                ['to share','paylasmak'],['i have no education with them in common','onlarla ortak bir egitim yok'],
                ['live broadcast','canli yayin'],['the news is related to military service','haberler askerlik ile ilgili'],
                ['the forest is burning','orman yaniyor'],['fire alarm','yangin alarmi']                
                ]

words_tr_cse_network = [['network', 'ag'], ['security', 'guvenlik'],
                ['network protocol', 'ag protokolu'], ['encryption', 'sifreleme'],
                ['wireless', 'kablosuz'], ['bandwidth','bant genisligi'],
                ['vulnerability','acigi'], ['virus','virus'], ['to connect','baglanmak'],
                ['malware', 'kotucul yazilim'], ['ransomware', 'fidye yazilimi'],
                ['virus scanner','virus tarayici'], ['internet connection', 'internet baglantisi'],
                ['backend developer', 'arka uc gelistirici'], ['frontend developer', 'on uc gelistirici'],
                ['firewall', 'ates duvari'], ['database', 'veri tabani'],
                ['modem','modem'],['website', 'internet sitesi'],['provider','saglayici'],
                ['host', 'ana sistem'], ['server', 'sunucu'],
                ['client', 'istemci'], ['domain name', 'alan adi'],
                ['hacker', 'korsan'], ['antenna', 'anten'], ['transmission','iletim'], 
                ]

words_tr_cse_maths = [
                ['mathematics', 'matematik'],['ones and zeros','birler ve sifirlar'],
                ['to calculate', 'hesaplamak'], 
                ['summation', 'toplama'], ['subtraction', 'cikarma'],
                ['multiplication','carpma islemi'], ['inner product','ic carpim'],
                ['division','bolunme'], ['one plus one equals two', 'bir arti bir esittir iki'],
                ['minus one is smaller than zero','eksi bir sifirdan kucuktur'], ['zero times minus one equals zero','sifir carpi eksi bir esittir sifir'],
                ['the root of four equals two or minus two','dordun koku, iki veya eksi ikiye esittir'], ['the square of two equals four',	'ikinin karesi dorde esittir'],
                ['two to the power three equals eight', 'iki uce esit sekiz'], ['one over eight equals zero point one two five','sekizden bir, sifir noktasi bir iki bese esittir'],
                ['function', 'fonksiyon'], ['point, line, plane, volume','nokta, cizgi, duzlem, hacim'],
                ['seven dimensional', 'yedi boyutlu'], ['linear','dogrusal '],
                ['linear combination','dogrusal katisim'], ['definition','tanim'],
                ['proof', 'tanit'], ['notation', 'gosterim'], ['variable', 'degisken'],
                ['imaginary axis', 'sanal eksen'], ['derivative','turev'],
                ["the derivative of 2x equals 2","2x'in turevi ikiye esittir"],['integration',	'entegrasyon'],
                ['integral','integral'], ['minimum value', 'minimum deger'], ['absolute value',	'mutlak deger'],
                ['size','boyut'], ['amount','miktar'], ['number','sayi'], ['scalar','sayil'],
                ['real number', 'gercek sayi'], ['complex number',	'karmasik sayi'],
                ['set', 'kume'], ['subset','altkume'], ['even, uneven', 'cift, tek'],
                ['finite, infinite','sonlu, sonsuz'], ['an infinite set of even numbers','sonsuz bir cift sayilar kumesi'],
                ['matrix', 'matris'], ['determinant', 'belirtec'], ['eigenvalue',	'ozdeger'],
                ['eigenvector', 'ozvektor'], ['subspace','altuzay'], ['basis of a space',	'uzayin dogurayi'],
                ['independent', 'bagimsiz'], ['tensor','tensor'], ['diagonal', 'diyagonal'],
                ['intersection', 'kavsak'], ['inversion','evirme'], ['inverted matrix', 'ters matris'],
                ['parameter','parametre'], ['variable', 'degisken'], ['variance', 'degisinti'],
                ['vector','vektor'], ['angle','aci'], ['integer', 'tamsayi'], ['calculus','kalkulus'],
                ['linear algebra', 'lineer cebir'], ['abstract algebra','soyut cebir'],
                ['nonlinear dynamics','dogrusal olmayan dinamik'], ['statistics','istatistik'],
                ['probabilistic','olasilik'], ['distribution', 'dagilim'], ['percent', 'yuzde'],
                ['unknown value','bilinmeyen deger'], ['average', 'ortalama'], ['axis', 'eksen'],
                ['symmetrical', 'bakisik'],['scale', 'olcek'], ['to scale', 'olceklemek'],
                ['continuous','surekli'], ['discrete', 'ayrik'], ['discrete series', 'ayrik seri'],
                ['cosine','kosinus'], ['random', 'rastgele'], ['vertical', 'dusey'],['horizontal','yatay']
                ]

words_tr_course_1 = [['about ...','... hakkinda'],
['about ...','... ait'],
['according to me','bence'],
['according to me','bana gore'],
['always','hep'],
['all the time','her zaman'],
['always','daima'],
['continuous','surekli'],
['announcement','ilan'],
['before','once'],
['firstly','evvela'],
['black','siyah'],
['dark','kara'],
['body','vucut'],
['body size','beden'],
['ceremony','toren'],
['consequence','sonuc'],
['effect','etki'],
['dirty','kirli'],
['filthy','pis'],
['doctor','hekim'],
['document','evrak'],
['document','belge'],
['dream','ruya'],
['effect','etki'],
['influence','tesir'],
['not even ...','... bile degil'],
['even more','hatta daha fazla'],
['he even yelled','hatta bagirdi'],
['autumn','guz'],
['food','yemek'],
['cook','as'],
['gift','hediye'],
['present','armagan'],
['great','ulu'],
['sublime','yuce'],
['guest','misafir'],
['health','saglik'],
['heart','kalp'],
['chest','gogus'],
['breast','yurek'],
['soul','ruh'],
['helpful','yararli'],
['beneficial','faydali'],
['homeland','vatan'],
['dormitory','yurt'],
['house','ev'],
['housing','konut'],
['idea','fikir'],
['thought','dusunce'],
['individual or society','birey veya toplum'],
['interest','ilgi'],
['relevance','alaka'],
['interesting','ilginc'],
['big','buyuk'],
['large','iri'],
['law','hakuk'],
['law of nature','doganin yasasi'],
['statute','kanun'],
['leader','lider'],
['pioneer','onder'],
['commander','kommutan'],
['meaning','anlam'],
['what was the name?','isim neydi?'],
['name and surname','ad ve soyad'],
['nation state','ulus devlet'],
['nation','millet'],
['nature','doga'],
['no ...','hic ...'],
['at no moment in time','hicbir zaman'],
['never','asla'],
['aged','yasli'],
['elderly','ihtiyar'],
['poor','yoksul'],
['the poor','fakir'],
['purpose','amac'],
['question','soru'],
['quickly','cabuk'],
['to rush','acele etmek'],
['reason','sebep'],
['motive','neden'],
['reply','cevap'],
['response','yanit'],
['school','okul'],
['sometimes','bazen'],
['occasionally','ara sira'],
['speed','hiz'],
['swiftness','surat'],
['situation','durum'],
['status','hal'],
['story','hikaye'],
['narrative','oyku'],
['student','ogrenci'],
['memory','hatira'],
['recollection','hatirlama'],
['sudden','ani'],
['type','tip'],
['kind','tur'],
['usually','genellikle'],
['often','cogu zaman'],
['wet','islak'],
['humid','yas'],
['white','beyaz'],
['word','kelime'],
['promise','soz'],
['wrong','yanlis'],
['error','hata'],
['whether ... or ...','ister ... ister ...' ],
['either ... or ...','ya ... ya ...'],
['neither ... nor ...','ne ... ne ...'],
['counselor','danisman'],
['intended for ...','... yonelik'],
#below are words from my tum dersler study book 1.sinif
['according to the image above','yukaridaki gorsele gore'],
['to divide','bolmek'],
['spatial relationships','uzamsal iliskiler'],
['syllable','hece'],
['around','etrafinda'],
['there are 26 letters in the alphabet','alfabeda 26 harflar var'],
['the lowest','en alcakta'],
['the edges have equal length','kenar uzunluklari esittir'],
['what type of animal?','hayvan cesidi nedir?'],
['choice','tercih'],
['object','nesne'],
['at the end of the line','satirin sonununda'],
['expression','ifade'],
['pattern','oruntu'],
['to reply','yanitlamak'],
['title','baslik'],
['transportation','ulasim'],
['rectangle','dikdortgen'],
['vehicle','arac'],
['variety','cesidi'],
['feature','ozellik'],
['in order of size','boy sirasina'],
['data','veri'],
['entry','giris'],
['to eachother','birbirlerine'],
['to draw','cizmek'],
['counterpart','es'],
['appropriate','uygun'],
['shadow','golge'],
['liquid','sivi'],
['race','yaris'],
['music instruments','muzik aletleri'],
['number','rakam'],
['meaning','anlam'],
['numbers','rakamlar'],
['the rule of the above pattern','yukaridaki oruntunun kurali'],
['one by one','birer birer'],
['tree planting activity','agac dikme etkinligi'],
['to count','saymak'],
['mixed','karisik'],
['the bird lands on the branch','kus dala konar'],
['marble','bilye'],
['similar','benzer'],
['ball','yuvar'],
['length','uzunluk'],
['circle','cember'],
['to measure','olcmek'],
['corner','kose'],
['edge','kenari'],
['straight','duz'],
['square','kare'],
['objects','cisimler'],
['to roll','yuvarlanmak'],
['to collect','toplanmak'],
['increase','artma'],
['decrease','eskilme'],
['quantity','miktar'],
['to specify','belirtmek'],
['triangle','ucgen'],
['icon','simgesi'],
['unit','birim'],
['mind','zihin'],
['method','yontem'],
['the given','verilen'],
['figure','sekil'],
['bag','torba'],
['if','ise'],
['the rest','geri kalan'],
['to solve','cozmek'],
['piggy bank','kumbara'],
['unlu','vowel'],
['explanation','aciklama'],
['which option','hangi secenek'],
['light source','isik kaynagi'],
['opposite meaning','zit anlami'],['well behaved','uslu'],['allowance','harclik'],
['i feed on meat','etle beslenirim'],['fresh','taze'],['wedding','dugun'],
['curious','merak'],['to sneeze','hapsirmak'],['final','nihayet'],
['to drain','akitmak'],['lens','mercek'],['to share','paylasmak'],
['orderly','duzenli'],['unknown','tanimadigi'],['tea break','cay molasi'],
['break','teneffus'],['unity','birlik'],['cooperation','is birlik'],
['responsibility','sorumluluk'],['solidarity','dayanisma'],['respect','saygi'],
['selfishness','bencilik'],['honesty','durustluk'],['emotion','duygun'],
['granddad','dede'],['faucets','musluklar'],['structure','yapisi'],
['occurrence','olay'],['journal','dergi'],['to fly','ucmak'],
['in a row','sira halinde'],['sensitive','duyarli'],['cynical','alayci'],
['rude','kaba'],['to follow the rules','kurallara uymak'],['to behave','davranmak'],
['her hair is straight','onun saclar duz'],['to listen','duymak'],['required','gereken'],
['strangers','tanimadiklar'],['to spill','dokmak'],['to wash','yikamak'],
['kindness','nezaket'],['careless','umursamaz'],['i suppose','herhalde'],
['common feature','ortak ozellik'],['example','ornek'],['to harm','zarar vermek'],
['the seasons mentioned above','yukaridaki bahsedilen mevsimler'],
['lunch','ogle yemegi'],['barn','ahir'],['amount','miktar'],
['those colors do not match','bu renkler eslesmiyor'],
['personal care','kisisel bakima'],['environment','cevre'],['succesful','basarili'],
['to determine','belirlemek'],['importance','onem'],['residential area','yerlesim yeri'],
['a province is larger than a district','bir il bir ilceden daha buyuktur'],
['membership','uyelik'],['request','istek'],['to grow up','yetismek'],
['we produce components','bilesenler uretiyoruz'],['to grow up','yetismek'],
['to raise a child','cocuk yetistirmek'],['product','urun']
]

words_tr_course_2 = [
['to the edges','kenarlarina'],['disasters','afetler'],['poem','siir'],
['robust houses are built','saglam evler yapilir'],
['akarsu','stream'],['to shake','sarsmak'],['precaution','onlem'],
['owner','sahip'],['soil','toprak'],['hidden','sakli'],
['he came to the surface','yuzeye cikti'],['harmony','ahenk'],['struggle','mucadele'],
['backside of the cards','kartlarin arka'],['to establish','kurmak'],['exuberant','coskun'],
['they clapped hands','el cirptilar'],['in front of me','onumde'],['mixed words','karisik kelimeler'],
['miracle','mucizesi'],['comma','virgul'],['legend','efsan'],
['form','bicim'],['to reach','ulasmak'],['to mention','bahsetmek'],
['dozen','duzin'],['pack of 10','deste'],['steps','basamaklar'],
['metin','text'],['our stoves burn','sobalarimiz yanar'],['our guests','konuklarimiz'],
["the downstairs neighbour's kid",'alt kattakli komsunun cocuk'],
['he regularly writes','duzenli olarak yaziyor'],
['my guests','misafirlerim'],['peace','baris'],['he mocked him','onunla alay etti'],
['respect','saygi'],['to spend','harcamak'],['relationship','iliski'],
['advertisement','ilan'],['surface','yuzey'],['to be offended','kusmek'],
['we should keep our room orderly','odamizi duzenli tutmaliyiz'],
['responsibility','sorumluluk'],['opinion','gorus'],
['on the blackboard','tahtaya'],['various problems','cesitli sorunlar'],
['circle','daire'],['common feature','ortak ozellik'],['probably','muhtemelen'],
]
                 
words_tr_crim_1 = [['afraid','korkmus'],['assault','darp'],['beard','sakal'],
['bribe','rusvet'],['bullet','mermi'],['cause','sebep'],['choice','tercih'],
['company',	'sirket'],
['complaint','siyaket'],
['concerning ...' , '... ait'],
['conditional',	'sartli'],
['courage',	'cesaret'],
['crime','suc'],
['danger','tehlike'],
['death','olum'],
['deception','aldatma'],
['decision','karar'],
['drugs','uyusturucu'],
['enthusiasm','sevk'],
['really?',	'harbiden?'],
['officially', 'resmen'],
['given that ...' ,	'madem ... se'],
['guard duty','nobet'],
['weed','esrar'],
['honesty', 'durustluk'],
['if only ...',	'keske ... se'],
['informant','muhbir'],
['interrogation','sorgu'],
['investigation','sorusturma'],
['justice' ,'adalet'],
['killer','katil'],
['lawsuit', 'dava'],
['doorlock','kilit'],
['manager',	'mudur'],
['network',	'ag'],
['obsession','saplanti'],
['apparant','belli'],
['of course','elbette'],
['organization','orgutlenme'],
['permission',	'musaade'],
['perpetrator',	'fail'],
['perverse','sapik'],
['pleasure','zevk'],
['police station','karakol'],
['politics','siyaset'],
['public prosecutor','savci'],
['punishment','ceza'],
['criminals', 'suclular'],
['award','odul'],
['related to ...', '... ilgili'],
['safety','emniyet'],
['secret','sir'],
['sect','tarikat'],
['smuggled','kacak'],
['solution' , 'care'],
['statement','ifade'],
['still','hala'],
['stupid idiot','dangalak'],
['suicide',	'intihar'],
['suspect',	'supheli'],
['task' ,'gorev'],
['transport','tasima'],
['weapon',	'silah'],
['wound','yara'],
['to wound', 'yaralamak'],
['to add', 'eklemek'],
['to catch','yakalamak'],
['to pursue','kovalamak'],
['to strangle','bogmak'],
['to fight', 'kavga etmek'],
['to stalk','takip etmek'],
['to insist','israr etmek'],
['to interrogate','sorgulamak'],
['to participate', 'katilmak'],
['to kick','tekmelemek'],
['to kidnap','kacirmak'],
['to lie','yalan soylemek'],
['to look like','benzemek'],
['to poison','zehirlemek'],
['to rescue','kurtarmak'],
['to search','aramak'],
['to call','aramak'],
['to steal','calmak'],
['to accomplish','basarmak'],
['to threaten','tehdit etmek'],
['alibi','mazeret'],
['justification','gerekce'],
['angry','kizgin'],
['furious','ofkeli'],
['relatives','akraba'],
['corpse','ceset'],
['the dead','olu'],
['criminal record','sabika'],	
['evidence','kanit'],
['proof','delil'],
['finding','bulgu'],
['discovery','kesif'],
['guilty','suclu'],
['culpable','kabahatli'],
['pistol','tabanca'],
['rifle','tufek'],
['jail','hapis'],
['prison','cezaevi'],
['judge','hakim'],
['to judge','yargilamak'],
['lawyer','avukat'],
['jurist','hukukcu'],
['nervous','gergin'],
['tense','sinirli'],
['revenge','intikam'],
['vengeance','oc'],
['spy','casus'],
['mole','kostebek'],
['agent','ajan'],
['testimony','sahitlik'],
['to wittness','taniklik etmek'],
['trace','iz'],
['mark','isaret'],
['trap','tuzak'],
['trick','hile'],
['victim','kurban'],
['witness','sahit'],
['to arrest','tutuklamak'],
['to stop','durdurmak'],
['to attack','hucum etmek'],
['to assault','saldiri yapmak'],
['frankly speaking','dogrusu'],
['actually','aslinda'],
['to escape','kurtulmak'],
['to flee','kacmak'],
['to harass','taciz etmek'],
['to abuse','kotuye kullanmak'],
['to hide','gizlemek'],
['to kill','oldurmek'],
['to commit murder','cinayet islemek'],
['to observe','gozlemek'],
['to spy','gozetlemek'],
['to protect','korumak'],
['to defend','savunmak'],
['to punch','dovmek'],
['to beat','yumruklamak'],
['to rape','tecavuz etmek'],
['to insult','hakaret etmek'],
['to rob','soymak'],['robbery','soygun']]




hist_greece = [
    ['Who founded the 1st Persian empire, the Achaemenid empire, and in which year? \n\nFill the dots in "... in ... BC"','cyrus 559'],
    ['In which year did Cyrus the Great conquer the Greek-inhabited region of Ionia, appointing Greek tyrants to rule them? \n\nFill the dots in: ... BC','547'],
    ['In 499 BC, which Persian appointed tyrant of Miletus (in Ionia) secured millitary support from Athens, leading to the 6 year Ionian revolt against Persian rule, and eventually the 1st Persian invasion in Greece of 492 BC?','Aristagoras'],
    ['Which Achaemenid king undertook the 1st Persian invasion of Greece to take revenge after the Ionian revolt of 499 BC?','darius'],
    ['In which year did the Persians do a failed invasion on Greece, igniting the Delian league to keep Ionia free? \n\nFill the dots in "... BC"','478'],
    ['The Greco-Persian wars occurred during the ...st/nd half of the ...th century BC? \nWrite: ... ... (2 numbers)','1 5'],
    ['In 490 BC the Persian kind Darius I failed his 1st invasion of Greece, even though the Greek forces were far outnumbered. What is the name of this battle? Write the name of the Attic town at which it occurred','marathon'],
    ['Which Achaemenid king, who was the son of Darius, led the 2nd (failed) Persian invasion of Greece, and when? \n\nFill the dots in: ... in ... BC','xerxes 480'],
    ['Which 5th c BC Greek author from Halicarnassus (Bodrum) invented history by tracing back the origins of the Greco-Persian wars not by myth but by explanations; earning him the title philobarbaros for not being pro-Greek enough?','herodotus'],
    ['During the 2nd Persian invasion of Greece, at which city did king Leonidas of Sparta resist the Persians for 3 days, after which the Persians won and destroyed Athens; and in which year was this? \n\nFill the dots in: At ... in ... BC','thermopylae 480'],
    ['During the 2nd Persian invasion of Greece, the Persian navy lost many ships in the narrow straits of which island near Athens, leading to the final Persian retreat from Europe; and in which year was this? \n\nFill the dots in: At ... in ... BC','salamis 479'],
    ['Which years are considered to be the golden age of Athens? \n\nFill the dots in "...-... BC"','480 404'],
    ['Who led Athens from the 2nd half of the golden age of Athens up until the 1st part of the peloponnesian war?','pericles'],
    ['What was the name of the alliance of city states from 6th-4th c. BC, located in and named after the large southern Greek peninsula with Arcadia in the middle?','pelopponesian league'],
    ['Which city state located in Laconia in the south east of the Pelopponese led the peloponnesian league?', 'sparta'],
    ['What was the name of the association of Greek city states, founded in 478 BC, and led by Athens?','delian league'],
    ['In which years did the Peloponnesian war start and end? \n\nFill the dots in "...-... BC"','431 404'],
    ['Who attacked who during the 1st of the 3 phases of the Peloponnesian war? Write as "... attacked ..."','sparta attacked athens'],
    ['Who led a failed attack on who during the 2nd of the 3 phases of the Peloponnesian war, and at which Sicilian city? Write as "... attacked ... at ..."','athens attacked sparta at syracuse'],
    ['From which empire did sparta receive support during the last phase of the peloponesian war, resulting in rebellions in Ionia? \n\nFill in the dots: the ... empire.','achaemenid'],
    ['Who won the peloponesian war and who lost it?\n\nFill in the dots: ... won ... lost','sparta athens'],
    ['Which 2 city states demanded destruction and enslavement of Athens after the peloponesian war? \nName the Peloponnesian state 1st and the central Greek state 2nd. \nWrite: ... and ...','corinth and thebes'],
    ['Which city state refused destruction and enslavement of Athens after the peloponesian war?','sparta'],
    ['The name "Peloponnesian war" reflects Athens centered sympathies; the Peloponesians would have named it after the peninsula where Athens is located as "the ... war"', 'attic'],
    ]

hist_other = [
    ['What was the name of the 2nd (Hellenistic) Persian empire from 312 to 63 BC?','seleucid'],
    ['What was the name of the 3rd (Iranian) Persian empire during 247 to 224 AD?','parthian'],  
    ['What was the name of the 4th (Neo-)Persian empire during 224 to 651 AD?','sasanid'],
    ['The Battle of Hastings began the Norman conquest of England. In which year? ... AD.\n\nFill in the dots.', '1066'],
    ['Black Death was a bubonic plague pandemic occurring in Afro-Eurasia around which year? Around ... AD. Round off in decades.', '1350'],    
    ]

hist_islam = [    
    ['Around which year AD was the prophet Muhammad at half of his life? Round off in full decades:', '600'],
    ['Order the following 3 caliphates, that followed after Mohameds death in 632 AD, chronologically: umayyad (u), rashidun(r), abbasid(a). Write the 3 letters.','r u a'],
    ["After Mohammeds death (632 AD) the ... caliphate started but lasted only for 3 decades. \nIt was followed by the ... caliphate until 750 AD. \nIn that year, the Abbasid Caliphate started, which lasted until the Mongol destruction of Baghdad in 1258 AD. \nHowever, in 1261 AD the Abbasids army, called '...', did re-establish the Abbasid caliphate in Cairo. \n\nFill in the dots (3x).",'Rashidun Umayyad Mamluks'],
    ['After Mohammeds death (... AD) the Rashidun caliphate started but lasted only for 3 decades. \nIt was followed by the Umayyad caliphate until ... AD. \nIn that year, the Abbasid Caliphate started, which lasted until the Mongol destruction of Baghdad in 1258 AD. \nHowever, in ... AD the Abbasids army of Mamluks did re-establish the Abbasid caliphate in Cairo. \n\nFill in the dots (3x).','632 750 1261'],
    ['Four Sunni schools of Islamic jurisprudence (fiqh), all based on Quran + Hadiths and founded ~800AD: \n... (Ottomans, largest), \nShafi (Asia, Kurds), \nMaliki (Maghreb), and \nHanbali (Saudi, traditionalist, critical of Kalam)','hanafi'],
    ['Four Sunni schools of Islamic jurisprudence (fiqh), all based on Quran + Hadiths and founded ~800AD: \nHanafi (Ottomans, largest), \n... (Asia, Kurds), \nMaliki (Maghreb), and \nHanbali (Saudi, traditionalist, critical of Kalam)','shafi'],
    ['Four Sunni schools of Islamic jurisprudence (fiqh), all based on Quran + Hadiths and founded ~800AD: \nHanafi (Ottomans, largest), \nShafi (Asia, Kurds), \n... (Maghreb), and \nHanbali (Saudi, traditionalist, critical of Kalam)','maliki'],
    ['Four Sunni schools of Islamic jurisprudence (fiqh), all based on Quran + Hadiths and founded ~800AD: \nHanafi (Ottomans, largest), \nShafi (Asia, Kurds), \nMaliki (Maghreb), and \n... (Saudi, traditionalist, critical of Kalam)','hanbali'],
    ['What is the Arabic name for Sunni schools of Islamic jurisprudence?', 'fiqh'],
    ['Around 750 AD, the ... rulers relocated to the Maghreb (i.e. North-West Africa) and later Al-Andalus (Spain) taking Mu’tazilite thought and Maliki jurisprudence with them.\n\nFill in the dots (1x)','umayyad'],
    ['Around 750 AD, the umayyad rulers relocated to the Maghreb (i.e. North-West Africa) and later Al-... (Spain) taking Mu’tazilite thought and Maliki jurisprudence with them.\n\nFill in the dots (1x)','andalus'],
    ['Around 750 AD, the umayyad rulers relocated to the Maghreb (i.e. North-West Africa) and later Al-Andalus (Spain) taking Mu’tazilite thought and ... jurisprudence with them.\n\nFill in the dots (1x)','maliki'],
    ['Around 750 AD, the umayyad rulers relocated to the ... (i.e. North-West Africa) and later Al-Andalus (Spain) taking Mu’tazilite thought and Maliki jurisprudence with them.\n\nFill in the dots (1x)','maghreb'],
    ['As a result of the 8th century Umayyad relocation Mu’tazilites still exist in the 21st century in the ... (i.e. North-West Africa).\n\nFill in the dots (1x)','maghreb'],
    ['Shia Islam can be divided in 2 main groupings: ... and Twelvers.\n\nFill in the dots (1x).','ismailis'],
    ['Shia Islam can be divided in 2 main groupings: Ismailis and ... .\n\nFill in the dots (1x).','twelvers'],
    ['Shia Islam can be divided in 2 main groupings: i.. and t.. . Which of these forms the largest group? ','twelvers'],
    ['Shia Islam holds that Muhammad designated his son-in-law ... as his successor and Imam after him.\n\nFill in the dots (1x).','ali'], 
    ['Sunni Islam holds that Muhammad did not appoint a successor before his death and considers ... ... to be the rightfully appointed caliph by a group of senior Muslims.\n\nFill in the dots (first + last name)','abu bakr'],
    ['The century of ... rule (~950-1050) was an interlude between the rule of the Abbasid Caliphate and the Seljuk empire.\n\nFill in the dots (1x).','buyid'],
    ['The century of Buyid rule (~950-1050) was an interlude between the rule of the Abbasid Caliphate and the ... empire.\n\nFill in the dots (1x).','seljuk'],
    ['The Seljuks were converted to Islam in the year ... AD in what is now Khazachstan.\n\nFill in the dots (1x).','985'],
    ['In the year ... AD, Toghrul bey, the founder of the Seljuk empire, convinced the Abbasid caliph in a chaotic Baghdad to accept him as Sultan (1x).','1055'],
    ['In the year 1050 AD, Toghrul bey, the founder of the ... empire, convinced the Abbasid caliph in a chaotic Baghdad to accept him as Sultan (1x).','seljuk'],
    ['In the year 1050 AD, Toghrul bey, the founder of the Seljuk empire, convinced the Abbasid caliph in a chaotic Baghdad to accept him as ... .','sultan'],
    ['By 1194 AD the Seljuk empire had been supplanted by the ... empire.','khwarazmian'],
    ['After the Seljuk dynasty was already supplanted in 1194 by the Khwarazmian empire , the Mongols invaded what was left of them in Anatolia in the 1260s and divided it into small emirates called ... .','beyliks'], 
    ['The monarchs of the Buyid dynasty belonged to the ... branch of Islam.','shia'], 
    ['The monarchs of the Buyid dynasty ruled between ~950-1050, were Shia muslims and called themselves not caliph but ...','emir'], 
    ['The monarchs of the Buyid dynasty ruled between ...-..., were Shia muslims.\n\nFill in the dots, round years to 50yrs: ... ...','950 1050'], 
    ['The Shia Buyids enforced no religious view upon their subjects, they let the S.. Abbasids retain the caliphate, but deprived their caliph of secular power. \n\nFill in the dots.','sunni'],
    ['Baghdad was founded in the 8th century by the Abbasids who were still a ruling class when the Mongols sacked Baghdad in ... AD.\n\nFill in the dots (1x).','1258'],
    ]

hist_early = [
    ["In chronological order (in million years ago): \n\nAustralopithecus (4-2 mya), \nHomo Erectus (2-0.1 mya), \nHomo Heidelbergensis (0.7-0.2 mya), \nHomo Neanderthalensis (...-... mya), \nDenisova (0.3-0.015), \nHomo ... (0.3-0 mya).\n\nFill in the missing words or numbers.","0.3-0.04 sapiens"],
    ["In chronological order (in million years ago): \n\n... (4-2 mya), \nHomo Erectus (2-0.1 mya), \nHomo Heidelbergensis (0.7-0.2 mya), \nHomo Neanderthalensis (0.3-0.04 mya), \nDenisova (0.3-0.015), \nHomo Sapiens (...-... mya).\n\nFill in the missing words or numbers.","australopithecus 0.3-0"],
    ["In chronological order (in million years ago): \n\nAustralopithecus (4-2 mya), \nHomo ... (2-0.1 mya), \nHomo Heidelbergensis (0.7-0.2 mya), \nHomo Neanderthalensis (0.3-0.04 mya), \nDenisova (...-...), \nHomo Sapiens (0.3-0 mya).\n\nFill in the missing words or numbers.","erectus 0.3-0.015"],
    ["In chronological order (in million years ago): \n\nAustralopithecus (4-2 mya), \nHomo Erectus (2-0.1 mya), \nHomo Heidelbergensis (...-... mya), \nHomo Neanderthalensis (0.3-0.04 mya), \n... (0.3-0.015), \nHomo Sapiens (0.3-0 mya).\n\nFill in the missing words or numbers.","0.7-0.2 denisova"],
    ["In chronological order (in million years ago): \n\nAustralopithecus (4-2 mya), \nHomo Erectus (2-0.1 mya), \nHomo ... (0.7-0.2 mya), \nHomo Neanderthalensis (0.3-0.04 mya), Denisova (0.3-0.015), \nHomo Sapiens (...-... mya).\n\nFill in the missing words or numbers.","heidelbergensis 0.3-0"],
    ["In chronological order (in million years ago): \n\nAustralopithecus (...-... mya), \nHomo Erectus (2-0.1 mya), \nHomo Heidelbergensis (0.7-0.2 mya), \nHomo ... (0.3-0.04 mya), Denisova (...-...), \nHomo Sapiens (0.3-0 mya).\n\nFill in the missing words or numbers.","4-2 neanderthalensis 0.3-0.015"],
    ['The ... lived 4-2 million years ago and stayed in South East Africa. Homo ..., who lived 2-0.1 mya were the first to leave Africa, and reached China.','australopithecus erectus'],
    ['The Late Bronze Age collapse started started a transition towards the iron age, around which year? ... BC. \nRound off in full centuries.','1200'],
    ]

phil_presoc = [  
    ["7 Presocratic philosophers: \n\n(600 BC) Thales of Milete (Ionia): \n      -First to break with mythology to explain the world. \n(550 BC) Pythagoras of Samos: \n      -Reformer of Orphism in Italy (as the poet Orpheus was a reformer of the religion of Dionysus)\n      -The first who thought of earth as spherical\n     -Taught t.. of soul  \n(500 BC) Heraclitus of Ephesus (Ionia): \n      -Called Pythagoras fraud \n      -Insisted on change/flux \n(450 BC) Parmenides (from Italy): \n      -nonbeing cannot come to be => c..=impossible \n(450 BC) Empedocles (from Sicily): \n      -Combined Pythagoras with Ionians \n      -Claimed to be a God \n      -Established ... elements \n(450 BC) Leucippus (Ionian): \n      -Founded atomism \n      -Movement exists => vacuum (nonbeing) exists \n(450 BC) Anaxagoras from Klazomenai (Ionia): \n      -1st philosopher to move to Athens \n      -Alternative to atomism: everything is in everything. \n\n Fill in the dots (3x).","transmigration change 4"],   	
   	["7 Presocratic philosophers: \n\n(600 BC) Thales of Milete (Ionia): \n      -First to break with mythology to explain the world. \n(550 BC) Pythagoras of Samos: \n      -Reformer of Orphism in Italy (as the poet Orpheus was a reformer of the religion of Dionysus)\n      -The first who thought of earth as spherical \n      -Taught transmigration of soul \n(500 BC) Heraclitus of Ephesus (Ionia): \n      -Called P.. fraud \n      -Insisted on change/flux \n(450 BC) Parmenides (from Italy): \n      -nonbeing cannot come to be => change=impossible \n(450 BC) Empedocles (from Sicily): \n      -Combined Pythagoras with Ionians \n      -Claimed to be a God \n      -Established 4 elements \n(450 BC) Leucippus (Ionian): \n      -Founded a.. \n      -Movement exists => vacuum (nonbeing) exists \n(450 BC) Anaxagoras from Klazomenai (Ionia): \n      -1st philosopher to move to A.. \n      -Alternative to atomism: everything is in everything. \n\n Fill in the dots (3x).","Pythagoras atomism Athens"],   	
   	["7 Presocratic philosophers: \n\n(600 BC) Thales of Milete (Ionia): \n      -First to break with mythology to explain the world. \n(550 BC) Pythagoras of Samos: \n      -Reformer of O.. in Italy (as the poet Orpheus was a reformer of the religion of Dionysus)\n      -The first who thought of earth as spherical \n      -Taught transmigration of soul \n(500 BC) Heraclitus of Ephesus (Ionia): \n      -Called Pythagoras fraud \n      -Insisted on change/flux \n(450 BC) Parmenides (from Italy): \n      -n.. cannot come to be => change=impossible \n(450 BC) Empedocles (from Sicily): \n      -Combined ... with Ionians \n      -Claimed to be a God \n      -Established 4 elements \n(450 BC) Leucippus (Ionian): \n      -Founded atomism \n      -Movement exists => vacuum (nonbeing) exists \n(450 BC) Anaxagoras from Klazomenai (Ionia): \n      -1st philosopher to move to Athens \n      -Alternative to atomism: everything is in everything. \n\n Fill in the dots (3x).","Orphism nonbeing Pythagoras"],   	
   	["7 Presocratic philosophers: \n\n(600 BC) Thales of Milete (Ionia): \n      -First to break with mythology to explain the world. \n(550 BC) ... of Samos: \n      -Reformer of Orphism in Italy (as the poet Orpheus was a reformer of the religion of Dionysus)\n      -The first who thought of earth as spherical \n      -Taught transmigration of soul \n(500 BC) Heraclitus of Ephesus (Ionia): \n      -Called Pythagoras fraud \n      -Insisted on change/flux \n(450 BC) ... (from Italy): \n      -nonbeing cannot come to be => change=impossible \n(450 BC) ... (from Sicily): \n      -Combined Pythagoras with Ionians \n      -Claimed to be a God \n      -Established 4 elements \n(450 BC) Leucippus (Ionian): \n      -Founded atomism \n      -Movement exists => vacuum (nonbeing) exists \n(450 BC) Anaxagoras from Klazomenai (Ionia): \n      -1st philosopher to move to Athens \n      -Alternative to atomism: everything is in everything. \n\n Fill in the missing from Magna Graecia (3x).","Pythagoras Parmenides Empedocles"],
   	["7 Presocratic philosophers: \n\n(600 BC) ... of Milete (Ionia): \n      -First to break with mythology to explain the world. \n(550 BC) Pythagoras of Samos: \n      -Reformer of Orphism in Italy (as the poet Orpheus was a reformer of the religion of Dionysus)\n      -The first who thought of earth as spherical \n      -Taught transmigration of soul \n(500 BC) ... of Ephesus (Ionia): \n      -Called Pythagoras fraud \n      -Insisted on change/flux \n(450 BC) Parmenides (from Italy): \n      -nonbeing cannot come to be => change=impossible \n(450 BC) Empedocles (from Sicily): \n      -Combined Pythagoras with Ionians \n      -Claimed to be a God \n      -Established 4 elements \n(450 BC) ... (Ionian): \n      -Founded atomism \n      -Movement exists => vacuum (nonbeing) exists \n(450 BC) ... from Klazomenai (Ionia): \n      -1st philosopher to move to Athens \n      -Alternative to atomism: everything is in everything. \n\n Fill in the missing Ionian Presocratics (4x).","Thales Heraclitus Leucippus Anaxagoras"],
   	["7 Presocratic philosophers: \n\n(600 BC) Thales of Milete (Ionia): \n      -First to break with mythology to explain the world. \n(550 BC) Pythagoras of Samos: \n      -Reformer of Orphism in Italy (as the poet Orpheus was a reformer of the religion of Dionysus)\n      -The first who thought of earth as spherical \n      -Taught transmigration of soul \n(500 BC) Heraclitus of Ephesus (Ionia): \n      -Called Pythagoras fraud \n      -Insisted on change/f.. \n(450 BC) Parmenides (from Italy): \n      -nonbeing cannot come to be => change=impossible \n(450 BC) Empedocles (from Sicily): \n      -Combined Pythagoras with Ionians \n      -Claimed to be a God \n      -Established 4 elements \n(450 BC) Leucippus (Ionian): \n      -Founded atomism \n      -Movement exists => v.. (nonbeing) exists \n(450 BC) Anaxagoras from Klazomenai (Ionia): \n      -1st philosopher to move to Athens \n      -Alternative to atomism: e.. is in everything. \n\n Fill in the dots (3x).","flux vacuum everything"],
    ["7 Presocratic philosophers: \n\n(600 BC) Thales of Milete (Ionia): \n      -First to break with mythology to explain the world. \n(... BC) Pythagoras of Samos: \n      -Reformer of Orphism in Italy (as the poet Orpheus was a reformer of the religion of Dionysus)\n      -The first who thought of earth as spherical \n      -Taught transmigration of soul \n(500 BC) Heraclitus of Ephesus (Ionia): \n      -Called Pythagoras fraud \n      -Insisted on change/flux \n(450 BC) Parmenides (from Italy): \n      -nonbeing cannot come to be => change=impossible \n(... BC) Empedocles (from Sicily): \n      -Combined Pythagoras with Ionians \n      -Claimed to be a God \n      -Established 4 elements \n(450 BC) Leucippus (Ionian): \n      -Founded atomism \n      -Movement exists => vacuum (nonbeing) exists \n(... BC) Anaxagoras from Klazomenai (Ionia): \n      -1st philosopher to move to Athens \n      -Alternative to atomism: everything is in everything. \n\n Fill in the missing years (3x).","550 450 450"],
   	["7 Presocratic philosophers: \n\n(... BC) Thales of Milete (Ionia): \n      -First to break with mythology to explain the world. \n(550 BC) Pythagoras of Samos: \n      -Reformer of Orphism in Italy (as the poet Orpheus was a reformer of the religion of Dionysus)\n      -The first who thought of earth as spherical \n      -Taught transmigration of soul \n(... BC) Heraclitus of Ephesus (Ionia): \n      -Called Pythagoras fraud \n      -Insisted on change/flux \n(450 BC) Parmenides (from Italy): \n      -nonbeing cannot come to be => change=impossible \n(450 BC) Empedocles (from Sicily): \n      -Combined Pythagoras with Ionians \n      -Claimed to be a God \n      -Established 4 elements \n(... BC) Leucippus (Ionian): \n      -Founded atomism \n      -Movement exists => vacuum (nonbeing) exists \n(450 BC) Anaxagoras from Klazomenai (Ionia): \n      -1st philosopher to move to Athens \n      -Alternative to atomism: everything is in everything. \n\n Fill in the missing years (3x).","600 500 450"],
    ['The presocratic philosophers noted that appearances change and began to ask what the thing that changes "really" is. \nWhat was their answer to this question?','substance'],
    ['Parmenides, who founded the Eleatic school, claimed that change is not possible because it requires something to transition from ... into being, while there cannot be ... . Which word comes on the dots (1x).','nonbeing'],
    ['In chronological order, who were the three Eleatic philosophers? Answer: P.. Z.. M..','parmenides zeno melissus'],
    ['It has been claimed that ... of Samos, the last Eleatic philosopher, was the teacher of ..., the atomist.\n\nFill in the dots (2x).','melissus leucippus'],
    ['The Eleatic school (founded by Parmenides) claimed that nothing can change. \nIn response, the atomists claimed that only atoms cannot change. As an alternative, ... , who came from Klazomenai (now Urla), claimed that everything is in everything, i.e. everything is a mixture of everything else in different proportions.\n\nFill in the dots', 'anaxagoras'],
    ['... , who came from Klazomenai (now Urla), went to Athens where he was the first Presocratic philosopher, and befriended Pericles. \nHis student is claimed to be the teacher of Socrates.\n\nFill in the dots.', 'anaxagoras'],
    ["Socrates was the first Western m.. philosopher. \nAfter the Athenians sentenced Socrates to death in 399 BC, Plato started writing his books, portraying his former teacher as the main character. \nPlato also founded the Academy, where A.. became a prominent student. \n\n Fill in the dots (2x).","moral Aristotle"],
    ]
     
phil_plato_general = [
    ["Socrates was the first Western moral philosopher. \nAfter the Athenians sentenced Socrates to death in ... BC, Plato started writing his books, portraying his former teacher as the main character. \nPlato also founded the ..., where Aristotle became a prominent student. \n\n Fill in the dots (2x).","399 academy"],
    ['What is the birth and death year of Plato (rounded by 10 yrs)? \n\nFill in the dots "4..-3.. BC"','420 350'],
    ['Plato was born 1 century before which student of his most famous student died?','alexander the great'],
    ['Plato founded which school?','academy'],
    ['In which year was the Academy destroyed by Roman dictator Sulla? \n\nFill the dots in: .. AD','86'],
    ['What is the name of the nephew of Plato who succeeded Plato as head of the Academy?', 'speusippus'],
    ['Which argumentative technique of conveying information by asking questions is exploited by Socrates in the early works of Plato?', 'elenchos'],
    ['Which rhetorical technique of feigning doubt about ones own status is exploited by Socrates in the early works of Plato?', 'aporia'],
    ['Which 4 books are early (most accessible) works of Plato? In alphabetical order. \nWrite: a.. h.. i.. p..', 'apology hippias ion protagoras'],
    ['Which theme is represented in middle works of Plato?', 'theory of forms'],
    ['Plato does not really use the word "form/morphae" but "eidos" and "idea", who translated it as "form"?','boethius'],
    ['Which 5 books are early middle works of Plato? In alphabetical order. \nWrite: c.. g.. m.. p.. s..', 'cratylus gorgias meno phaedo symposium'],
    ['Which 3 books are late middle works of Plato? In alphabetical order. \nWrite: r.. p.. t..', 'republic parmenides theatetus'],
    ['Which theme is represented in the late (least accessible) works of Plato?', 'pythagoreanism'],
    ['Which 3 books are late (least accessible) works of Plato? In alphabetical order. \nWrite: t.. s.. p..', 'timaeus sophist philebus'],
    ['Which was the most influential book of Plato during the middle ages (both Latin and Arabic)', 'timaeus'],
    ['In the Timaeus, what is the name of the supreme intelligence that causes the cosmos to have self-originated motion?', 'demiurge'],  
    ['According to Timaeus, the geometric shapes tetrahedron, octahedron, icosahedron and cube belonging to which elements respectively? \nWrite: f.. a.. w.. e..', 'fire air water earth'],    
    ['What was the (city) name of the 12th century school, in which the Timeaus was understood to refer to a creatio ex nihilo?','chartres'],
    ['In which book of Plato appears the cave allegory?','republic'],
    ['Which work by Plato describes the following paradox?: "One cannot search for what he knows nor for what he does not know".','meno'],
    ['Which work by Plato is the only one not written in dialogue form, written shortly after Socrates died?', 'apology'],
    ['Does Plato consider the soul to be mortal or immortal?','immortal'],
    ['In which late middle work does Plato start to present a critique of his earlier super-exemplification view of forms?','parmenides'],
    ['Plato claimed that ultimate reality exists not in our physical world, which is changing and imperfect, but rather in the world of Ideas and Ideals. \nWhat is the name of this theory?.','theory of forms'],
    ['Which term is also used synonymously for "theory of forms"? \nTheory of ...','ideas'],    
    ['Plato his theory of forms provides a classical solution to the ... of ... .\n\nFill in the dots.', 'problem universals'],
    ['What is the name of the problem whether shared properties (color, shape) exist beyond the objects and what the nature is of such an existence? The ... ... ...', 'problem of universals'],   
    ['In the book Cratylus, named after a followower of Heraclitus, whose claim that one cannot step twice into the same stream is mentioned by Socrates, Plato describes the ... as used by craftsmen.','archetype'],
    ['In the book Cratylus, named after a followower of ..., whose claim that "one cannot step twice into the same stream" is mentioned by Socrates, Plato describes the archetype as used by craftsmen.','Heraclitus'],
    ['Aristotle writes in his Metaphysics that Plato was influenced by ..., who was a follower of Heraclitus, before he alligned with Socrates.','Cratylus'],
    ['In Symposium, Plato describes the archetype of ...','beauty'],
    ['In Republic, Plato describes ... as the pursuit of the Forms, ... as the love of the Forms, and that the ...-king must rule.','education philosophy philosopher'],
    ['In Republic, Plato describes Metaphor of the Sun: \nThe sun is to sight as ... is to understanding','the good'],
    ['In Republic, Plato describes Allegory of the Cave: \nThe struggle to understand ... is like men in a cave guessing at shadows in firelight.','forms'],
    ['In which dialogue does Plato give the Metaphor of the Sun?','republic'],
    ['In which dialogue does Plato give the Allegory of the Cave?','republic'],
    ['In which dialogue does Plato present the ideal state, covering citizenship, government and society with suggestions for laws imitating the Good, the True, the Just, etc.'],
    ['In Phaedrus, Plato describes ... according to knowledge of the true, and the ... problem in thought and nature.','reincarnation unity'],
    ['In Parmenides, Plato describes that Forms not actually in the thing and gives ... as a solution to the unity problem. \nAnd the nature of this solution is described in the ... ... argument.','participation third man'],    
    ['In Parmenides, Plato describes that Forms cannot actually be in the thing after trying to give ... as a solution to the unity problem. As described in the ... ... argument.','participation third man'],
    ['In Parmenides, in spite of Socrates his inability to defend the theory of Forms against Parmenides his arguments, in a later part Parmenides himself appears to advocate the theory. He insists that without Forms there can be no possibility of ..., and that Socrates was unable to uphold the theory because he has been insufficiently exercised.','dialectic'],     
    ['One dialogue of Plato is notable for portraying Socrates as a student of a lecturer, what is the name of this lecturer (and dialogue) and with which fellow Eleatic philosopher does this lecturer enter into an argument? Answer: ... ...','parmenides zeno'],
    ['In which dialogue does Plato present the third man argument (TMA)?','Parmenides'],
    ['The third man argument in Plato consists of Parmenides speaking to Socrates, and employs the example of ... (Greek word for greatness) to criticise the theory of forms.','megethos'],    
    ['By the time Plato arrives at Parmenides, a Form (F) is committed to 7 principles: \n..., self-predication, non-self-partaking, uniqueness, purity, one/many, oneness.\n\nFill in the dots.','one-over-many'],
    ['By the time Plato arrives at Parmenides, a Form (F) is committed to 7 principles: \none-over-many, ..., non-self-partaking, uniqueness, purity, one/many, oneness.\n\nFill in the dots.','self-predication'],
    ['By the time Plato arrives at Parmenides, a Form (F) is committed to 7 principles: \none-over-many, self-predication, ..., uniqueness, purity, one/many, oneness.\n\nFill in the dots.','non-self-partaking'],
    ['By the time Plato arrives at Parmenides, a Form (F) is committed to 7 principles: \none-over-many, self-predication, non-self-partaking, ..., purity, one/many, oneness.\n\nFill in the dots.','uniqueness'],
    ['By the time Plato arrives at Parmenides, a Form (F) is committed to 7 principles: \none-over-many, self-predication, non-self-partaking, uniqueness, ..., one/many, oneness.\n\nFill in the dots.','purity'],
    ['By the time Plato arrives at Parmenides, a Form (F) is committed to 7 principles: \none-over-many, self-predication, non-self-partaking, uniqueness, purity, ..., oneness.\n\nFill in the dots.','one/many'],
    ['By the time Plato arrives at Parmenides, a Form (F) is committed to 7 principles: \none-over-many, self-predication, non-self-partaking, uniqueness, purity, one/many, ... .\n\nFill in the dots.','oneness'],
    ['In the first part of Parmenides, Plato requires a Form (F) to commit to 7 principles, including: ..., which means: \nFor any plurality of F things, there is a form of F-ness by virtue of partaking of which each member of that plurality is F.\n\nFill in the dots.','one-over-many'],
    ['In the first part of Parmenides, Plato requires a Form (F) to commit to 7 principles, including: ..., which means: \nEvery form of F-ness is itself F.\n\nFill in the dots.','self-predication'],
    ['In the first part of Parmenides, Plato requires a Form (F) to commit to 7 principles, including: ..., which means: \nNo form partakes of itself','non-self-partaking'],
    ['In the first part of Parmenides, Plato requires a Form (F) to commit to 7 principles, including: ..., which means: \nFor any property F, there is exactly one form of F-ness.\n\nFill in the dots.','uniqueness'],
    ['In the first part of Parmenides, Plato requires a Form (F) to commit to 7 principles, including: ..., which means: \nNo form can have contrary properties.\n\nFill in the dots.','purity'],
    ['In the first part of Parmenides, Plato requires a Form (F) to commit to 7 principles, including: ..., which means: \nThe property of being one and the property of being many are contraries.','one/many'],
    ['In the first part of Parmenides, Plato requires a Form (F) to commit to 7 principles, including: ..., which means: \nEvery form is one.\n\nFill in the dots.','oneness'],
    ['Some believe that the third man argument (TMA) of Plato is a "record of honest perplexity". Others think that he means us to reject one of the premises that produces the infinite regress (namely, One-Over-Many, Self-Predication, or Non-Self-Partaking). But it is also possible to avoid the contradictions produced by the TMA by rejecting u... and ... .\n\nFill in the dots (2x).','uniqueness purity'],
    ['In Parmenides, Plato with his TMA that the 7 principles of the Forms are mutually ..., as long as there is a plurality of things that are F.','contradictory'],
    ['Plato starts in his TMA with assuming a plurality of great things, but concludes there must be at least ... forms of greatness. \nRepetition of this reasoning shows that there is an infinite hierarchy of forms of greatness, with each form partaking of the infinite number of forms above it in the hierarchy. According to Plato, anything that partakes of many things must itself be many. So each form in the infinite hierarchy of forms of greatness is many. But then, given Purity and One/Many, it follows that each form in the infinite hierarchy of forms of greatness is not one. This contradicts Oneness.\n\nFill in the dots (1x).','3'],
    ['Plato starts in his TMA with assuming a plurality of great things, but concludes there must be at least 3 forms of greatness. \nRepetition of this reasoning shows that there is an ... hierarchy of forms of greatness, with each form partaking of the ... number of forms above it in the hierarchy. According to Plato, anything that partakes of many things must itself be many. So each form in the ... hierarchy of forms of greatness is many. But then, given Purity and One/Many, it follows that each form in the infinite hierarchy of forms of greatness is not one. This contradicts Oneness.\n\nFill in the dots (1x).','infinite'],
    ['Plato starts in his TMA with assuming a plurality of great things, but concludes there must be at least 3 forms of greatness. \nRepetition of this reasoning shows that there is an infinite ... of forms of greatness, with each form partaking of the infinite number of forms above it in the ... . According to Plato, anything that partakes of many things must itself be many. So each form in the infinite ... of forms of greatness is many. But then, given Purity and One/Many, it follows that each form in the infinite ... of forms of greatness is not one. This contradicts Oneness.\n\nFill in the dots (1x).','hierarchy'],
    ['Plato starts in his TMA with assuming a plurality of great things, but concludes there must be at least 3 forms of greatness. \nRepetition of this reasoning shows that there is an infinite hierarchy of forms of greatness, with each form partaking of the infinite number of forms above it in the hierarchy. According to Plato, anything that partakes of many things must itself be many. So each form in the infinite hierarchy of forms of greatness is many. But then, given Purity and .../Many, it follows that each form in the infinite hierarchy of forms of greatness is not ... . This contradicts ...ness.\n\nFill in the dots (1x).','one'],
    ['Plato starts in his TMA with assuming a plurality of great things, but concludes there must be at least 3 forms of greatness. \nRepetition of this reasoning shows that there is an infinite hierarchy of forms of greatness, with each form partaking of the infinite number of forms above it in the hierarchy. According to Plato, anything that partakes of many things must itself be many. So each form in the infinite hierarchy of forms of greatness is many. But then, given ... and One/Many, it follows that each form in the infinite hierarchy of forms of greatness is not one. This contradicts Oneness.\n\nFill in the dots (1x).','purity'],
    ['Plato starts in his TMA with assuming a plurality of great things, but concludes there must be at least 3 forms of greatness. \nRepetition of this reasoning shows that there is an infinite hierarchy of forms of greatness, with each form partaking of the infinite number of forms above it in the hierarchy. According to Plato, anything that partakes of many things must itself be many. So each form in the infinite hierarchy of forms of greatness is many. But then, given Purity and One/Many, it follows that each form in the infinite hierarchy of forms of greatness is not one. This ... Oneness.\n\nFill in the dots (1x).','contradicts'],
    ['Plato starts in his TMA with assuming a plurality of great things, but concludes there must be at least 3 forms of greatness. \nRepetition of this reasoning shows that there is an infinite hierarchy of forms of greatness, with each form partaking of the infinite number of forms above it in the hierarchy. According to Plato, anything that partakes of ... things must itself be ... . So each form in the infinite hierarchy of forms of greatness is ... . But then, given Purity and One/..., it follows that each form in the infinite hierarchy of forms of greatness is not one. This contradicts Oneness.\n\nFill in the dots (1x).','many'],
    ['Plato starts in his TMA with assuming a plurality of ... things, but concludes there must be at least 3 forms of ...ness. Repetition of this reasoning shows that there is an infinite hierarchy of forms of ...ness, with each form partaking of the infinite number of forms above it in the hierarchy. According to Plato, anything that partakes of many things must itself be many. So each form in the infinite hierarchy of forms of ...ness is many. But then, given Purity and One/Many, it follows that each form in the infinite hierarchy of forms of ...ness is not one. This contradicts Oneness.\n\nFill in the dots (1x).','great'],   
    ['In Phaedo, Plato discusses: The theory of ... (i.e. knowledge of the Forms in soul before birth), the myth of the ..., and the theory of absolute ... . Answer: ... ... ...', 'recollection afterlife beauty'],
    ]


phil_aristotle_general = [
    ['What is the birth and death year BC of Aristotle? \n\nFill the dots in "...-... BC"','384 322'],
    ['Aristotle died in the year after which of his students died?','alexander the great'],
    ['Aristotle founded which school?','lyceum'],
    ['Which word derived from the Greek word for "walkways" is attributed to ancient followers of Aristotle?','peripatetic'],
    ['Who was the successor of Aristotle as the head of the Lyceum?', 'theophrastus'],
    ['Which head of the peripatetic school published around 40 BC the works of Aristotle as we know them now?', 'andronicus of rhodes'],
    ['How large is the estimated proportion of books written by Aristotle that have survived?', '1/3'],
    ['Does Aristotle consider the soul to be mortal or immortal?','mortal'],
    ['Plato is associated with realism (as opposed to nominalism), is the philosophy of Aristotle also realist? yes or no','yes'],
    ]    
phil_aristotle_organon_general = [
    ['What does the word Organon mean?', 'instrument'],
    ['The following 6 works of Aristotle were compiled into his Organon: \n Categies, On Interpretation, Prior Analytics, Posterior Analytics, Topics, Sophistical Refutations.\nWho decided the order of these books in the Organon?', 'Theophrastus'],
    ['Put the 6 books of the Organon in the right order using the 1st letter of the book: s=sophistical refutations, o=on interpretation , t=topics, p=posterior analytics, p=prior analytics, c=categories. E.g.: "s o t p c p"','c o p p t s'],
    ['The following 6 works of Aristotle were compiled into his Organon: \n Categories, On Interpretation, Prior Analytics, Posterior Analytics, Topics, Sophistical Refutations. \nHowever, which of Aristotle his works were included extra in the Organon in the Islamic world?', 'poetics and rhetorics'],
    ['The following 6 works of Aristotle were compiled into his Organon: \n Categories, ... , Prior Analytics, Posterior Analytics, Topics, Sophistical Refutations.\nWhich is the 2nd book of the Organon of Aristotle?','on interpretation'],
    ['The following 6 works of Aristotle were compiled into his Organon: \n Categories, On Interpretation, ..., Posterior Analytics, Topics, Sophistical Refutations.\nWhich is the 3rd book of the Organon of Aristotle?','prior analytics'],
    ['The following 6 works of Aristotle were compiled into his Organon: \n Categories, On Interpretation, Prior Analytics, ..., Topics, Sophistical Refutations.\nWhich is the 4th book of the Organon of Aristotle?','posterior analytics'],
    ['The following 6 works of Aristotle were compiled into his Organon: \n Categories, On Interpretation, Prior Analytics, Posterior Analytics, ..., Sophistical Refutations.\nWhich is the 5th book of the Organon of Aristotle?','topics'],
    ['The following 6 works of Aristotle were compiled into his Organon: \n Categories, On Interpretation, Prior Analytics, Posterior Analytics, Topics, ... .\nWhich is the 6th book of the Organon of Aristotle?','sophistical refutations'],
    ['Which unit of communication is discussed in the Categories?', 'words'],
    ['On which branch of philosophy does the Categories make claims?', 'metaphysics'],
    ['Which unit of communication is discussed in On Interpretation?', 'sentences'], 
    ['On which branch of philosophy does On Interpretation make claims mostly?', 'philosophy of language'],
    ['What is Prior Analytics about? Write English and Greek term separated by a space)?', 'arguments syllogisms'],
    ['On which branch of philosophy does Prior Analytics make claims mostly?', 'logic'],
    ['What is Posterior Analytics about? Write the English and the Greek term separated by a space.', 'demonstration apodeictic syllogisms'],
    ['On which branch of philosophy does Posterior Analytics make claims mostly?', 'epistemology'],
    ['Which works of the Organon of Aristotle are subdived into multiple books? Categories (1), On Interpretation (2), Prior Analytics (3), Posterior Analytics (4), Topics(5), Sophistical Refutations(6). Give the numbers, divided by a space.','3 4 5'],
    ['How many word groups are discussed in the first part of the Categories?', '10'],
    ['Which topic is discussed in the last part of the Categories?', 'square of predication'],
    ['Which topic is discussed in the first part of On Interpretation?', 'square of oppositions'],
    ['Which topic is discussed in the last part of On Interpretation?', 'sea battle argument'],
    ['Which 3 topics are discussed in Book I of Prior Analytics?', 'figures, moods and modal logic'],
    ['A work of which author is discussed by Aristotle in Book II of Prior Analytics?','plato'],
    ['Which topic is discussed in Book I of Posterior Analytics?','demonstration'],
    ['Which 3 topics are discussed in Book II of Posterior Analytics?','questions, causes and first principles'],
    ['Which topic is discussed by Aristotle in Topics?','dialectical syllogisms'],    
    ['Which topic is discussed by Aristotle in Sophistical Refutations?','sophistical syllogisms'],
    ]

phil_aristotle_organon_cat_1 = [       
    ['In which 10 categories does Aristotle divide words?', 'substance quantity quality relation place position state time action affection']
    ]
phil_aristotle_organon_cat_2 = [ 
    ['According to which 2 opposites does Aristotle divide words into 4 groups? Start with "substance"', 'substance non-substance universal individual'],
    ['What kind of features are universal substances?', 'essential'],
    ['What kind of features are individual/particular non-substances?', 'accidental'],
    ['Besides "particular" what is an other adjective for "individual substance"?', 'primary'],
    ['Is "Socrates" a primary or a secondary substance?', 'primary'],
    ['Are accidental features predicated OF or IN primary substances?', 'in'],
    ['Which are the only words that can be predicated OF primary substances?', 'secondary substances'],
    ['In the 2nd part of the Categories, Aristotle divides things along how they can be used for predication: some things can be predicated IN something and other things predicated OF something. What kinds of questions can be answered with IN and which with OF predications? \nWrite: ... ...', 'how what'],
    ]
phil_aristotle_organon_int_1 = [       
    ['What is name for the type of logic that is described in Aristotles Organon?','term logic'],
    ['In which book of Aristotle are the terms for his term logic defined?','on interpretation'],    
    ['The term logic of Aristotle was used until around 1900 when Frege introduced which other type of logic?','predicate logic'],
    ["Aristotle distinguishes in On Interpretation 4 different sentences for building syllogisms: \nA: '... P’s are Q’s.  In First Order Logic (FOL): ꓯx(P(x) → Q(x)).  \nE: No P’s are Q’s. In First Order Logic (FOL): ꓯx(P(x) → ¬Q(x)) \nI: Some P’s are Q’s. In First Order Logic (FOL): ∃x (P(x) ∧ Q(x)) \nO: Some P’s are not Q’s. In First Order Logic (FOL): ∃x(P(x) → ¬Q(x)). \nFill in the dots (1x).","all"],
    ["Aristotle distinguishes in On Interpretation 4 different sentences for building syllogisms: \nA: 'All P’s are Q’s.  In First Order Logic (FOL): ꓯx(P(x) → Q(x)).  \nE: ... P’s are Q’s. In First Order Logic (FOL): ꓯx(P(x) → ¬Q(x)) \nI: Some P’s are Q’s. In First Order Logic (FOL): ∃x (P(x) ∧ Q(x)) \nO: Some P’s are not Q’s. In First Order Logic (FOL): ∃x(P(x) → ¬Q(x)). \nFill in the dots (1x).","no"],
    ["Aristotle distinguishes in On Interpretation 4 different sentences for building syllogisms: \nA: 'All P’s are Q’s.  In First Order Logic (FOL): ꓯx(P(x) → Q(x)).  \nE: No P’s are Q’s. In First Order Logic (FOL): ꓯx(P(x) → ¬Q(x)) \nI: ... P’s are Q’s. In First Order Logic (FOL): ∃x (P(x) ∧ Q(x)) \nO: Some P’s are not Q’s. In First Order Logic (FOL): ∃x(P(x) → ¬Q(x)). \nFill in the dots (1x).","some"],
    ["Aristotle distinguishes in On Interpretation 4 different sentences for building syllogisms: \nA: 'All P’s are Q’s.  In First Order Logic (FOL): ꓯx(P(x) → Q(x)).  \nE: No P’s are Q’s. In First Order Logic (FOL): ꓯx(P(x) → ¬Q(x)) \nI: Some P’s are Q’s. In First Order Logic (FOL): ∃x (P(x) ∧ Q(x)) \nO: Some P’s are ... Q’s. In First Order Logic (FOL): ∃x(P(x) → ¬Q(x)). \nFill in the dots (1x).","not"],
    ['In the Organon, which 4 sentence types are described in the square of oppositions? (indicate the 4 capital letters in normal reading order separated by spaces)', 'A E I O'],
    ['In the Organon, is "All S are P" an A E I or O sentence?', 'A'],
    ['In the Organon, is "No S is P" an A E I or O sentence?', 'E'],
    ['In the Organon, is "Some S are P" an A E I or O sentence?', 'I'],
    ['In the Organon, is "Some S are not P" an A E I or O sentence?', 'O'],
    ['In the Organon, which sentence type contradicts A sentences?', 'O'],
    ['In the Organon, which sentence type contradicts E sentences?', 'I'],
    ['In the Organon, which sentence type is contrary to A sentences?', 'E'],
    ['In the Organon, which sentence type is contrary to O sentences?', 'I'],
    ['In the Organon, what is the word for concluding an I sentence from an A sentence?', 'subalternation'],
    ['In the Organon, the usage of which logical symbol makes subalternation invalid in modern logic?', 'existential quantifier'],
    ['According to Aristotle, written marks are symbols of ...?','spoken words'],
    ['According to Aristotle, spoken words are symbols of the ... ... ... ...?','affections of the soul'],
    ['In On Interpretation, what does Aristotle mean with "affections of the soul"?','experience'],
    ['In On Interpretation, Aristotle says that verbs are ... of something else.\n\nFill in the dots','signs'],
    ['In On Interpretation, Aristotle says that words have no ... ..., but sentences (i.e. statements) do.\n\nFill in the dots','truth value'],
    ['In On Interpretation, Aristotle distinguishes sentences according to whether they are universal or ..., and affirmation or ... .\n\nFill in the dots.','particular negation'],
    ['In On Interpretation, which letter have the scholastics deviced for a "particular negation"? Write small letter.','o'],
    ['In On Interpretation, which letter have the scholastics deviced for a "universal affirmation"? Write small letter.','a'],
    ['In On Interpretation, which letter have the scholastics deviced for a "particular affirmation"? Write small letter.','i'],
    ['In On Interpretation, which letter have the scholastics deviced for a "universal negation"? Write small letter.','e'],
    ['By definition of Aristotle, essential features are ... whereas accidental features are not ... . What is the word that should be filled in?','necessary'],
    ['By definition of Aristotle, is "smart" an essential or an accidental feature of Socrates?','accidental'],
    ]
    
phil_aristotle_organon_int_2 = [
    ['Name the argument for determinism that Aristotle refutes in the Organon.', 'sea battle argument'],
    ['Which operator from modal logic is concerned in the sea battle argument in the Organon? The ... operator.', 'necessity'],
    ['Finish this sentence on why the sea battle argument is a fallacy: \nnecessarily(P V Q) is not: ...', 'necessarily(P) V necessarily(Q)'],
    ['In On Interpretation, Aristotle denies that everything happens by necessity by showing that deliberation implies that some things are ...','contingent'],
    ['In the sea battle argument, Aristotle shows that some propositions are "contingent". \nThe definition of "contingent" is: a proposition that is neither ... true nor ... false.','necessarily'],
    ]

phil_aristotle_organon_pri_1 = [
    ['In Aristotle his Prior Analytics, how many valid syllogism figures are there?', '3'],
    ['In Aristotle his Prior Analytics, in which part(s) of a syllogism resides the middle term?: minor premise, major premise and/or conclusion?', 'minor premise and major premise'],
    ['According to Aristotle his Prior Analytics, in 1st figure syllogisms, does the middle term occur in major premise, minor premise and/or conclusion?', 'major and minor premise'], 
    ['According to Aristotle his Prior Analytics, what is the term for a valid order of (A E I O) sentences that constitute a syllogism?', 'mood']   ,   
    ['What is the name of the Latin medieval philosophical movement in which names for the moods of syllogisms were deviced as memorization tool?','scholasticism'],
    ['Give the mnemonic names of the valid moods of Aristotle his first figure syllogisms.', 'barbara celarent ferio darii'],
    ['Give the mnemonic names of the moods that are valid for Aristotle his second figure syllogisms.','camestres cesare festino baroco'],
    ['According to Aristotle his Prior Analytics, \nwhich mood is defined by the following syllogism?: "M belongs to every N, but M does not belongs to every X, therefore N does not belong to every X','baroco'],
    ['According to Aristotle his Prior Analytics, \nhow many valid moods do 2nd figure syllogisms have?', '4'],
    ['According to Aristotle his Prior Analytics, \nhow many valid moods do 3rd figure syllogisms have?', '6'],    
    ['According to Aristotle his Prior Analytics, \nif you form a syllogism according to mood Barbara, what form does the minor premise of the syllogism have?', 'B belongs to all C'],     
    ['According to Aristotle his Prior Analytics, \nif you form a syllogism according to mood Barbara, what form does the minor premise of the syllogism have?', 'B belongs to all C'], 
    ['According to Aristotle his Prior Analytics, \nin the sentence "B belongs to all/every C", what is the subject, B or C?', 'C'],     
    ['Aristotle in Prior Analytics uses the term "belongs to", \nhow would "A belongs to every B" be expressed in On Interpretation?', 'every B is A'], 
    ['According to Aristotle his Prior Analytics, \nif you form a syllogism according to mood Celarent, what form does the conclusion of the syllogism have?', 'A belongs to no C'],    
    ['According to Aristotle his Prior Analytics, \nvia which tools can moods Ferio and Darii be converted to Barbara and Celarent?', 'berjo: have to look it up'],
    ['According to Aristotle his Prior Analytics, \nbecause 2nd and 3rd figure can be converted to 1st figure syllogisms, the following adjectives are used to describe 1st figure syllogisms: c.. p.. a..', 'complete perfect axiomatic'],    
    ['According to Aristotle his Prior Analytics, \nvia which tool can the 2nd and 3rd figures be converted to the 1st figure?', 'per impossibile'],
    ['According to Aristotle his Prior Analytics, \nper impossibile is called a hypothetical proof because it assumes the negation of what it proves, what is derived by this hypothesis?', 'a contradiction'],
    
    ['Aristotle his Prior analytics Book I also describes 3 relations from which a syllogism can draw a conclusion. \nTwo of these are modal: possibly/necessary. The 3rd (non-modal) is called simple/pure, e.g. "A belongs to B". What is it called?', 'assertoric'],    
    ['For Aristotle, a necessary premise entails the corresponding assertoric one (N -> A), what is this principle referred to?', 'intermodal'],     
    ['In modern logic (and also in On Interpretation) "possibly P" is defined as: ‘not necessarily not P’, making possible and necessary exchangeable. \nHowever, in Aristotle his Prior Analytics, which incoherent definition does Aristotle use? Possibly P = ...', 'not necessarily not P and not necessarily P'],     
    ['According to Aristotle his Prior Analytics, are problems difficult if they are solvable via many or via few figures/moods?','few']
    #['Aristotle says (i think) that 3rd figure syllogisms are weak since both premises predicate the same universal on subjects, thus the conclusion proves what it begs for and gives no new information. True or False?, 'true')
    ]

phil_aristotle_organon_pri_2 = [
    ['In Aristotle his prior analytics: \nIf premises True then the conclusion CANNOT be ...; True or False?', 'false'],    
    ['In Aristotle his prior analytics: \nIf premises True then the conclusion cannot be False <=> If conclusion False then premises MUST be ...; True or False?', 'false'],
    ['In Aristotle his prior analytics: \nWhich is the only syllogistic figure for which it is not possible to reach a true conclusion from false premises?', '1'],
    ['In Aristotle his prior analytics: \nWhat is a proof called in which the already assumed premise is inferred?', 'reciprocal'],
    ['In Aristotle his prior analytics: \nAristotle says that some claim by Plato (in Meno) is weak. \nWhat was this claim?','learning is recollection'],
    ['In Aristotle his Prior Analytics Book II, he says that, although we might see ... by knowledge of ..., this does not mean we really know them (the former). \nBecause knowledge of the former is a different thing than knowledge of the latter.\n\nFill in the dots (2x).', 'particulars universals'],
    ['In Aristotle his prior analytics: What is the term used for a syllogism which is only probably true, such as "He is ill, since he has a cough?"', 'enthymeme'],
    ]

phil_aristotle_organon_pos_1 = [
    ['In Posterior Analytics book I, what kind of premises are required for a syllogism to be apodeictic?\n\nFill in the dots (3x).','certain true primary'],
    ['In Posterior Analytics book I, what is meant with a "certain" premise; \nWrite: d.. or e.. ', 'demonstrable or evident'],
    ['In Posterior Analytics book I, what kind of arguments can be avoided by using "true" premises; \nWrite: c.. and i.. ','cyclical and infinite'],
    ['In Posterior Analytics book I, what is meant with a "primary" premise; \nWrite: n.. and e.. ', 'necessary and eternal'],    
    ['In Posterior Analytics book I, if propositions that ground demonstration are universal, then it is necessary for the conclusion to be ... .','eternal'],
    ['In Posterior Analytics book I: "there is no ... and knowledge at the same time.\n\nFill in the dots.','opinion'],
    ['In Posterior Analytics, what is the name for an assumption that cannot be deduced from another assumption?','first principle'],
    ['The Aristotelian "first principle" is used in a more nuanced form by Kantians under the name ...','postulate'],
    ['In Posterior Analytics book I: for demonstration "the principles are more ... than the conclusion".\n\nFill in the dots.','certain'],
    ['In Posterior Analytics, which word is synonymous with "apodeictal syllogism" and "scientific knowledge"?','demonstration'],
    ['Aristotle says that in his philosophy he is looking for "first principles", which are also called "origins". \nWhat is "origins" in Greek?','archae']
    ]

phil_aristotle_organon_pos_2 = [
    ['In Posterior Analytics, what kinds of questions can be asked about something? \nWrite: h.. w.. i.. w.. ','how why if what'],
    ['In Posterior Analytics, the answer to which kind of question cannot be demonstrated but must be defined: \nhow why if or what?','what'],
    ['In Posterior Analytics, the goal of demonstration is to answer which kind of question?: \nhow why if or what?','why'],
    ['In Posterior Analytics, what is the term used for the 4 possible answers to why questions?','causes'],
    ['In Posterior Analytics, what are the 4 causes that may answer why questions? \nWrite: m.., f.., e.. and f..','material, formal, efficient and final'],
    ['In Posterior Analytics, what is another word for primary premise?','first principle'],
    ['In Posterior Analytics, how can first principles be obtained?','sense experience'],
    ['In Posterior Analytics, what is the Greek and what is the Latin word for sense experience? ... and ...\n\nFill in the dots','epigoge induction'],
    ]

phil_aristotle_organon_top = [
    ['In Topics, a "dialectical syllogism" is defined as a syllogism with premises that are ...','uncertain'],
    ['In Topics, what is the first principle of the dialectical method?','endoxa'],
    ['In Topics, endoxa is first principle of the dialectical method, what can it (loosely) be translated as?','common sense'],
    ]

phil_aristotle_organon_soph = [
    ['In Sophistical Refutations, Aristotle describes a "sophistical syllogism" as a syllogism which seems to be ... both in matter and form, but which is not.\n\nFill in the dots.','perfect'],
    ]

phil_aristotle_physics = [
    ['In his Physics, Aristotle writes "the things that are known to us are not the same as the things known .... (haplôs)".\n\nFill in the dots.','unconditionally'],
    ['In Physics, "it is necessary for us to progress from the things that are clearer to us, towards things that are clearer and better known by ... .\nFill in the dots','nature'],
    ['Which Greek word means "the order of nature"?','phusis'],
    ['Aristotle his work on physics contains how many books?','8'],
    ['In Physics book I, Aristotle describes 3 principles of nature. \nWhich 3 earlier philosophers does he refute here? p.. m.. a..','parmenides melissus anaxagoras'],
    ['What is the Greek word for "matter" or "wood"?','hyle'],
    ['What is the Greek word for "essence"?','ousia'],
    ['In Physics book I Chapter 9, Aristotle derives 3 principles of nature, which are they? \nf.. p.. m..','form privation matter'],
    ['Which of the 3 principles of nature, Aristotle describes as: \n"All change involves something coming to be from out of its opposite. \nSomething comes to be what it is by acquiring its distinctive ... . The ... itself (the idea or pattern of the mature specimen) must have existed before the baby or seed actually matured.','form'],
    ['Which of the 3 principles of nature, Aristotle describes as: \n"absence of the form, or as "opposite" out of which the form came into being"?','privation'],
    ['Which of the 3 principles of nature, Aristotle describes as: \n"The primary substratum of each thing, from which it comes to be without qualification, and which persists in the result", which exists not as substance but as a principle with form and only insofar as it underlies change?','matter'],
    ['\nFill in the 3 principles of Nature of Aristotle: \n"A person’s education involves the ... of being educated, the ... of being ignorant, and the underlying ... of the person who makes the change from ignorance to education.','form privation matter'],
    ['In which book of his Physics does Aristotle describe the 4 causes?','2'],
    ['According to Physics book II: ... causes apply to nature as much as to art, so everything in nature serves a useful purpose','final'],
    ['According to Physics book II: ... causes apply to nature as much as to art, so everything in nature serves a useful purpose','final'],
    ['With his Final Cause, Aristotle solves problems with ideas of 2 earlier thinkers: \n1: an evolutionary view predicts as many useless aspects of nature as there are useful, while actually most do seem useful. \nAnd 2: a theory about parts being combined randomly, which does not explain HOW they come together. \nGive the names of these 2 earlier thinkers.','democritus empedocles'],
    ['Physics book III and IV discuss aspects of Nature (infinity, void, etc). \nOne of them is "Change", which is "the ... of one thing to become another".','potential'], 
    ['In Physics book V Aristotle discusses: four species of ..., depending on where the opposites are located.\n\nFill in the dots.','movement'], 
    ['Physics book VI Aristotle discusses: how a changing thing can reach the opposite state, if it has to pass through ... intermediate stages.\n\nFill in the dots.','infinite'],
    ['Physics book VII Aristotle discusses: relationship of the moved to his mover, which diverges from the concept of ... as capable of setting itself in motion as described by .... (author).\n\nFill in the dots. \nWrite: ... ...','soul plato'],
    ['In Physics book VIII Aristotle discusses: ... limits of the universe (infinite), and Existence of a ... ... (which is eternal, indivisible, has no parts, and no magnitude).\n\nFill in the dots.','time prime mover'],
    ['In Physics book VIII Aristotle discusses the ... limits of the universe (infinite).\n\nFill in the dots.','time'],
    ['In Physics book VIII Aristotle discusses the existence of a ... ... (which is eternal, indivisible, has no parts, and no magnitude).\n\nFill in the dots.','prime mover'],
    ['In which book of the Physics does Aristotle claims that the universe is eternal and that there is a prime mover? Give the number.','8'],    
    ]

phil_aristotle_metaphys = [
    ['In the Metaphysics, Aristotle discusses: what a thing ... .\n\nFill in the dots.','is'],
    ['In the Metaphysics, Aristotle equates the "being of the thing" with: "that WHAT the thing ..." .\n\nFill in the dots.','is'],
    ['In the Metaphysics, Aristotle equates the "being of the thing" with: "that what the thing ..." .\n\nFill in the dots.','is'],
    ['In the Metaphysics, Aristotle defines "primary substance" as: ... ...', 'what is'],
    ['In the Metaphysics, Aristotle claims that "what is" (primary substance) has 2 properties, which are they?','matter form'],
    ['In the Metaphysics, Aristotle combines matter and form into one "what is". Which term is often used for this approach? Answer: ...ism','hylemorphism'],
    ['In the Metaphysics, Aristotle uses which Greek word for wood / matter?','hyle'],
    ['In the Metaphysics, Aristotle uses which Greek name for the property that allows primary substances to undergo change while retaining its being?','hyle'],
    ['In the Metaphysics, Aristotle uses which Greek name for "what it is for a primary substance to be an instance of a certain class"?','morphae'],
    ['What is the Greek word for "shape" which in Aristotle his texts is used for the philosophical mearning of "form"?','morphae'],
    ['According to Aristotle, is "what it is to be human" the "form" or the "matter" of Socrates?','form'],
    ['In the Metaphysics, Aristotle says that what makes a being primary (primary substance) is not one of its 2 properties matter or form, but what is it then? Its ...','essence'],
    ['In the Metaphysics, Aristotle concludes that what makes a being primary (primary substance) is not one of its 2 properties matter or form, but its essence. \nIs essence closer to matter or to form?','form'],
    ['In the Metaphysics, Aristotle concludes that what makes a being primary (primary substance) is its "essence". \nWhy is essence close to form? Because (as Plato also says): what a thing is should be i..ble','intelligible'],
    ['In the Metaphysics, Aristotle concludes that what makes a being primary (primary substance) is its "essence". \nWhy is essence close to form? Because (as Plato also says): what a thing is should be d..ble','determinable'], 
    ['In the Metaphysics, Aristotle gives an argument for why it cannot always be "form" that makes a being primary (primary substance). \nHe gives an example: If Socrates dies, he isn’t Soc anymore (his soul dies) => it must be ... which makes Soc a primary substance.\n\nFill in the dots','matter'],
    ['According to Aristotle, when Socrates died, did his "soul" die? yes or no?','yes'],
    ['According to Aristotle, "being" = ... ? Choose your answer: form, matter, essence or soul','essence'],
    ['According to Aristotle, "form" = what it is to be an ... of a ...?\n\nFill in the dots. \nWrite: ... ...','instance class'],
    ['In the Metaphysics, Aristotle concludes that what makes a being primary (primary substance) is its "essence". \nWhy is "essence" closer to form than matter? Because (as Plato also says): what a thing is should be i..ble','intelligible'], 
    ['In the Metaphysics, Aristotle concludes that what makes a being primary (primary substance) is its "essence". \nWhy is "essence" closer to form than matter? Because (as Plato also says): what a thing is should be d..ble','determinable'], 
    ['Which part of the Metaphysics involves a complex discussion on the soul in relation to the 4 causes, in an attempt to solve the question whether matter or form makes a substance primary (and thus defines "being")? Choose: beginning, middle, final','middle'],
    ['According to Aristotle, IS a secondary substance? yes no or only in essence','only in essence'],
    ['According to Aristotle, IS a primary substance? yes no or only in essence','yes'],  
    ['For Aristotle and Plato, what is the word for "what it is to be an instance of a certain class"?','form'],
    
    ['In order to criticize the theory of forms, in Metaphysics Aristotle furthered which argument, originally by Plato himself? The ... ... argument.\n\nFill in the dots.','third man'],
    ['The third man argument is named such because later in his work ... Aristotle used the example of a man, rather than the example of ... which was used in Plato his dialogue Parmenides.\n\nFill in the dots (2x).', 'metaphysics greatness'],
    ['In Metaphysics, Aristotle objects to the theory of Forms of Plato, by positing that if a man is a man because he partakes in the form of man, then a ... form would be required to explain how man and the form of man are both man, and so on, ad infinitum.\n\nFill in the dots.','third'],      
    ]

phil_arab = [
    ['Some main figures in Islamic philosophy (per year (AD): \n700=..., 800=Al Kindi, 900=Al Farabi, 1000=Ibn Sina, 1100=Al Ghazali, 1200=Ibn Rushd and Ibn Arabi, 1300=Mystic Poets, 1400=Ibn Haldun.\n\nFill in the dots.',"mu'tazilites"],
    ['Some main figures in Islamic philosophy (per year (AD): \n700=Mu’tazilites, 800=... ..., 900=Al Farabi, 1000=Ibn Sina, 1100=Al Ghazali, 1200=Ibn Rushd and Ibn Arabi, 1300=Mystic Poets, 1400=Ibn Haldun.\n\nFill in the dots.','al kindi'],
    ['Some main figures in Islamic philosophy (per year (AD): \n700=Mu’tazilites, 800=Al Kindi, 900=... ..., 1000=Ibn Sina, 1100=Al Ghazali, 1200=Ibn Rushd and Ibn Arabi, 1300=Mystic Poets, 1400=Ibn Haldun.\n\nFill in the dots.','al farabi'],
    ['Some main figures in Islamic philosophy (per year (AD): \n700=Mu’tazilites, 800=Al Kindi, 900=Al Farabi, 1000=... ..., 1100=Al Ghazali, 1200=Ibn Rushd and Ibn Arabi, 1300=Mystic Poets, 1400=Ibn Haldun.\n\nFill in the dots.','ibn sina'],
    ['Some main figures in Islamic philosophy (per year (AD): \n700=Mu’tazilites, 800=Al Kindi, 900=Al Farabi, 1000=Ibn Sina, 1100=... ..., 1200=Ibn Rushd and Ibn Arabi, 1300=Mystic Poets, 1400=Ibn Haldun.\n\nFill in the dots.','al ghazali'],
    ['Some main figures in Islamic philosophy (per year (AD): \n700=Mu’tazilites, 800=Al Kindi, 900=Al Farabi, 1000=Ibn Sina, 1100=Al Ghazali, 1200=... ... and Ibn Arabi, 1300=Mystic Poets, 1400=Ibn Haldun.\n\nFill in the dots.','ibn rushd'],
    ['Some main figures in Islamic philosophy (per year (AD): \n700=Mu’tazilites, 800=Al Kindi, 900=Al Farabi, 1000=Ibn Sina, 1100=Al Ghazali, 1200=Ibn Rushd and ... ..., 1300=Mystic Poets, 1400=Ibn Haldun.\n\nFill in the dots.','ibn arabi'],
    ['Some main figures in Islamic philosophy (per year (AD): \n700=Mu’tazilites, 800=Al Kindi, 900=Al Farabi, 1000=Ibn Sina, 1100=Al Ghazali, 1200=Ibn Rushd and Ibn Arabi, 1300=... ..., 1400=Ibn Haldun.\n\nFill in the dots.','mystic poets'],
    ['Some main figures in Islamic philosophy (per year (AD): \n700=Mu’tazilites, 800=Al Kindi, 900=Al Farabi, 1000=Ibn Sina, 1100=Al Ghazali, 1200=Ibn Rushd and Ibn Arabi, 1300=Mystic Poets, 1400=... ... .\n\nFill in the dots.','ibn haldun'],    
    ['Around the year ~700 AD  the Mu’tazilites brought a rationalist theology, emphasizing: \nGod=..., \nhumans have free will, \nQuran=created (by God).\n\nFill in the dots.','wise'],
    ['Around the year ~700 AD  the Mu’tazilites brought a rationalist theology, emphasizing: \nGod=wise, \nhumans have ... ..., \nQuran=created (by God).\n\nFill in the dots.','free will'],
    ['Around the year ~700 AD  the Mu’tazilites brought a rationalist theology, emphasizing: \nGod=wise, \nhumans have free will, \nQuran= ... (by God).\n\nFill in the dots.','created'],
    ['Around the year ... AD  the Mu’tazilites brought a ... theology.\n\nFill in the dots (round off year in full centuries): ... ...','700 rationalist'],
    ['Around the year ~700 AD the Mu’tazilites brought a rationalist theology, emphasizing: \nGod is accessible through rational thought. \nNot ... but only the Quran + Reason are final arbiter.','hadith'],
    ['Around ~800 AD the rationalist doctrine of the Mu’tazilites became enforced by the ... when they ruled the 3rd caliphate and tortured Hanbal.\n\nFill in the dots.','abbasids'],
    ['Around ~800 AD the Abbasids enforced Mu’tazilite rationalist doctrine. \nBut eventually Sunni theologians came to favor ... theology, which is semi-rationalist and orthodox, but still favors Kalam and not the popular Taqlid (imitation).\n\nFill in the dots',"ash'arite"],
    ['Around ~800 AD the Abbasids enforced ... rationalist doctrine. \nBut eventually Sunni theologians came to favor Ash’arite theology, which is semi-rationalist and orthodox.\n\nFill in the dots',"mu'tazilite"],
    ['Around ...AD the rationalist doctrine of the Mu’tazilites became enforced by the ... when they ruled the 3rd caliphate.\n\nFill in the dots (2x).','800 abbasids'],
    ['The Abbasids ruled the 3rd caliphate around 800AD, were named after the uncle of Muhammad and founded the city of ... .\n\nFill in the dots (1x).','baghdad'],
    ['The Abbasids ruled the 3rd caliphate around 800AD, were named after the ... of Muhammad and founded Baghdad.\n\nFill in the dots (1x).','uncle'],
    ['The first caliphate after Muhammads death was called the ... Caliphate, which lasted only 3 decades around 650 AD.\n\nFill in the dots.','rashidun'], 
    ['The first caliphate after Muhammads death was called the Rashidun Caliphate, which lasted only ... decades around 650 AD.\n\nFill in the dots.','3'],
    ['... = Islamic scholastic theology / discussions on doctrine. It is often viewed as contrary to ... = imitation.\n\nFill in the dots (2x).','kalam taqlid'],
    ['Kalam = Islamic scholastic ... / discussions on doctrine. Kalam is often viewed as contrary to Taqlid = ... .\n\nFill in the dots (2x).','theology imitation'],   
    ['Around the year ... AD the Mu’tazilites brought a rationalist theology, which was during the late ... Caliphate, which was the 2nd caliphate, which had its capital in ... .\n\nFill in the dots (round year off in full centuries): ... ... ...','700 umayyad damascus'],
    ['Around the year ~700 AD the ... brought a rationalist theology: God=wise, humans=free will, Quran=created.',"mu'tazilites"],
    ['1300s Islamic philosophy was mostly characterized by mystic poets, such as Yunus Emre who was influenced by ... who was influenced by Ibn Arabi.','rumi'],
    ['Sufi (i.e. Islamic mysticism) is called in Arabic: ....','tasawwuf'],
    ['... ... was the founder of a school that translated most of Aristotle into Arabic around ~850 AD.\n\nFill in the dots (2x).','al kindi'],
    ['Al Kindi was the founder of a school that translated most of ... into Arabic around ~850 AD.\n\nFill in the dots (1x).','aristotle'],
    ['Al Kindi was the founder of a school that translated most of Aristotle into Arabic around ...AD.\n\nFill in the dots (1x, rounded to steps of 50 yrs).','850'],
    ['Al Kindi was the founder of a school that translated most of Aristotle into Arabic around ~850 AD, during which caliphate?','abbasid'],
    ['Similar to the Mu’tazilites, Al Kindi was concerned with maintaining the ... (as opposed to multiplicity) of God,\n which is called Tawhid and is the central concept of Islam.\n\nFill in the dots.','singularity'],
    ['Similar to the Mu’tazilites, Al Kindi was concerned with maintaining the singularity (as opposed to multiplicity) of God,\n which is called ... and is the central concept of Islam.\n\nFill in the dots.','tawhid'],
    ['Similar to the Mu’tazilites, Al Kindi was concerned with maintaining the singularity (as opposed to multiplicity) of God,\n which is called Tawhid and is the central concept of ... .\n\nFill in the dots.','islam'],
    ['The spread of ... making learned from Chinese prisoners of war in 751 CE helped to make the Greek-Arabic translation movement possible.\n\nFill in the dots.','paper'],
    ['... ... ... was a Nestorian Christian Arab, who was physician and Greek-Syriac-Arabic translator in Baghdad around 850 AD.\n\nFill in the dots.','hunayn ibn ishaq'], 
    ['Hunayn ibn Ishaq was a ... (branch of non-trinitarian) Christian Arab, who was physician and Greek-Syriac-Arabic translator in Baghdad around 850 AD.\n\nFill in the dots.','nestorian'], 
    ['Hunayn ibn Ishaq was a Nestorian (a christian church) physician and Greek-Syriac-Arabic translator in ... (city).\n\nFill in the dots (1x).','baghdad'], 
    ['... ... ... translated not only Aristotle and Ptolemy, but also medical works of Hippocrates and Galen from Greek to Arabic.\n\nFill in the dots (3x).','hunayn ibn ishaq'], 
    ['Hunayn ibn Ishaq translated not only Aristotle and Ptolemy, but also medical works of h.. and g... from Greek to Arabic.\n\nFill in the dots (2x).','hippocrates galen'],
    ['What was the name of the son of Hunayn ibn Ishaq, and was, just as his father, also a Greek-Arabic translator and physician?','ishaq ibn hunayn'],
    ['... ..., who was a Shia muslim and lived around 900 AD, was called the 2nd master, after 1st master: Aristotle.\n\nFill in the dots (2x).','al farabi'],
    ['Al Farabi, who was a ... (faction) muslim and lived around 900 AD, was called the 2nd master, after 1st master: Aristotle.\n\nFill in the dots (1x).','shia'],
    ['Al Farabi, who was a Shia muslim and lived around ... AD, was called the 2nd master, after 1st master: Aristotle.\n\nFill in the dots (1x).','900'],
    ['Al Farabi, who was a Shia muslim and lived around 900 AD, was called the 2nd ... , after the first being Aristotle.\n\nFill in the dots (1x).','master'],
    ['..., who lived around 1000 AD, could not understand the Metaphysics until he read al-Farabi his commentary on it.','ibn sina'],
    ['Al Ghazali, who lived around 1100 AD, was an ... theologian and Shafi jurist.\n\nFill in the dots.',"ash'arite"],
    ['... ..., who lived around 1100 AD, was an Ash’arite theologian and Shafi jurist.\n\nFill in the dots.','al ghazali'],
    ['Al Ghazali, who lived around 1100 AD, was an Ash’arite theologian and ... jurist.\n\nFill in the dots.','shafi'],
    ['... ... is the philosopher who is sometimes held responsible for embarking a less philosophical direction for Islam.\n\nFill in the dots.','al ghazali'],
    ['... ... is the philosopher who wrote Incoherence of the Philosophers.\n\nFill in the dots.','al ghazali'],
    ['... ... is the philosopher who tried to restore the teachings of Aristotle and opposed Neoplatonist tendencies of Al-Farabi and Avicenna.','ibn rushd'],
    ['... ... defended philosophy against criticism by Al-Ghazali, by writing Incoherence of the Incoherence','ibn rushd'],
    ['Ibn Rushd was a specialist in ... jurisprudence','maliki'],
    ['Ibn Rushd lived in the newly established ... (=‘monotheists’) Caliphate which ruled over Marocco and Al-Andalus','almohad'],
    ['Ibn Rushd had a great influence on Jewish philosopher ... ','maimonides'],
    ['The ... caliphate used Zahiri theology and mixed Hadith with Al Ghazali and Shia notions and opposed Maliki law.','almohad'],
    ['The almohad caliphate was preceded by the ... Caliphate, who used Maliki law.','almoravid'],
    ['... ... was a Sufi Mystic who was born in Al Andalus and lived around 1200 AD and stated that he did not blindly follow any one of the schools of Islamic jurisprudence.','ibn arabi'],
    ['Kabala, the Jewish mysticism, originated from 13th century Al Andalus where Islamic Mysticism thrived under inflence of ... ...','ibn arabi'],
    ["Ibn Sina (aka Avicenna) wrote 3 synoptic works: in chronological order: \n... (large book consisting of many volumes), \nthen he rewrote it shorter as The ... , \nand then his (nowadays most popular) ... and ... (reminders) which is basically a summary for students who missed lecture.\n\nFill in the dots (4x).",'healing salvation remarks admonitions'],
    ["Ibn Sina's Neoplatonic 'emanations' scheme became fundamental in Kalam. \nHe argued that the fact of existence (...) of a thing could not be inferred from its essence (Mahiat). \n But form and matter by themselves could also not originate from or interact with the progressive actualization of existing things. (seq of causes would be infinite). \nThus existence must be due to an agent cause that necessitates, gives, or adds existence to an essence. \nTo do so, the cause must coexist with its effect and be an e.. thing. \n => This existing thing is God. \n\nFill in the gaps (2x).","wujud existing"],   
    ["Ibn Sina's Neoplatonic 'emanations' scheme became fundamental in Kalam. \nHe argued that the fact of existence (Wujud) of a thing could not be inferred from its ... (Mahiat). \n But form and matter by themselves could also not originate from or interact with the progressive actualization of existing things. (seq of causes would be infinite).\nThus existence must be due to an agent cause that necessitates, gives, or adds existence to an essence. \nTo do so, the cause must coexist with its effect and be an existing thing. \n => This existing thing is ... . \n\nFill in the gaps (2x).","essence god"],   
    ["Ibn Sina's Neoplatonic 'emanations' scheme became fundamental in Kalam. \nHe argued that the fact of existence (Wujud) of a thing could not be inferred from its essence (...). \n But form and matter by themselves could also not originate from or interact with the progressive actualization of existing things. (seq of causes would be infinite).\nThus existence must be due to an agent c.. that necessitates, gives, or adds existence to an essence. \nTo do so, the cause must coexist with its effect and be an existing thing. \n => This existing thing is God. \n\nFill in the gaps (2x).","mahiat cause"],   
    ["Ibn Sina's Neoplatonic 'emanations' scheme became fundamental in Kalam. \nHe argued that the fact of e.. (Wujud) of a thing could not be inferred from its essence (Mahiat).\n But form and matter by themselves could also not originate from or interact with the progressive actualization of existing things. (seq of causes would be infinite).\nThus existence must be due to an agent cause that necessitates, gives, or adds existence to an e.. . \nTo do so, the cause must coexist with its effect and be an existing thing. \n => This existing thing is God. \n\nFill in the gaps (2x).","existence essence"],   
    ["Ibn Sina's Neoplatonic 'e..' scheme became fundamental in Kalam. \nHe argued that the fact of existence (Wujud) of a thing could not be inferred from its essence (Mahiat). \n But form and matter by themselves also could not originate from or interact with the progressive actualization of existing things, because the sequence of causes would have to be i.. .\nThus existence must be due to an agent cause that necessitates, gives, or adds existence to an essence. \nTo do so, the cause must coexist with its effect and be an existing thing. \n => This existing thing is God. \n\nFill in the gaps (2x).","emanations infinite"],   
    ['There were 2 Persian thinkers called Al-... , one around ~900 and the other around ~1200 AD. \nThe 2nd Al-... basically did to Ibn Sina what Ibn Sina did to Aristotle: he tried to reorganize, reinterpret,  analyze and rewrite his work.\n\nFill in the dots (1x).','razi'],
    ['Similar to Ibn Sina and Aristotle, al-... also used to first present the existing arguments by other thinkers, before presenting his own argument. \nE.g., Al-... presented the Aristotelian and Avicennian arguments against multiple universes, and refuted them.\n\nFill in the dots (1x).','razi'],
    ["Al-Razi his rejection of the single universe, as defended by Aristotle and Ibn Sina, arose from his affirmation of ... , \nas advocated by the ash'arite school of Islamic theology.",'atomism'],
    ]


phil_scholast = [
    ['What is the name for the philsophical claim that universals exist?','realism'],
    ['What is the opposite of realism in philsophy?','nominalism'],
    ['What is the name for the branch of (weak) nominalism that claims that universals do not exist, except in the mind?','conceptualism'],    
    ['Which of the following medieval philosophers was not a realist? \nChoose from: abelard,aquinas,ockham, duns scotus,bonaventure?','ockham'],
    ['Which 13th c. philosopher was the first in the Latin world to be trained on the full body of Aristotelian works and emphasised the posterior analytics (incl first principles from sense experience)?','aquinas'],
    ['Aquinas claims that during life our cognition can reach forms that are the same as the actual forms of objects through sense experience; \nmoreover he claims that this aspect connects us with the afterlife. This is called the ... vision.','beatific'],
    ['Was Aquinas a realist conceptualist or a nominalist?','realist'],
    ['Who wrote the Summa Theologiae?','aquinas'],
    ['16th century authors of textbooks on cognition and philosophy of mind often read Aquinas through the lens of which other scholastic philosopher?','duns scotus'],
    ['Duns Scotus uses which concept to deny (Aquinas his) distinction between essence and existence? \nThe doctrine of ... of being.','univocity'],
    ['Duns Scotus argued that we never know whether something exists unless we have some concept of what we know to exist. \nBetween which of the 4 questions from Posterior Analytics should we therefore not distinguish? Hint: in Latin: "si est" and "quid est". \nWrite: ... and ...','if and what'],
    ['Duns Scotus says that in life we only have access to forms (through our senses and reason), but in the afterlife we will have direct access to all essences. \nThis is called ... cognition.','intuitive'],
    ['Duns Scotus says that in life we only have access to forms (through our senses and reason), but in the afterlife we will have direct access to all essences. \nThis is called ... cognition.','intuitive'],
    ['William of Ockham (1285-1347 AD) was a conceptualist, does this mean he was a realist or a nominalist?','nominalist'],
    ['William of Ockham (1285-1347 AD) was arch-rival of which other scholastic philosopher?','duns scotus'],
    ['Put these scholastic philosophers in chronological order: Scotus Ockham Aquinas. \nWrite first letters separated by a space.','a s o'],
    ['Which 14th century philosopher claimed that universals do not exist in reality, but that they do exist as concepts in the mind? aquinas, scotus or ockham?','ockham'],
    ['Which of these philosopher monks was not in the Fransiscan but in the Benedict order? \nockham, aquinas or scotus?','aquinas'],
    ['Depending on the philosophy, human access to God is more or less limited. \nAccording to which philosopher do we have most access, and according to which least? Choose from: scotus ockham aquinas. Give 2 names (most and least): ... ...','aquinas ockham'],
    ['What is the scholastic term for "essence" in the meaning "the what it was to be" from "to ti ên einai"?','quidity'],
    ['What is the scholastic term for "essence" in the meaning "the what is" from "to ti esti", as introduced by Scotus followers?','haecceity'],
    ['quidity and haecceity presented such difficulties for its Latin translators that they coined which Latin term to represent both?','essentia'],
    ['For Aristotle and his scholastic followers, the notion of essence is most closely linked to which term?','definition']    
    ]


logic_propositional = [ # please expand this further using my summary of the Barwise logic study book ch 1-8
	["One truth functional connective is the m.. conditional: '⇒' (if-then) with a... before and consequent after the arrow.\n\nFill in the missing words.","material antecedent"],
    ["One truth functional c.. is the material c.. : '⇒' (if-then) with antecedent before and c.. after the arrow.\n\nFill in the missing words.","connective conditional consequent"],
    ["The following 2 Boolean connectives: ∧ (and), ∨ (or) are called binary, what is another word for binary in this context?","dyadic"],
    ["The Boolean connective ¬ (not) is not dyadic/binary but ...","unary"],
    ["The 3 Boolean connectives (∧, ∨ and ¬) are t.. f.. , \nwhich means that the truth value of a complex sentence built by these connectives can be determined simply by looking at the truth values of its constituents and the s.. is then called a truth function.\n\nFill in the missing words.","truth functional sentence"],    
    ["The 3 ... connectives (∧, ∨ and ¬) are truth functional, \nwhich means that the truth value of a complex sentence built by these connectives can be determined simply by looking at the truth values of its constituents and the sentence is then called a t.. f.. .\n\nFill in the missing words.","boolean truth function"],
    ["The 3 Boolean connectives (∧, ∨ and ¬) are truth functional, \nwhich means that the t.. v.. of a complex sentence built by these connectives can be determined simply by looking at the those of its constituents. And the s.. is then called a truth function.\n\nFill in the missing words.","truth value sentence"],
    ["Take the truth functional sentence: (α ⇔ β) ⇔ (α ⇒ β) ... (β ⇒ α). \nWhich binary boolean connective fills the dots in order to make its truth value 'true'? Write the word in letters.","and"],
    ["α ⇒ β is always true if α is ... , as a result: (α ⇒ β) ⇔ (¬α ∨ β). \n'⇔' is called the m.. b.. symbol and is often abbreviated as: 'iff'. \n\nFill in the missing words.","false material biconditional"],
    ["α ⇒ β is always ... if α is false, as a result: (α ⇒ β) ⇔ (¬α ∨ β). \n'⇔' is called the material biconditional symbol and is often abbreviated as: 'i..'. \n\nFill in the missing words.","true iff"],
    ["α ⇒ β is always ... if α is false, as a result: (α ⇒ β) ⇔ (¬α ∨ β). \n'⇔' is called the m.. b.. symbol and is often abbreviated as: 'iff'. \n\nFill in the missing words.","true material biconditional"],
    ["α ⇒ β is always true if α is ... , as a result: (α ⇒ β) ⇔ (¬α ∨ β). \n'⇔' is called the material biconditional symbol and is often abbreviated as: 'i..'. \n\nFill in the missing words.","false iff"],
    ]

logic_FOL = [  # From Barwise logic study book ch9-14, very incomplete, derive more questions from my summary of the book please.	
["Aristotle distinguishes in On Interpretation 4 different sentences for building syllogisms: \nA: '... P’s are Q’s.  In First Order Logic (FOL): ꓯx(P(x) → Q(x)).  \nE: No P’s are Q’s. In First Order Logic (FOL): ꓯx(P(x) → ¬Q(x)) \nI: Some P’s are Q’s. In First Order Logic (FOL): ∃x (P(x) ∧ ...(x)) \nO: Some P’s are not Q’s. In First Order Logic (FOL): ∃x(P(x) → ¬Q(x)). \nFill in the dots (2x).","All Q"],
["Aristotle distinguishes in On Interpretation 4 different sentences for building syllogisms: \nA: 'All P’s are Q’s.  In First Order Logic (FOL): ꓯx(P(x) → Q(x)).  \nE: No P’s are Q’s. In First Order Logic (FOL): ꓯ...(P(x) → ¬Q(x)) \nI: Some P’s are Q’s. In First Order Logic (FOL): ∃x (P(x) ∧ Q(x)) \nO: ... P’s are not Q’s. In First Order Logic (FOL): ∃x(P(x) → ¬Q(x)). \nFill in the dots (2x).","x some"],
["De Morgan's laws for quantifiers (not actually by De Morgan): \n¬ꓯx P(x) ⇔ ∃x ¬...(x) \n¬∃x P(x) ⇔ ꓯx ¬P(...) \nFill in the dots (2x).","P x"],
["De Morgan's laws for quantifiers (not actually by De Morgan): \n¬ꓯ... P(x) ⇔ ∃x ¬P(x) \n¬∃x ...(x) ⇔ ꓯx ¬P(x) \nFill in the dots (2x).","x P"]
]


logic_set_theory = [  # From Barwise logic study book ch15, very incomplete, derive more questions from my summary of the book please.
["Notation in Set Theory: \n∈=element, ⊆=subset, ⋂=intersection, ⋃=union, {x}=singleton set of x, ∅={ }=empty set, ℘b=p.. of b\nVariables a, b, c, are sets; x, y, z, are ordinary (e.g. physical) objects as well as sets; f, g, h, are functions. \n\nE.g.: using both set + object variables: “Everything is member of a set”=Ɐxꓱa (x∈a) (=... language). \nBut, when using only 1 kind of variable we need a predicate: Ɐxꓱy[Set(y) ꓥ x∈y] (=single-sorted language). \n“b is element of set of all x’s for which P(x)” = informally: b∈{x|P(x)} = formally: ꓱa[Ɐx(x∈a ↔ P(x)) ꓥ b∈a]\n\nFill in the dots (2x).","powerset many-sorted"],
["Notation in Set Theory: \n∈=element, ⊆=subset, ⋂=intersection, ⋃=union, {x}=s.. set of x, ∅={ }=empty set, ℘b=powerset of b\nVariables a, b, c, are sets; x, y, z, are ordinary (e.g. physical) objects as well as sets; f, g, h, are functions. \n\nE.g.: using both set + object variables: “Everything is member of a set”=Ɐxꓱa (x∈a) (=many-sorted language). \nBut, when using only 1 kind of variable we need a p..: Ɐxꓱy[Set(y) ꓥ x∈y] (=single-sorted language). \n“b is element of set of all x’s for which P(x)” = informally: b∈{x|P(x)} = formally: ꓱa[Ɐx(x∈a ↔ P(x)) ꓥ b∈a]\n\nFill in the dots (2x).","singleton predicate"],
["Notation in Set Theory: \n∈=element, ⊆=subset, ⋂=intersection, ⋃=union, {x}=singleton set of x, ∅={ }=empty set, ℘b=powerset of b\nVariables a, b, c, are sets; x, y, z, are ordinary (e.g. physical) objects as well as sets; f, g, h, are functions. \n\nE.g.: using both set + object variables: “Everything is m.. of a set”=Ɐxꓱa (x∈a) (=many-sorted language). \nBut, when using only 1 kind of variable we need a predicate: Ɐxꓱy[Set(y) ꓥ x∈y] (=single-sorted language). \n“b is element of set of all x’s for which P(x)” = informally: b∈{x|P(x)} = f..: ꓱa[Ɐx(x∈a ↔ P(x)) ꓥ b∈a]\n\nFill in the dots (2x).","member formally"],
["Def of powerset: \n℘b=℘(b)=set of all s.. of b={a|a⊆b}. \nE.g. b={0,1} => ℘b={0,1,{0,1},∅}. \nIf we have a set b of size n, then its powerset ℘b has ...^n members. \n\nFill in the dots (2x).","subsets 2"],
["Def of powerset: \n℘b=℘(b)=set of all subsets of b={a|a⊆b}. \nE.g. b={0,1} => ℘b={0,1,{0,...},∅}. \nIf we have a set b of size n, then its powerset ℘b has 2^... members. \n\nFill in the dots (2x).","1 n"],
["Def of ... Set for b: \nc = {x|x∈b and x∉x}. \n\nDef of Universal Set: \nthe set that contains ... as a member, including itself = V ={x|x=x}.\n\nFill in the dots (2x).","Russell everything"],
["Def of Russell Set for b: \nc = {x|x∈... and x∉x}. \n\nDef of ... Set: \nthe set that contains everything as a member, including itself = V ={x|x=x}.\n\nFill in the dots (2x).","b universal"],
["Def of Russell Set for b: \nc = {x|x∈b and x∉...}. \n\nDef of Universal Set: \nthe set that contains everything as a member, i.. itself = V ={x|x=x}.\n\nFill in the dots (2x).","x including"],
["...’s paradox: \n℘V both is and is not subset of V. \nThis leads to a c.. in Naïve Set Theory. \n\nFill in the dots (2x).","Russell contradiction"],
["Russell’s paradox: \n℘V both is and is not subset of ... . \nThis leads to a contradiction in ... Set Theory. \n\nFill in the dots (2x).","V naive"],
["Georg ...'s work in set theory (late 1800s), preceded Russell’s paradox (early 1900s). \nHe was thus working with the n.., hence inconsistent view of sets, not working within an axiomatic framework. \n\However, he was aware that unrestricted set formation was inconsistent. \n\nFill in the dots (2x).","cantor naive"],
["Georg Cantor's work in set theory (late 1800s), preceded Russell’s p.. (early 1900s). \nHe was thus working with the naive, hence inconsistent view of sets, not working within an axiomatic framework. \n\However, he was aware that unrestricted set formation was i.. . \n\nFill in the dots (2x).","paradox inconsistent"],
["Axioms of Naïve Set Theory: \n(1) Axiom of ... = “you know a set if you know its members; sets with same members are identical”= Ɐa Ɐb [Ɐx (x ∈ a ↔ x ∈ b) → a = b]. By extensionality sets are unordered: {0,1} = {1,0} \n(2) Axiom of Comprehension = “every determinate property (every FOL formula) determines a set”= ꓱ... Ɐx [x ∈ a ↔ P(x)] = an axiom scheme. \n\nFrom these 2 axioms, 14 propositions follow, of which 2 are contradictory.\n\nFill in the dots (2x).","extensionality a"],
["Axioms of Naïve Set Theory: \n(1) Axiom of Extensionality = “you know a set if you know its members; sets with same members are i..”= Ɐa Ɐb [Ɐx (x ∈ a ↔ x ∈ b) → a = b]. By extensionality sets are unordered: {0,1} = {1,0} \n(2) Axiom of ... = “every determinate property (every FOL formula) determines a set”= ꓱa Ɐx [x ∈ a ↔ P(x)] = an axiom scheme. \n\nFrom these 2 axioms, 14 propositions follow, of which 2 are contradictory.\n\nFill in the dots (2x).","identical comprehension"],
["Axioms of Naïve Set Theory: \n(1) Axiom of Extensionality = “you know a set if you know its members; sets with same members are identical”= Ɐa Ɐb [Ɐx (x ∈ a ↔ x ∈ ...) → a = b]. By extensionality sets are unordered: {0,1} = {1,0} \n(2) Axiom of Comprehension = “every determinate property (every FOL formula) determines a set”= ꓱa Ɐx [x ∈ a ↔ P(...)] = an axiom scheme. \n\nFrom these 2 axioms, 14 propositions follow, of which 2 are c.. .\n\nFill in the dots (3x).","b x contradictory"],
["Modern set theory (e.g. Zermelo & Frankel's ZFC) versus naive set theory: \n1. Modern set theory replaces the inconsistent naive concept of set, with a concept of set as a collection that is not too l.. . \n2. These collections arise in stages, where a set arises only after all its members are present. \n3. The Axiom of Comprehension of set theory is replaced by the Axiom of Separation and some of the intuitively correct consequences of the Axiom of Comprehension. \n4. Modern set theory also contains the Axiom of ..., justified on the basis of (2). \n5. All the propositions stated for Naïve Set Theory except 1 and 14, are also theorems of zfc.\n\nFill in the dots (2x).","large Regularity"],
["Modern set theory (e.g. Zermelo & Frankel's ZFC) versus naive set theory: \n1. Modern set theory replaces the inconsistent naive concept of set, with a concept of set as a collection that is not too large. \n2. These collections arise in stages, where a set arises only a.. all its members are present. \n3. The Axiom of Comprehension of set theory is replaced by the Axiom of Separation and some of the intuitively correct consequences of the Axiom of Comprehension. \n4. Modern set theory also contains the Axiom of Regularity, justified on the basis of (2). \n5. All the p.. stated for Naïve Set Theory, except 1 and 14, are also theorems of zfc.\n\nFill in the dots (2x).","after propositions"],
["Modern set theory (e.g. Zermelo & Frankel's ZFC) versus naive set theory: \n1. Modern set theory replaces the inconsistent naive concept of set, with a concept of set as a collection that is not too large. \n2. These collections arise in stages, where a set arises only after all its members are present. \n3. The Axiom of Comprehension of set theory is replaced by the Axiom of S.. and some of the intuitively correct consequences of the Axiom of Comprehension. \n4. Modern set theory also contains the Axiom of Regularity, justified on the basis of point ... .\n5. All the propositions stated for Naïve Set Theory, except 1 and 14, are also theorems of zfc.\n\nFill in the dots (2x).","Separation 2"],
]

logic_computability_theory =  [ # From Barwise logic study book ch16, very incomplete, derive more questions from my summary of the book please.
["Proof by (mathematical) induction can be used to prove ꓯx[P(x)→Q(x)] statements, and is available when the predicate P(x) has an inductive definition. \nAn inductive definition contains 3 elements: \n(1) a ... clause, which specifies the basic elements of the defined set \n(2) 1 or more inductive clauses, which tell how to generate additional elements \n(3)a final clause, which tells that all elements are basic or generated by i.. clauses. \nFill in the dots (2x)","base inductive"],
["Proof by (mathematical) induction can be used to prove ꓯx[P(x)→Q(x)] statements, and is available when the predicate P(x) has an inductive definition. \nAn inductive definition contains 3 elements: \n(1) a base clause, which specifies the b.. elements of the defined set \n(2) 1 or more i.. clauses, which tell how to generate additional elements \n(3)a final clause, which tells that all elements are basic or generated by inductive clauses. \nFill in the dots (2x)","basic inductive"],
["Proof by (mathematical) induction can be used to prove ꓯx[P(x)→Q(x)] statements, and is available when the predicate P(x) has an inductive definition. \nAn inductive definition contains 3 elements: \n(1) a base clause, which specifies the basic elements of the defined set \n(2) 1 or more inductive clauses, which tell how to generate a.. elements \n(3)a f.. clause, which tells that all elements are basic or generated by inductive clauses. \nFill in the dots (2x)","additional final"],
["Proof by induction = basis step + inductive step. \nThe Inductive step consists of the following 2 elements: \n(1) inductive h.. (=assumption) \n(2) inductive hypothesis => generated members have property Q (=show that new members have property Q). \n\nFill in the dots (1x).","hypothesis"],
["I..’s paradox: \nSuppose we want to prove that the string “A1 ⇁→ A2” is not an ambig-wff. \nThe proposition “No ambig-wff has ⇁ occurring right before one of the binary connectives” would be too weak: the proof can get stuck. \nWe need a strong enough claim: e.g.: “no ambig-wff begins with a binary connective, or ends with a negation sign, or has a negation sign immediately preceding a binary connective.” \nBetter solution: if we work in Set Theory we can create an inductive definition of the set S of ambigg wff’s in FOL by using the concept of 's.. set'. \nIn inductive proof, what we are really doing is showing that such a set {x|Q(x)} exists, satisfying some clauses (conditions). \n\nFill in the dots (2x).","inventor smallest"],
["Inventor’s paradox: \nSuppose we want to prove that the string “A1 ⇁→ A2” is not an ambig-wff. \nThe proposition “No ambig-wff has ⇁ occurring right before one of the binary connectives” would be too weak: the proof can get stuck. \nWe need a s.. enough claim: e.g.: “no ambig-wff begins with a binary connective, or ends with a negation sign, or has a negation sign immediately preceding a binary connective.” \nBetter solution: if we work in Set Theory we can create an inductive definition of the set S of ambigg wff’s in FOL by using the concept of 's.. set'. In inductive proof, what we are really doing is showing that such a set {x...Q(x)} exists, satisfying some clauses (conditions). \n\nFill in the dots (2x).","smallest |"],
["Monotone operator Γ on set D = \na function Γ which assigns to each X ⊆ D a s.. Γ(X) ⊆ D satisfying the following monotonicity condition: \nꓯX ꓯY [X ⊆ Y → Γ(X)⊆ Γ(Y)]. \n\nThink of inductive definitions as given by a Γ. For example: \nD=the real numbers: Γ(X)= X∪{x+...|x=0 ∨ x∈X}. \n\nFill in the dots (2x).","subset 1"],
["Monotone operator Γ on set D = \na function Γ which assigns to each X ⊆ D a subset Γ(X) ⊆ D satisfying the following monotonicity condition: \nꓯX ꓯY [X ⊆ Y → Γ(X)⊆ Γ(...)]. \n\nThink of inductive definitions as given by a Γ. For example: \nD=the real numbers: Γ(...)= X∪{x+1|x=0 ∨ x∈X}. \n\nFill in the dots (2x).","Y X"],
["Peano Arithmatic (PA) = The natural numbers described by means of an inductive definition: \nThe obviously true claims about the natural numbers (N) are formalized in 7 axioms of PA. \nPlus: an axiom s.. for mathematical induction on N: [Q(0)∧ꓯx(Q(x)→...(x+1))]→ꓯxQ(x). \n\nFill in the dots (2x).","scheme Q"],
["Peano Arithmatic (PA) = The natural numbers described by means of an inductive definition: \nThe obviously true claims about the natural numbers (N) are formalized in 7 a.. of PA. \nPlus: an axiom scheme for mathematical induction on N: [Q(0)∧ꓯx(Q(x)→Q(x+1))]→ꓯ...Q(x). \n\nFill in the dots (2x).","axioms x"],
]

logic_model_theory =  [ # From Barwise logic study book ch17&18, very incomplete, derive more questions from my summary of the book please.
["For proving theorems about FOL, truth tables need to be modeled in a mathematically precise way, using set theory. \nTherefore we define: \nTruth a.. = any function h from the set of all atomic sentences into the set {true, false} provided that h assigns false to the formula ⊥. \nFor each atomic sentence A, h gives us a truth value, written h(A), either true or false.\n\nFill in the dots (1x).","assignment"],
["To define what it means for function h to make any sentence true or false we extend h to a function h^ defined on the set of all sentences. \nFor example: \nSentence S is a t.. if every truth assignment h has S coming out true, that is, h^(S) = true. \nS is a taut consequence of a set T if all truth assignments that make all sentences in T true also make S true. \nS is t.. if there is a truth assignment h such that h^(S) = true. \nA set T of sentences is tt-satisfiable if there is 1 assignment h that makes each of the sentences in T true. \n\nFill in the dots (2x).","tautology tt-satisfiable"],	
["Def of tautological consequence: \nS is a tautological consequence of the set T iff the set T⋃{-S} is not t... \nIf T is finite, we can reduce the question of whether S is a tautological consequence of T to the question of whether a single sentence is not t.., namely the conjunction of the sentences in T and -S. \n\nFill in the missing word (1x).","tt-satisfiable"],
["Completeness Theorem for propositional logic: \nIf a sentence S is a t.. consequence of a set T of sentences then T ⊢_T S. \nFor its proof we use this notation: \nF_T = the part of F that uses only intro and elim rules for ꓥ,∨,⇁,→,↔ and ⊥ = The propositional p.. system. \nGiven a set T of sentences and another sentence S, we write T ⊢_T S = “there is a formal proof of S in the system ..._T with premises from T”. \n\nFill in the dots (3x).","tautological proof F"],
["Completeness Theorem for propositional logic: \nIf a sentence S is a tautological consequence of a set T of sentences then T ⊢_T S. \nThis can be proven by c..: if T⊬_T S (if there is no proof of S from T ), then S is not a tautological conseq of T. \nSo, we will show that if T⊬_T S, then there is a truth assignment h that makes all of the sentences in T true, but S false. \nThen: show that T ⋃{-...} is tt-satisfiable.\n\nFill in the dots (2x).","contradiction S"],
["Completeness Theorem for propositional logic: \nIf a sentence S is a tautological consequence of a set T of sentences then T ⊢_T S. \nThis can be proven by contradiction: if T⊬_T ... (if there is no proof of S from T ), then S is not a tautological conseq of T. \nSo, we will show that if T⊬_T S, then there is a truth assignment h that makes all of the sentences in ... true, but S false. \nThen: show that T ⋃{-S} is ...satisfiable.\n\nFill in the dots (2x).","S T tt-"],
["Compactness Theorem for Propositional Logic: \nIf every finite s.. of T is tt-satisfiable, then T itself is tt-satisfiable.\nThis follows from the completeness theorem for propositional logic.\n\nFill in the dots (2x).","subset completeness"],
["Compactness Theorem for Propositional Logic: \nIf every f.. subset of T is tt-satisfiable, then T itself is tt-satisfiable.\nThis follows from the ... theorem for propositional logic.\n\nFill in the dots (2x).","finite completeness "],
["An FO s.. 𝕸 is analogous to a truth assignment in propositional logic. \nIt represents circumstances that determine the truth values of all of the sentences of a language, but does so in a way that identity and FO quantifiers Ɐ and ꓱ are respected. \nThis allows us to give a precise definition of FO c.. and FO validity.\n\nFill in the dots (2x).","structure consequence"],
["Skolemization: \nGiven a sentence of the form Ɐxꓱy P(x, y) in some FO language, we skolemize it by choosing a f.. symbol f not in the language and writing Ɐx P(x, f(x)). \nEvery world that makes the Skolemization true also makes the original sentence true. \nEvery world that makes the original sentence true can be turned into one that makes the Skolemization true by interpreting f.. symbol f by a f.. 𝑓 which picks out, for any object b in the domain, some object c such that they satisfy the wff P(x, y). \n\nFill in the missing word (1x).","function"],
["... for First Order Logic (FOL) was first proven by Gödel, but there is also a later easier proof by Henkin.\n\nFill in the dots (1x).","completeness"],
["Completeness for First Order Logic (FOL) was first proven by Gödel, but there is also a later easier proof by H.. .\n\nFill in the dots (1x).","Henkin"],
["Countable set = a set that is finite or is the same size as the set of ... numbers. \n\nFill in the dots (1x).","natural"],
["Countable set = a set that is ... or is the same size as the set of natural numbers. \n\nFill in the dots (1x).","finite"],
["... set = a set that is finite or is the same size as the set of natural numbers. \n\nFill in the dots (1x).","countable"],
["Löwenheim-Skolem(LS) Theorem: \nIf T satisfied by a FO structure then T satisfied by 1 whose domain is c.. . \n\nThe LS Theorem was proven before Gödel proved completeness for F.. . \n\nFill in the dots (2x).","countable FOL"],
["Löwenheim-Skolem(LS) Theorem: \nIf T satisfied by a FO s.. then T satisfied by 1 whose domain is countable. \n\nThe LS Theorem was proven before Gödel proved c.. for FOL. \n\nFill in the dots (2x).","structure completeness"],
["Löwenheim-Skolem (LS) paradox: \nWe can prove in ZFC that the powerset of an infinite set is u.. . \nThen how can the axioms ZFC be true in a countable s.., as the Löwenheim-Skolem Theorem implies? \nSolution: it rests on the nature of the structure we constructed in the proof of the LS Theorem as applied to ZFC: \nthere is no 'function' in 𝔐h that e.. the infinite set b.\n\nFill in the dots (3x).","uncountable structure enumerates"],
["Compactness Theorem for FOL: \nIf every finite s.. of a set of FO sentences T is true in some FO structure, then there is an FO s.. 𝕸 that makes every sentence of T true. \nThis follows from the completeness theorem for FOL.\n Like the LS Theorem, this shows expressive limitations of FOL. \nE.g. it is impossible to come up with a.. in FOL of arithmetic that characterize the structure of the natural numbers.\n\nFill in the dots (3x).","subset structure axioms"],
["Compactness Theorem for FOL: \nIf every finite subset of a set of FO sentences T is true in some FO structure, then there is an FO structure 𝕸 that makes every sentence of T ... . \nThis follows from the completeness theorem for FOL.\n Like the LS Theorem, this shows e.. limitations of FOL. \nE.g. it is impossible to come up with axioms in FOL of arithmetic that characterize the s.. of the natural numbers.\n\nFill in the dots (2x).","true expressive structure"],
]

logic_proof_theory =  [ # From Barwise logic study book ch18, very incomplete, derive more questions from my summary of the book please.
["Gödel proved both ... and in... for FOL. \nThe senses of ... involved in these 2 theorems are different. \n The ... Theorem tells us that our formal rules of proof adequately capture FO conseq. \nBut the In... Theorem involves the notion of formal ... . \nT is said to be formally complete if for any sentence S of its language, either S or ⇁S is provable from T. \nBy soundness and ... this is equiv to saying that S or ⇁S is a FO conseq of T. \n\nFill in the missing word (1x).","completeness"],
["Gödel proved both completeness and incompleteness for FOL. \nThe senses of completeness involved in these 2 theorems are different. \nThe Completeness Theorem tells us that our formal rules of proof adequately capture FO conseq. \nBut the Incompleteness Theorem involves the notion of f.. completeness. \nT is said to be formally complete if for any sentence S of its language, either S or ⇁S is p.. from T. \nBy soundness and completeness this is equiv to saying that S or ⇁S is a FO conseq of T. \n\nFill in the dots (2x).","formal provable"],
["Gödel proved both completeness and incompleteness for FOL. \nThe senses of completeness involved in these 2 theorems are different. \nThe Completeness Theorem tells us that our formal rules of proof adequately capture FO conseq. \nBut the Incompleteness Theorem involves the notion of formal completeness. \nT is said to be formally complete if for any sentence S of its language, either S or ⇁S is p.. from T. \nBy soundness and completeness this is equiv to saying that S or ⇁S is a FO c.. of T. \n\nFill in the dots (2x).","provable consequence"],
["Gödel proved both completeness and incompleteness for FOL. \nThe senses of completeness involved in these 2 theorems are different. \nThe Completeness Theorem tells us that our formal rules of proof adequately capture FO c.. . \nBut the Incompleteness Theorem involves the notion of formal completeness. \nT is said to be formally complete if for any sentence S of its language, either S or ⇁S is provable from T. \nBy soundness and c.. this is equiv to saying that S or ⇁S is a FO conseq of T. \n\nFill in the dots (2x).","consequence completeness"],
["G=The Gödel s.. = 'This sentence is not provable from the axioms of Peano arithmetic.' \nG is true but not provable in PA: Proof: \nIndirect proof=> true => from G itself: G is not provable. \n\nThe Incompleteness Theorem follows immediately from this, because: \nWe have found a true sentence in the language of PA that is not p.. from the Peano axioms. \nWhat’s more, the negation of this sentence cannot be provable, again because the provable consequences of the Peano axioms are all true => Peano arithmetic is not f.. complete.\n\nFill in the dots (3x).","sentence provable formally"],
["G=The Gödel sentence = 'This sentence is not p.. from the axioms of Peano arithmetic.' \nG is true but not provable in PA: Proof: \nIndirect proof=> true => from G itself: G is not provable. \n\nThe ... Theorem follows immediately from this, because: \nWe have found a true sentence in the language of PA that is not provable from the Peano axioms. \nWhat’s more, the negation of this sentence cannot be provable, again because the provable consequences of the Peano axioms are all ... => Peano arithmetic is not formally complete.\n\nFill in the dots (3x).","provable incompleteness true"],
["G=The Gödel sentence = 'This sentence is not provable from the axioms of Peano arithmetic.' \nG is true but not provable in PA: Proof: \nIndirect proof=> true => from G itself: G is not provable. \n\nThe Incompleteness Theorem follows immediately from this, because: \nWe have found a true sentence in the language of PA that is not p.. from the Peano axioms. \nWhat’s more, the n.. of this sentence cannot be provable, again because the provable consequences of the Peano axioms are all true => Peano arithmetic is not formally c.. .\n\nFill in the dots (3x).","provable negation complete"],
]


cse_progr_lang_paradigms = [
	["5 programming language paradigms: \n(1) I.. \n(2) Object oriented (OO) (classes & instances): \n   -All of the top 10 languages are OO (except C) \n(3) Procedural \n   -Assembly (very limited abilities: +1, loops, and write mem cells; no multiplic) \n   -Scripts and print(hello world) are procedural in style: IF this then DO this. \n(4) F.. (FP)\n   -Pure functional languages do not change states of variables\n   -Just reads input and produces output using built functions\n   -Short code.\n   -Haskel \n   -Lisp \n(5)Logic/Constraint programming: \n   -Just finds a model that satisfies IF THEN rules + constraints\n   -Prolog \nMost popular languages are hybrids, having properties from more paradigms. \nIn terms of style, there is a slow trend of transitioning from OO to FB (supporting more FB functionality). \n\nFill in the dots (2x).","Imperative Functional"],
	["5 programming language paradigms: \n(1) Imperative \n(2) Object oriented (OO) (classes & instances): \n   -All of the top 10 languages are OO (except C) \n(3) P.. \n   -Assembly (very limited abilities: +1, loops, and write mem cells; no multiplic) \n   -Scripts and print(hello world) are procedural in style: IF this then DO this. \n(4) Functional (FP)\n   -Pure functional languages do not change states of variables\n   -Just reads input and produces output using built functions\n   -Short code.\n   -Haskel \n   -Lisp \n(5)Logic/Constraint programming: \n   -Just finds a model that satisfies IF THEN rules + constraints\n   -Prolog \nMost popular languages are hybrids, having properties from more paradigms. \nIn terms of style, there is a slow trend of transitioning from OO to FP (supporting more ... functionality). \n\nFill in the dots (2x).","Procedural FP"],
	["5 programming language paradigms: \n(1) Imperative \n(2) Object oriented (OO) (classes & instances): \n   -All of the top 10 languages are OO (except C) \n(3) Procedural \n   -A.. (very limited abilities: +1, loops, and write mem cells; no multiplic) \n   -Scripts and print(hello world) are procedural in style: IF this then DO this. \n(4) Functional (FP)\n   -Pure functional languages do not change states of variables\n   -Just reads input and produces output using built functions\n   -Short code.\n   -H.. \n   -Lisp \n(5)Logic/Constraint programming: \n   -Just finds a model that satisfies IF THEN rules + constraints\n   -Prolog \nMost popular languages are hybrids, having properties from more paradigms. \nIn terms of style, there is a slow trend of transitioning from OO to FB (supporting more FB functionality). \n\nFill in the dots (2x).","Assembly Haskel"],
	["... (by Mc Carthy) was the first programming language to introduce garbage collection. \n\nFill in the dots.","Lisp"],
	["Lisp (by Mc Carthy) was the first programming language to introduce g.. c.. . \n\nFill in the dots (2 words).","garbage collection"],
	["Lisp, created by mathematician ... ... was the first programming language to introduce garbage collection. \n\nFill in the dots (2 words).","mc carthy"],
	]

    
cse_python = [
    ["Python OOP Exercise: \nCreate a Vehicle class with max_speed and mileage instance attributes. Answer: \n class Vehicle: \n  def ...: \n    self.max_speed = max_speed \n    self.mileage = mileage. \n\n\n\nFill in the dots.","__init__(self, max_speed, mileage)"],
    ["Python OOP Exercise: \nUse an existing 'Vehicle' class with max_speed and mileage instance attributes, to instantiate an object named 'car1' with max_speed=240 and mileage=180 ","car1 = Vehicle(240,180)"],
    ["Python OOP Exercise: \nCreate a 'Bus' object that will inherit all of the variables and methods of an existing 'Vehicle' class. Include only the first line, including : (ignore the 'pass' word you could put inside)","class Bus(Vehicle):"],
    ["Python OOP: \nVariables created in .__init__() are i.. v.. . Their value is specific to a particular object instance belonging to the class. E.g. all objects of class 'Vehicle' may have variables 'name' and 'max_speed', but they vary depending on the particular Vehicle instance. On the other hand, c.. a.. have the same value for all object instances of a class.\n\nFill in the missing words.","instance variables class attributes"],
    ["Python OOP: \nThe ... function is used to give access to methods and properties of a parent or sibling class.\n\nFill in the missing term.","super()"],
    ["Python is a d.. programming language. \nA d.. programming language is a class of high-level programming languages, which at runtime execute many common programming behaviours that s.. programming languages perform during compilation. These behaviors could include an extension of the program, by adding new code, by extending objects and definitions, or by modifying the type system.\n\nFill in the 2 missing terms: d.. s..","dynamic static"],
    ["Python is a dynamic programming language. \nA dynamic programming language is a class of high-level programming languages, which at r.. execute many common programming behaviours that static programming languages perform during c.. . These behaviors could include an extension of the program, by adding new code, by extending objects and definitions, or by modifying the type system.\n\nFill in the 2 missing terms: r.. c..","runtime compilation"],
    ["Python: \nA dynamic programming at runtime executes many common programming behaviours that static programming languages perform during compilation. \nE.g.: extension of the program, by adding new code, by extending objects and definitions, or by modifying the type system. Many of these features were first implemented as native features in the ... programming language.\n\nFill in the name.","lisp"],
    ["Python: \nIn programming languages, a ... sytem is a logical system comprising a set of rules that assigns a property called a ... to the various constructs of a computer program, such as variables, expressions, functions or modules. These ...s formalize and enforce the otherwise implicit categories the programmer uses for algebraic data ...s, data structures, or other components (e.g. 'string', 'array of float'', 'function returning boolean'). The main purpose of a ... system is to reduce possibilities for bugs in computer programs by defining interfaces between different parts of a computer program, and then checking that the parts have been connected in a consistent way. This checking can happen statically (at compile time), dynamically (at run time), or as a combination of both. ... systems are often specified as part of programming languages and built into interpreters and compilers, although the ... system of a language can be extended by optional tools that perform added checks using the language's original ... syntax and grammar.\n\nFill in the missing term (1 word)","type"],
    ["Python: \nDogs, cats and cows share characteristics like (1) They are mammals. (2) They have a tail and four legs. (3) They are domestic animals. \nSo, the classes dogs, cats and horses are subclasses of the 'animal' class. This is an example of s.. i.. because many subclasses are inherited from a single parent class.","single inheritance"],
    ["Python OOP Exercise: \nIn the following code, add a line that makes the class 'Dogs' inherit the variable (4 legs) that was defined in class 'Animals' as: \ndef __init__(self): \n  self.legs = 4. \n\nAnswer: \nDogs(Animals): \n  def __init__(self): \n    ...","super().__init__()"],
    ["Python Exceptions:\n\nFill in the 3 missing words required to print the number 4: \ntry: \n  print(20 / 0) \ne.. Z..: \n  print(3) \nf..: \n  print(4)","except ZeroDivisionError finally"],
    ["Python: \nOpen the file test.txt in binary write mode: open('test.txt','...').\n\nFill in the dots",'wb'],
    ["Python: \nCode for trying to open and read from a file. Print an error message in case of exception.\n\nFill in the 2 missing words: \ntry: \n  w.. open('test.txt') as f: \n   print(f.read()) \ne..: \n  print('Error')",'with except'],
    ["Python: \nPrint 3 in case of the following error.\n\nFill in the missing words: \ntry: \n  print(1) \n  assert 2 + 2 == 5 \ne.. A..: \n  print('3')",'except AssertionError'],
    ["Python: \nUse slicing to reverse the list 'numbers'.","numbers[::-1"],
    ["Python: \nA t.. can be described as an immutable list.\n\nFill in the missing word.","tuple"],
    ["Python: \nWhat is returned by functions that don't have a return statement?","None"],
    ["Python Functional Programming: \nWhat is the result of this code: \ndef power(x,y): \n  if y == 0: \n    return 1 \n  else: \n    return x*power(x,y-1) \nprint(power(2,3))","8"],
    ["Python Functional Programming:\nFill in the blanks to calculate the expression x*(x+1) using an anonymous function and call it for number 6: \na = (... x: x...(x+1)) (...) \nprint(a)","lambda * 6"],
    ["Python Functional Programming: \nFill in the blanks to leave only even numbers in the list: \nnums = [1,2,8,3,7] \nres = list(...(... x: x%... == 0, nums)) \nprint(res)","filter lambda 2"],
    ["Python Functional Programming: \nHow to print only items in set 'a' that are not in set 'b': print(... ... ...)\n\nFill in the missing dots.","a - b"],
    ["Python OOP: \nA property is created using the property d.. .\n\nFill in the missing word.","decorator"],
    ["Python OOP: \nThe difference between a ... method and a static method is that ... methods are passed the calling ..., while static methods aren't.\n\nFill in the missing word.","class"],
    ["Python OOP: \nThe usual parameter names for the calling instance and the calling class are ... and ... .\n\nFill in the missing words.","self cls"],
    ["Python OOP: \nWhat method is called just before an object is instantiated?","__init__"],
    ["Python OOP: \nThe following code makes the egg a.. strongly p.. and accesses it from outside of the ... .\n\nFill in the 3 missing words. \nclass Test \n  __egg = 7 \n\nt = Test() \nprint(t._Test__egg)","attribute private class"],
    ["Python OOP:\n\nFill in the 2 missing words to make a setter for the property 'name': \nclass Person: \n  def__init__(self,name): \n    self._name = name \n\n@property \ndef name(self): \n  return self._name \n\n@... \ndef name(self,value): \n  self. ... = value","@name.setter _name"],
    ["Python OOP: \ncreate a new 'Car' class by inheriting from the 'Vehicle' class: ... ... (...). Give the complete line of code.","class Car(Vehicle)"],
    ["Python Regular Expressions: \nWhich of these metacharacters is not to do with repetition: '+', '*' or backslash?",'backslash'],
    ["Python Regular Expressions: \nA RegEx, is a seq of characters that forms a search pattern. \nRegEx can be used to check if a string contains the specified search pattern. Python has a built-in package which can be used for this. You can import this module with '... ...'.\n\nFill in the line of code.","import re"],
    ["Python Regular Expressions: \nHow many groups are in the regex (ab)(c(d(e)f))(g)?","5"],
    ["Python Regular Expressions: \nWhat would be matched by '(4{5,6})\1? Answer: ... or ... fours.\n\nFill in the missing dots.","10 12"],
    ["Python Pythonicness & Packaging: \nWhich of these isn't a file used in creating a package? (a): __py2exe__.py, (b):__init__.py, (c): setup.py","a"],
    ["Python Pythonicness & Packaging: \nWhat is PEP 8? \nAnswer: g.. for writing code.","guidelines"],
    ["Python Pythonicness & Packaging: \nWhat is the output of this code?: \ndef func(**kwargs): \n  print(kwargs['zero']) \nfunc(a = 0, zero = 8)","8"],
    ["Python Pythonicness & Packaging: \nWhat is the sum of the numbers printed by this code?: \nfor i in range(10): \n  try: \n    if 10 / i == 2.0: \n      break \n  except ZeroDivisionError: \n    print(1) \n  else: \n    print(2)","9"],
    ["Python Pythonicness & Packaging:\n\nFill in the missing dots to swap the variable values with one single statement: \na=7 \nb=42 \na ... b = ... , ...",", b a"],
    ]

cse_c_plusplus = [   
    ['C++: \nFill in the missing code to print "I love C++" on the screen: \n#... <iostream> \n... namespace std; \n... main() \n{ \ncout<<"I love C++" << endl; \n... 0; \n}',"include using int return"],
    ['C++: \nDeclare 2 variables of type int and print their sum.\n\nFill in the dots (3x): \nint x = 4; \n... y = 7; \nint sum = x ... y; \ncout<<"sum equals to "<< ... << endl;',"int + sum"],
    ['C++: \nIn every C++ program, each variable must have its data t.. , and there must be a function named ... .\n\nFill in the missing words.',"type main"],
    ['C++: \nWhat is the output of the following code: \nint a=3; \nint b=2; \nb=a++; \ncout<<++b;',"4"],
    ['C++: \nType in the code to enter a value and store in var x, then test if its >20, print its big, and if <10 print its small.\n\nFill in gaps. \nint x; \ncin>>x; \nif(x... 20) { \n cout<<"x is big" << endl; \n} \nif (x<...) { \n cout<<"x is small"<<endl; \n}',"> 10"],
    ['C++: \nThe s.. statement may be an alternative for multiple if statements.\n\nFill in the missing word.',"switch"],
    ['C++: \na||b is true if a ... b is true. (a||b)&& c is true if ... is true and either a or b is true.\n\nFill in the missing words (2x).',"or c"],
    ['C++: \nType in a code to declare an array of 12 doubles named "darr".\n\nFill in the missing code: \ndouble darr...',"[12]"],
    ['C++: \nType in the missing parts to print the elements of myArray to the screen using the for loop: \nint myArray[4] = {1,2,3,4}; \nfor (int x = 0; x< ... ; x++) { \n cout<<myArray[...]<<endl; \n}',"4 x"],
    ['C++: \nType in code to declare an array myArray of 14 integers and enter the elements vals using the cin operator.\n\nFill in the gaps: \nint myArray[...]; \nfor (int x = 0; x< 14; x++) { \n...>>myArray[x]; \n}',"14 cin"],
    ['C++: \nThe function of the new int; expression is to a.. memory on the h.. .\n\nFill in the missing gaps.',"allocate heap"],
    ['C++: \nType in a code to declare a pointer "ptr" to int and assign its value to the address of var.\n\nFill in the gaps: \nint var = 25; \n int ...ptr = ...var;',"* &"],
    ['C++: \nFill in the blanks to declare 2 vars a and b; and 2 pointers pa and pb that point to a and b. \nPrint on screen the value of the division of a and b vars accessed via pointers pa and pb.\n\nFill in gaps: \nint a = 12; int b = 14; \nint* pa = &a; \nint* pb = &b; \ncout<<...pa ...*pb<<endl;',"* /"],
    ['C++: \nThe ... function always begins C++ programs.\n\nFill in the gap.',"main"],
    ['C++: \nType in a code to declare a funct printIt which prints to the screen. Call printIt from the main.\n\nFill in gaps: \nvoid printIt() \{cout<<"I love C++"<<endl;} \n... main() \n{printIt...; \nreturn 0;}',"int ()"],
    ['C++: \nType in the missing param type of the function, taking an int val, and printing it to screen.\n\nFill in gaps: \nvoid myFunction(... x) \n{ \ncout<<x<<endl; \n}',"int"],
    ['C++: \nType in a code to declare a function myFunction, taking 2 int params with default vals 1 and 2, and printing their multiplic to screen.\n\nFill in gaps: \nvoid myFunction(int a = 1, int b... 2) \n{ \ncout<<a...b<<endl;\n}',"= *"],
    ['C++: \nType in the missing parts of the function calcSum, which takes an array and its size as params. \nIt calculates the sum of the array elements and prints to screen: \nvoid calcSum(int arr[], int size) \n{ \nint sum = 0; \n... (int x = 0; x < size; x++) \n{ \nsum += arr[x]; \n} \ncout<<sum<<endl; \n}',"for x"],
    ['C++: \nThe 3 terms used to describe an object in OOP are: \nattributes, behavior and: ... .\n\nFill in the missing word.',"identity"],
    ['C++: \nThe "public" and "private" keywords are called: a.. s..',"access specifiers"],
    ['C++: \nFill in the blanks to declare the class Student, with 1 public function called hello, which prints text to screen.\n\nFill in the gaps: \n... Student \n{ \npublic: \n  void hello(){ \n    cout<<"hi from student"<<endl; \n  } \n};',"class public cout"],
    ['C++: \nFill in the blanks to declare the class Student, with int data member called age. Student class has constructor with 1 arg that sets the val of the age data member.\n\nFill in gaps: \nclass Student { \nprivate: \n int age; \n...: \n Student(int a) { \n  setAge(...); \n } \n  int getAge(){ \n   return age; \n   } \n};',"public a int return"],
    ['C++: \nFill in the blanks to declare a destructor for the class Student.\n\nFill in gaps: \nclass Student { \npublic: \n Student(); \n  ...Student(); \n};',"~"],
    ['C++: \nFill in the blanks to declare a pointer to the st, where st is of type Student, then call printAge() via the pointer.\n\nFill in gaps: \nStudent st; \nStudent ...stPtr = ...st; \nstPtr...printAge();',"* & ->"],
    ['C++: \nType in the missing keyword to declare a constant object of type "Person": \n\n... Person obj',"const"],
    ['C++: \nFor a class P, with 1 constant member "weight" of type double,\n\nFill in the blanks to initialize "weight" in the constructor initializer list: \nP::P(double w)... \n ...(w) \n { \n }',": weight"],
    ['C++: \nThe keyword that will allow you to indicate that a function is a friend function for a class is: ...',"friend"],
    ['C++: \nFor a class Test with 2 private members "mem" and "mem2",\n\nFill in the blanks to print their vals in the printValues() function using the "this" keyword: \nvoid Test::printValues(){ \n cout<<...->...; \ncout<<this...mem2; \n}',"this mem ->"],
    ['C++: \nWhat is the keyword for overloading an operator in C++?',"operator"],
    ['C++: \nC++ allows you to specify more than one definition for a function name or an operator in the same scope, \nwhich is called function o.. and operator o.. respectively.\n\nFill in the missing word.',"overloading"],
    ['C++: \nFill in the missing keyword to publicly inherit the class D from the Base class: \nclass D : ... Base \n{ \n};',"public"],
    ['C++: \nThe keyword that makes class members accessible to only its derived class members is: ...',"protected"],
    ['C++: \nThe general rule for destructors in inheritance is: \nThe ... class destructor is called before the ... class destructor.\n\nFill in the missing word.',"derived base"],
    ['C++: \nFill in the 3 blanks to declare Dog and Cat objects, and 2 Pet pointers pointing to the Dog object and the Cat objects respectively: \nDog dogobj; Cat catObj; \nPet... pet1 = ...dogObj; \nPet* pet2 = ...catObj;',"* & &"],
    ['C++: \nFill in the 3 blanks to declare a Person class, with the hello() virtual function, and then declare a Student class that inherits from the Person class and overrides its hello() virtual function: \nclass Person { \npublic: \n ... void hello() { \n   cout<<"Person says hello";} \n}; \n... Student : ... Person { \npublic: \n  void hello(){ \n    cout<<"Student says hello";} \n};',"virtual class public"],
    ['C++: \nFill in the 2 blanks to make "foo" a pure virtual function: \n\n... void foo() ... 0;',"virtual ="],
    ['C++: \nFill in the 3 blanks to declare a template function with 2 args of template type myT. \nThe function returns the multiplic of its args: \n... <class myT> \nmyT mult(... a, myT b) \n{ \n  ... a*b; \n}',"template myT return"],
    ['C++: \nFill in the 3 blanks to declare a template class MyClass with 2 template data members: first and second. \nInitialize them in the constructor: \n... <class T> \n... Myclass \n{ \nT first; \nT ...; \npublic: \n MyClass(T a, T b){ \n  first = a; \n   second = b; \n } \n};',"template class second"],
    ['C++: \nDefine the MyClass member function myFunc(), where MyClass is a template class and myFunc prints to the screen. \n\n\nFill the gaps: \n... <class T> \nvoid MyClass<...>::myFunc() \n{ \n ...<<"I love C++"<<endl; \n}',"template T cout"],
    ['C++: \nFill in the 2 blanks to specialize the Myclass template class for integers: \ntemplate... \nclass MyClass<...> \n{ \npublic: \n MyClass(int x){ \n   cout<<x<<endl; \n  } \n};',"<> int"],
    ['C++: \nDeclare a file object fileObj and open a file named "myfile.txt" by calling the open() function on the fileObj object.\n\nFill in the missing parts: \n#include <...> \n... main(){ \n ... fileObj; \n fileObj.open("myfile.txt"); \n}',"fstream int ofstream"],
    ]


cse_machine_learning = [
    ['If the training error is low and the test error is high for a K-Nearest Neighbor classifier, we need to decrease K. \nTrue (t) or False (f)?', 'f'],
    ['If the density of samples from two classes are both Gaussian and have the same covariance matrix then statistically the best decision boundary is a hyperplane. True (t) or False (f)?','t'],
    ['What is the result of transpose convolving [1, 2, 3, 4] with [1, 2, 1]? \na. [8, 12] or b. [1, 4, 8, 12, 11, 4]	?','b'],
    ['How does dropout regularize the training of a neural network? a. \nIt reduces dependence on the output of a fixed set of neurons in the layer below. or b. It equalizes the mean and variance of the layer activations ?','a'],
    ['Which regularization method(s)  enforces the parameter vector to be sparse at the loss minima? L1 , L2 or both?', 'L1'],
    ['Which regularization method(s) decrease the weights proportional to the magnitude of themselves during gradient descent iterations.L1, L2 or both?','L2'],
    ['Which regularization method(s) results in a convex function? .L1, L2 or both?', 'both'],
    ['What is the purpose of gating in recurrent neural network architectures? \na. To provide a path for the gradient flow. b. To block gradients from unwanted training samples. c. To process sequence information?','a'],
    ['Which type of inference should be used to determine the probability of the hourly number of new paper submissions for the last 5 days of the CVPR submission period? Density estimation (d), regression (r), or  classification (c)?','d'],
    ['Which type of inference should be used to estimate the coefficients of the orbital trajectory of a planet from noisy observations in the sky? \nDensity estimation (d), regression (r), or  classification (c)?', 'r'],
    ['Which type of inference should be used to estimate whether a given neural network will achieve more than 99.9% accuracy on the MNIST dataset given only its weights? Density estimation (d), regression (r), or  classification (c)?','c'],
    ['Does adding dropout layers change the graph structure of an artificial neural network during inference? y or n.','n'],
    ['Which of the following is a reason to prefer the Adam optimizer over stochastic gradient descent (SGD)? \na. It computes a more accurate gradient. b. It requires less computation. c. It rescales the loss gradient non-uniformly over parameter dimensions.','c'],
    ['For multi layer perceptrons (MLP), if we remove all the ... layers, the resulting decision rule is equivalent to that of a single layer perceptron.\n\nFill in the dots.','nonlinear'],
    ['Which function turns the output of a single layer perceptron to a probability distribution?','softmax'],
    ['A deep autoencoder performs a nonlinear transformation from the input space to the ... space.\n\nFill in the dots.','latent'],
    ['In backpropagation, forward pass computes the ... and the backward pass computes the gradient of the ... function.\n\nFill in the dots (2x).','activations loss'],
    ['The perceptron algorithm always converges if the input data points are within a finite radius ball and are ... separable.\n\nFill in the dots.','linearly'],
    ['Does the perceptron algorithm maximize the margin between the training data points from two classes? y or n?','n'],
    ['The ResNet deep cnn architecture consists of ... blocks.\n\nFill in the dots.','bottleneck'],
    ['What is the purpose of the bottleneck blocks in the ResNet architecture? a. To increase depth. b. To compute better gradients. c. To reduce number of parameters.','c'],
    ]

cse_numerical_computation = [
    ['If we sequentially add new points, then for interpolation it is easier to use Newton his method of ... ... than Lagrange his method.\n\nFill in the dots (2x).','divided differences'],
    ['Take these three root finding approaches:  \nNewton-Raphson Method (n), Bisection Method (b), and Fixed point iterations (f). \nWhich of these requires computation of the derivative? Give the letter.','n'],																
    ['Take these three root finding approaches:  \nNewton-Raphson Method (n), Bisection Method (b), and Fixed point iterations (f). \nFor which of these is it possible to compute the required number of iterations based on the expected precision? Give the letter.','b'], 																																											
    ['Take these three root finding approaches:  \nNewton-Raphson Method (n), Bisection Method (b), and Fixed point iterations (f). \nFor which of these does convergence depend on the first derivative magnitude around the root?','f'],		
	['If we would like to find a root of f(x) = x^2 - 4*x + 3 in the interval [-1, 2] using bisection, what will be the search interval after the first iteration? a. [-1, 0.5] b. [0, 2] c. [1, 2] d. [-1, 0] e. [0.5, 2] ?','e'],
	['Can we convert an ill-conditioned linear system to a well-conditioned one by pivoting? n or y?','n'],
	['Which of the following requires an initial interval with suitable properties to start iterations for root finding? \na. Fixed-point iterations b. Lagrange interpolation c. Bisection d. Divided differences e. Newton-Raphson ','c'],
	['Which type of computations involve loss of significance due to roundoff error in the floating point number representation? \na. When dividing by a very small number. b. When subtracting two very large numbers. c. When taking square roots. d. When subtracting two numbers with very close values. e. When subtracting two very small numbers.','d'],																	
	['Which of the following is not a valid operation for the solution of a linear system of equations using Gaussian elimination? \na. Subtracting a multiple of a row from other rows. b. Exchanging the order of two rows. c. Subtracting two rows from a third one at the same time. d. Multiplying a row by a non-zero scalar. e. Taking the square of the elements in one row?','e'],
    ['Which of the following corresponds to Horner his method of evaluating P(x) = 2*x^4 -x^3 + 3*x^2 - 2*x + 5?   \na. f(x) = (2 * (x * x * x - 1) + (-x + 3) * x) * x + 5   \nb. f(x) = (((2 * x - 1) * x + 3) * x - 2) * x + 5   \nc. f(x) = ((2*x - 1) * x*x + (3*x - 2)) * x + 5	?','c'],
    ['If we want to find where the function f(x) achieves its minimum value close to a starting point x0, we can solve this problem by  a. using Horner his method   b. finding the root of its first derivative  c. interpolating it around x0  d. using bisection of f(x) in an interval around x0   e. writing and solving the corresponding linear system of equations?','b'],
    ['If we have a nonlinear system of 5 equations in 4 unknowns, what are the dimensions of the Jacobian for this system? \nA ... by ... Jacobean. Fill in the dots (2x).','5 4'],
    ['When approximating a function using a finite set of its values and interpolation, the interpolation method of Lagrange gives the same result as the interpolation method of ... .\n\nFill in the dots.',	'Newton'],
    ['What is the Jacobian of the following nonlinear system of equations? f1(x,y) = 2*x + 3*y^2; f2(x,y) = 2*x^2 + 6 (Note that the answers are written in row-major order (row-by-row)). a. [[ 2, 6*y], [4*x, 0]]   b. [[2, 0], [4*x, 6*y]]   c. [[ 2*x, 3*y^2], [2*x^2, 6]]    d. [[4*x, 6*y], [2, 0]]   e. [[ 2, 4*x], [6*y, 0]]','a'],
    ['The smallest floating number greater than 1 that we can represent is (1 + ... ...).\n\nFill in the dots.','machine epsilon'],
    ['The Lagrange polynomial passing through points (1, 2), (2, 1) is:   2 * (x - 2) / (1 - 2) + 1 * (...) / (...).\n\nFill in the dots (2x).','x-1 2-1'],										
    ['The Newton method for root finding requires computation of the first ....\n\nFill in the dots.','derivative'],														
    ['The Newton method for root finding requires evaluation of the ... itself.','function'],														
    ['For the Newton method for root finding, its convergence rate is linear near a ...root','repeated'], 														
    ['For Newton his method for root finding, its ... can be quadratic.\n\nFill in the dots.','convergence rate'],
    ['The update rule for Newton his method if we try to find the roots of f(x) = x^2 - 4*x +3 is:  (x^2 - 3) / (...) .\n\nFill in the dots.','2*x-4'],
    ['The purpose of using the LU decomposition instead of Gaussian elimination is to reduce the number of ... when the right side of the linear equation changes for the same matrix on the left side.','computations'],
    ['For a well-conditioned problem, a backward error that is ... results in a forward error that is ....\n\nFill in the missing word (1x).','small'],								
    ['If the matrix condition number is not too much larger than one, the matrix is well-conditioned, which means that its ... can be computed with good accuracy.','inverse'],							
    ['If the ... ... is very large, then the matrix is said to be ill-conditioned.','condition number'],														
    ['In general an algorithm that is ... can be expected to accurately solve well-conditioned problems. \n\nFill in the missing word (2x).','backward stable']
    ]									

cse_automata_theory = [
    ['... are problems whose solutions can be verified in polynomial time. \nP is a subset of .... for which not only the solutions are verifiable, but the whole problem itself is solvable in polynomial time. \nAnother subset of ... is NP-complete for which no algorithm is known that can solve the problem in polynomial time. \nNP-hard problems are by definition at least as hard as the hardest ... problem. Which word belongs on the dots?','NP'],
    ['NP are problems whose solutions can be verified in ... ... . \nP is a subset of NP for which not only the solutions are verifiable, but the whole problem itself is solvable in ... ... . \nAnother subset of NP is NP-complete for which no algorithm is known that can solve the problem in ... ... . \nNP-hard problems are by definition at least as hard as the hardest NP problem.','polynomial time'],
    ['NP are problems whose solutions can be verified in polynomial time. \nP is a subset of NP for which not only the solutions are verifiable, but the whole problem itself is solvable in polynomial time. \nAnother subset of NP is NP-complete for which no algorithm is known that can solve the problem in polynomial time. \nNP-... problems are by definition at least as hard as the ...est NP problem.','hard'],
    ['NP are problems whose solutions can be verified in polynomial time. \n... is a subset of NP for which not only the solutions are verifiable, but the whole problem itself is solvable in polynomial time. \nAnother subset of NP is NP-complete for which no algorithm is known that can solve the problem in polynomial time. \nNP-hard problems are by definition at least as hard as the hardest NP problem.','P'],
    ['NP are problems whose solutions can be verified in polynomial time. \nP is a subset of NP for which not only the solutions are verifiable, but the whole problem itself is solvable in polynomial time. \nAnother subset of NP is ... for which no algorithm is known that can solve the problem in polynomial time. \nNP-hard problems are by definition at least as hard as the hardest NP problem.','NP-complete'],
    ['NP are problems whose solutions can be verified in polynomial time. \nP is a subset of NP for which not only the solutions are verifiable, but the whole problem itself is solvable in polynomial time. \nAnother subset of NP is NP-complete for which no algorithm is known that can solve the problem in polynomial time. \nNP-hard problems are by definition at least as hard as the hardest ... problem.','NP'],       
    ['NP = Non-... (Turing machine) ... (time)','deterministic polynomial'],
    ['There are many variations of a Turing Machine. These variants include having multiple tapes instead of one or having a 2-dimensional grid of cells instead of a linear tape. \nAll these variants are ... to the basic TM, in the sense that any problem that can be solved on one of them can also be solved on any of them.','equivalent'],
    ['One important variant of the Turing Machine (TM) is the “non-deterministic TM”. \nIn a standard TM, every combination of internal state and tape symbol has exactly one ... that corresponds to it. \nNo matter what state/symbol combination that the machine may find itself in, what it does next is uniquely determined by that pairing. \nIn a non-deterministic TM, every combination of internal state and tape symbol has a (possibly empty) collection of ...s that correspond to it. \nIts action in any particular state/symbol combination is not uniquely determined by that pairing. \n\nWhich word belongs in the dots (1x)? ','rule'],
    ['One important variant of the Turing Machine (TM) is the “non-deterministic TM”. \nIn a standard TM, every combination of internal ... and tape symbol has exactly one rule that corresponds to it. \nNo matter what .../symbol combination that the machine may find itself in, what it does next is uniquely determined by that pairing. \nIn a non-deterministic TM, every combination of internal ... and tape symbol has a (possibly empty) collection of rules that correspond to it. \nIts action in any particular .../symbol combination is not uniquely determined by that pairing. \n\nWhich word belongs in the dots (1x)?','state'],
    ]

cse_encryption = [
	["AES, DES and Blowfish are examples of s.. Encryption, which means that they use only 1 key for both encryption and decryption. \nWhereas a.. Encryption uses 2 keys: \nOne public and one private, where the private is required for decrypting the public. \n\n\Fill in the dots (2x).","symmetrical asymmetrical"],
	["AES, DES and Blowfish are examples of Symmetrical Encryption, which means that they use only 1 key for both encryption and decryption. \nWhereas Asymmetric Encryption uses 2 keys: \nOne public and one private, where the ... is required for decrypting the ... . \n\n\Fill in the dots (2x).","private public"],
	["A.., DES and Blowfish are examples of Symmetrical Encryption, which means that they use only 1 key for both encryption and decryption. \nWhereas Asymmetric Encryption uses 2 keys: \nOne public and one ..., where the latter is required for decrypting the public. \n\n\Fill in the dots (2x).","AES private"],
	['Ciphers with a fixed length, such as Advanced Encryption Standard (AES), can be broken in ... time by trying every key and are thus in P. \nThough with current technology that time exceeds the age of the universe.\n\nFill in the dots.','constant'],
    ['... ... security provides cryptographic methods that cannot be broken even with unlimited computing power.\n\nFill in the dots (2x).','information theoretic'],
    ]




cse_krr_ch1_intro = [
    ["Whose hypothesis is this?: \n... base systems are comprised of a ... base that: \n1: represents a propositional (external) account of its ... ; and \n2: independent of (1) plays a causal role in the behavior that manifests that ... . \n\nPlease give the name and fill in the dots: b.. s.. ... ","brian smith knowledge"],
    ["Brian Smith's KB ...: knowledge base (KB) systems are comprised of a KB that: 1: represents a ... (external) account of its knowledge ; and 2: independent of (1) plays a ... role in the ... that manifests that knowledge. \n\nPlease fill in the dots (3x). ","hypothesis propositional causal behavior"],
    ["...'s Expert System Paradox: \nActually it's only novices who think and reason, while experts learn to r.. and react. \nPlease fill in the dots: dreyfus recognize",""],
    ["Dreyfus's Expert System ... : \nActually it's only novices who think and ... , while experts learn to recognize and ... . \nPlease fill in the dots (3x). ","paradox reason react"],
    ["Dreyfus's ... System Paradox: \nActually it's only novices who think and reason, while ...s learn to recognize and react. \nPlease fill in the missing word (1x).","expert"],
    ["Pylyshyn's ... .... : \nKnowledge Base Systems can be told facts and adjust its ... correspondingly.\n\nFill in the dots (3x).","cognitive penetrability behavior"],
    ["...'s Cognitive Penetrability: \nKnowledge Base Systems can be ... facts and ... its behavior correspondingly.\n\nFill in the dots (3x).","pylyshyn told adjust"],
    ["Any procedure that always gives us answers in a reasonable amount of time will occasionally either miss some entailments or return some incorrect answers. \nIn the former case the reasoning process is said to be logically ...; \nin the latter case, the reasoning is logically ...","incomplete unsound"],
    ["Any procedure that always gives us answers in a reasonable amount of time will occasionally either miss some entailments or return some incorrect answers. \nIn the former case the reasoning process is said to be logically ...; \nin the latter case, the reasoning is logically ...","incomplete unsound"],
    ["Any procedure that always gives us answers in a reasonable amount of time may occasionally miss some entailments. \nIn this case the reasoning process is logically ...","incomplete"],
    ["Any procedure that always gives us answers in a reasonable amount of time may occasionally return some incorrect answers. \nIn this case the reasoning process is said to be logically ...","unsound"],
    ["It would be inappropriate in a KB system to use logically complete reasoning if the collection of facts cannot all be ...","true"],
    ["It would be inappropriate in a KB system to use logically ... reasoning if the collection of facts cannot all be true","complete"],
    ["Given that Tweety is a bird, it is a reasonable assumption that Tweety can fly. \nBut it is not entailed by the facts about birds in our KB, after all, Tweety might be an ostrich. \nTherefore our reasonable assumption is the result of ... reasoning (because we can imagine a world where our KB is true but where Tweety cannot fly).\n\nFill in the the missing word.","unsound"],
    ["... is the study of entailment relations","logic"],
    ["Certain representation languages suggest forms of reasoning that go well beyond whatever connections they may have ever had with ...","logic"],
    ["... ... : We can understand a knowledge base system at 2 levels: \n(1) a knowledge level (i.e. representation languages, semantics, computational complexity) and \n(2) a ... level (i.e. computational architecture, data structures, reasoning procedures, algorithmic complexity). \n\nPlease fill in the dots.","allen newell symbol"],
    ["Allen Newell: We can understand a knowledge base system at 2 levels: \n(1) a ... level (i.e. representation languages, semantics, computational complexity) and \n(2) a ... level (i.e. computational architecture, data structures, reasoning procedures, algorithmic complexity). \n\nPlease fill in the dots.","knowledge symbol"],
    ["Allen Newell: We can understand a ... ... system at 2 levels: \n(1) a knowledge level (i.e. representation languages, semantics, ... complexity) and \n(2) a symbol level (i.e. computational architecture, data structures, reasoning procedures, algorithmic complexity). \n\nPlease fill in the dots.","knowledge base computational"],
    ["Allen Newell: We can understand a knowledge base system at 2 levels: \n(1) a ... level (i.e. representation languages, semantics, computational complexity) and \n(2) a symbol level (i.e. computational architecture, data structures, reasoning procedures, ... complexity). \n\nPlease fill in the dots.","knowledge algorithmic"],
    ["Logic is ideally suited for a ... level analysis of a KB-system, rather than a ... level analysis.\n\nFill in the dots (2x).","knowledge symbol"],
    ["Leibniz was one of the first to see ... as basis for all maths and science and viewed thinking as a form of ... ","logic computation"],
    ["... was one of the first to see logic as basis for all maths and science and viewed ... as a form of computation ","leibniz thinking"],
    ]

cse_krr_ch2_FOL = [
    ["Declarative languages have 3 aspects: \ns.., s... and p.. (i.e. how we use sentences). .\n\nFill in the dots.","syntax semantics pragmatics"],
    ["Declarative languages have 3 aspects: \nsyntax, semantics and pragmatics (i.e. how we use sentences). \nSpoken languages additionally have: what the words s.. l.. .\n\nFill in the dots.","sound like"],
    ["Declarative languages have 3 aspects: \nsyntax, semantics and pragmatics (i.e. how we use sentences). \nSpoken languages additionally have: what the words sound like. Imperative languages additionaly have: what ... are being called for.\n\nFill in the dots.","actions"],
    ["... languages have 3 aspects: \nsyntax, semantics and pragmatics (i.e. how we use sentences). \n... languages additionally have: what the words sound like. ... languages additionaly have: what actions are being called for.\n\nFill in the dots (3x).","declarative spoken imperative"],
    ["Logical symbols are the symbols of a language with ... meaning or use: punctuation, connectives, ... .\n\nFill in the dots.","fixed variables"],
    ["... symbols are the symbols of a language with fixed meaning or use: p.., c.., variables.\n\nFill in the dots.","logical punctuation connectives"],
    ["In First Order Logic (FOL) the 6 logical connectives are: \nnegation (¬ not), conjunction (∧ and), disjunction (∨ or), existential quantifier (∃ there exists), u.. quantifier (ꓯ for all) and logical e.. (=).\n\nFill in the 2 missing words.","universal equality"],
    ["In First Order Logic (FOL) the 6 logical connectives are: \nnegation (¬ not), conjunction (∧ and), d.. (∨ or), e.. quantifier (∃ there exists), universal quantifier (ꓯ for all) and logical equality (=).\n\nFill in the 2 missing words.","disjunction existential"],
    ["In First Order Logic (FOL) the 6 logical connectives are: \nn.. (¬ not), c.. (∧ and), disjunction (∨ or), existential quantifier (∃ there exists), universal quantifier (ꓯ for all) and logical equality (=).\n\nFill in the 2 missing words.","negation conjunction"],
    ["First Order Logic (FOL) has 2 sorts of ... symbols: (1) function symbols, and (2) p.. symbols.\n\nFill in the missing words.","nonlogical predicate"],
    ["First Order Logic (FOL) has 2 sorts of ... symbols: (1) f.. symbols, and (2) predicate symbols.\n\nFill in the missing words.","nonlogical function"],
    ["In FOL, arity = how many arguments a n.. symbol takes.\n\nFill in the missing word.","nonlogical"],
    ["In FOL, arity = how many a.. a nonlogical symbol takes.\n\nFill in the missing word.","arguments"],
    ["In FOL, ... = how many arguments a nonlogical symbol takes.\n\nFill in the missing word.","arity"],
    ["In FOL, a constant = a function symbol with arity ... .\n\nFill in the missing number.","0"],
    ["In FOL, a constant = a function symbol with ... 0.\n\nFill in the missing word.","arity"],
    ["In FOL, a constant = a ... symbol with arity 0.\n\nFill in the missing word.","function"],
    ["In FOL, a ... = a function symbol with arity 0.\n\nFill in the missing word.","constant"],
    ["In FOL, a propositional symbol = a predicate symbol of arity ... .\n\nFill in the missing number.","0"],
    ["In FOL, a propositional symbol = a predicate symbol of ... 0.\n\nFill in the missing word.","arity"],
    ["In FOL, a ... symbol = a predicate symbol of arity 0.\n\nFill in the missing word.","propositional"],
    ["In FOL, a propositional symbol = a ... symbol of arity 0.\n\nFill in the missing word.","predicate"],
    ["In FOL, a ... refers to something in the world, and a ... expresses a proposition.\n\nFill in the missing words.","term formula"],
    ["In FOL, a term refers to something in the w.., and a formula expresses a p.. .\n\nFill in the missing words.","world proposition"],
    ["In FOL, for t= a term, f= a function symbol and P = a predicate symbol of arity n: f(t1,...,tn) is a ... ; whereas P(t1,...,tn) is a ... .\n\nFill in the missing words.","term formula"],
    ["In FOL, for t= a term, f= a ... symbol and P = a ... symbol of arity n: f(t1,...,tn) is a term; whereas P(t1,...,tn) is a formula.\n\nFill in the missing words.","function predicate"],
    ["In FOL, another word for atomic ... is 'atom'.\n\nFill in the missing word.","formula"],
    ["In FOL, another word for atomic formula is '...'.\n\nFill in the missing word.","atom"],
    ["Propositional subset of FOL = FOL without t.. and q.., using only propositional symbols (no function symbols).\n\nFill in the missing words.","terms quantifiers"],
    ["p.. s.. of FOL = FOL without terms and quantifiers, using only p.. symbols and no f.. symbols.\n\nFill in the missing words.","propositional subset proposition function"],
    ["One t.. f.. connective is the material conditional: '⇒' (if-then) with antecedent before and c.. after the arrow.\n\nFill in the missing words.","truth functional consequent"],
    ["One truth functional connective is the m.. conditional: '⇒' (if-then) with a... before and consequent after the arrow.\n\nFill in the missing words.","material antecedent"],
    ["One truth functional c.. is the material c.. : '⇒' (if-then) with antecedent before and c.. after the arrow.\n\nFill in the missing words.","connective conditional consequent"],
    ["The following 2 Boolean connectives: ∧ (and), ∨ (or) are called binary, what is another word for binary in this context?","dyadic"],
    ["The Boolean connective ¬ (not) is not dyadic/binary but ...","unary"],
    ["The 3 Boolean connectives (∧, ∨ and ¬) are t.. f.. , \nwhich means that the truth value of a complex sentence built by these connectives can be determined simply by looking at the truth values of its constituents and the s.. is then called a truth function.\n\nFill in the missing words.","truth functional sentence"],    
    ["The 3 ... connectives (∧, ∨ and ¬) are truth functional, \nwhich means that the truth value of a complex sentence built by these connectives can be determined simply by looking at the truth values of its constituents and the sentence is then called a t.. f.. .\n\nFill in the missing words.","boolean truth function"],
    ["The 3 Boolean connectives (∧, ∨ and ¬) are truth functional, \nwhich means that the t.. v.. of a complex sentence built by these connectives can be determined simply by looking at the those of its constituents. And the s.. is then called a truth function.\n\nFill in the missing words.","truth value sentence"],
    ["Take the truth functional sentence: (α ⇔ β) ⇔ (α ⇒ β) ... (β ⇒ α). \nWhich binary boolean connective fills the dots in order to make its truth value 'true'? Write the word in letters.","and"],
    ["α ⇒ β is always true if α is ... , as a result: (α ⇒ β) ⇔ (¬α ∨ β). \n'⇔' is called the m.. b.. symbol and is often abbreviated as: 'iff'. \n\nFill in the missing words.","false material biconditional"],
    ["α ⇒ β is always ... if α is false, as a result: (α ⇒ β) ⇔ (¬α ∨ β). \n'⇔' is called the material biconditional symbol and is often abbreviated as: 'i..'. \n\nFill in the missing words.","true iff"],
    ["α ⇒ β is always ... if α is false, as a result: (α ⇒ β) ⇔ (¬α ∨ β). \n'⇔' is called the m.. b.. symbol and is often abbreviated as: 'iff'. \n\nFill in the missing words.","true material biconditional"],
    ["α ⇒ β is always true if α is ... , as a result: (α ⇒ β) ⇔ (¬α ∨ β). \n'⇔' is called the material biconditional symbol and is often abbreviated as: 'i..'. \n\nFill in the missing words.","false iff"],
    ["A variable is ... in a formula if it lies within scope of a quantifier and it is ... otherwise.\n\nFill in the dots.","bound free"],
    ["In the KRR study book: if α is a formula, then α with superscript x and subscript t = all ... x's in α replaced by ... .\n\nFill in the missing words.","free t"],
    ["In the KRR study book: if α is a formula, then α[c] with c a seq of constants = f.. xi's are r.. by the corresponding ci","free replaced"],
    ["A sentence of FOL is any formula without f.. v.. .\n\nFill in the missing words.","free variables"],
    ["Four assumptions regarding the meaning/semantics of the sentences in FOL: \n(1) There are o.. in the world \n(2) For any predicate P of arity 1: i.. of P = Decision for each object whether it has the property of P or not \n(3) A function symbol of arity n is interpreted as a m.. from groups of n objects to other objects \n(4) No other aspects of t.. w.. matter .\n\nFill in the missing words.","objects interpretation mapping the world"],
    ["A meaning of a nonlogical symbol (and thus of a sentence) in FOL is not as in other languages a d.. of characteristics, but it is simply a list of o.. that full\n\nFill these characteristics.\n\nFill in the missing words.","description objects"],
    ["In FOL, an i.. is a pair <D,I> in which D is a domain and I is an i.. mapping.\n\nFill in the missing word.","interpretation"],
    ["In FOL, I[dog] = the set of dogs in i.. m.. I, which is a subset of d.. D.","interpretation mapping domain"],
    ["In FOL, the interpretation mapping I will assign meaning to the f.. symbols as follows: \nI[f] ∈ [D x ... x D → D] In which D = domain.\n\nFill in the missing word.","function"],
    ["In FOL, to see more clearly how predicates of arity 0 (i.e. the p.. symbols) are handled, we can think of the interpretation of predicates in terms of their c.. function: \nI[P] ∈ [D x ... x D → {0,1}]","propositional characteristic"],
    ["For the propositional s.. of FOL, we can ignore domain D and think of an i.. as simply being a mapping I from the propositional s.. to either 0 or 1.\n\nFill in the missing words.","subset interpretation symbols"],    
    ["In FOL, p.. of arity 0 = the propositional symbols.\n\nFill in the missing word","predicates"],
    ["In FOL, predicates of arity 0 = the p.. symbols.\n\nFill in the missing word","propositional"],
    ["Variable assignment over domain D: given that μ is an a.. and x is a v.., then μ[x] = some element of the domain D.\n\nFill in the dots.","assignment variable"],
    ["Semantics of FOL is largely due to ... .\n\nFill in the name in the dots.","Tarksi"],
    ["Semantics of FOL: \nRules for denotation of term t: (1) if x is a variable and μ an a.. , then d.. of x is: ‖x‖_(I,μ)= μ[x] and (2) given that f is a function symbol: ‖f(t_1,…,t_n)‖_(I,μ)= F(d_1,…,d_n) where F=I[f] and d_i= ‖t_i‖_(I,μ). Because these rules are r.. , denotation of term t (i.e. ‖t‖_(I,μ) ) is always an element of D.\n\nFill in the missing words.","assignment denotation recursive"],
    ["Semantics of FOL: \nGiven an interpretation I, variable assignment μ and formula α,  I,μ ⊨ α means that the formula α is satisfied in I given the 7 satisfaction rules (see KRR book). However if formula α is a s.. (thus has no free variables) then these satisfaction rules do not depend on μ and we can write ... ⊨ α.\n\nFill in the missing words","sentence I"],
    ["Semantics of FOL: \nSatisfaction and models: \nGiven interpretation I and sentences S, 'I ⊨ S' means: all sentences in S are t.. in I. We then say that interpretation I is a l.. m.. of S.\n\nFill in the missing words.","true logical model"],
    ["Pragmatics of FOL: \nThe connection between FOL sentences does not always depend on the meaning of the nonlogical symbols, \ne.g. for FOL sentences α,β γ: if given that γ = ¬( β ∧ ¬α) then the truth of γ is i.. in the truth of α, this means that γ is a ... consequence of α","implicit logical"],
    ["Pragmatics of FOL: \nif for ... interpretation I: I ⊨ S and I ⊨ α then S logically ... α, which is written as: S ⊨ α. \nThis is equivalent to saying: the set S ∪ {¬α} is u.. .\n\nFill in the missing words.","every entails unsatisfiable"],
    ["Pragmatics of FOL: \n⊨ α (i.e. sentence α is l.. valid) ⇔ for every ... I: I⊨ α ⇔ the set {¬α} is u..  ","logically interpretation unsatisfiable"],
    ["Pragmatics of FOL: \nIf sentences S={α_1,..,α_n}, then (S⊨ α ⇔ ⊨ ((α_1 ∧ .. ∧ α_n) ⇒ α)). \nThis shows that entailment reduces to v.. when the set S is f.. .\n\nFill in the 2 words on the dots.","validity finite"],
    ["Pragmatics of FOL: \nIn KR we aim to build a system that can be told or learn that Dog(fido) is true in some user intended i.. . But a KB system will not and cannot have access to the interpretation of the n.. symbols itself.\n\nFill in the missing words.","interpretation nonlogical"],
    ["Pragmatics of FOL: \nA KB system can safely conclude entailed sentences: if Dog(fido) true, then ¬¬Dog(fido) and (Dog(fido) ∨ Happy(fido) can be safely concluded without knowing anything else about the interpretation. However, this leads only to i.. knowledge.\n\nFill in the missing word.","implicit"],
    ["Pragmatics of FOL: \nA KB system can safely conclude conclude implicit knowedge without knowing anything else about the interpretation. However, to conclude from Dog(fido) that Mammal(fido), requires addition of sentences (e.g. ꓯx Dog(x) ⇒ Mammal(x)) that connect the n.. s.. involved.","nonlogical symbols"],
    ["Pragmatics of FOL: \nTo derive from Dog(fido) to Mammal(fido) requires addition of more sentences, e.g. ꓯx Dog(x) ⇒ Mammal(x). These sentences connect the n.. s.. involved and rule out some unintended i.. . Resultingly, logical c.. will start to behave more like 'truth in the intended interpretation'","nonlogical symbols interpretations consequence"],
    ["The fundamental tenet of KR: \nReasoning based on logical consequence only allows safe, logically guaranteed conclusions to be drawn. \nHowever, by starting with a rich collection of sentences as given premises, including not only facts about particulars of the intended application but also those expressing connections among the n.. s.. involved, the set of e.. conclusions becomes a much richer set, closer to the set of sentences true in the intended interpretation. Calculating these entailments thus becomes more like the form of reasoning we would expect of someone who understood the m.. of the terms involved.\n\nFill in the 4 missing words.","nonlogical symbols entailed meaning"],
    ["The f.. tenet of KR: \nReasoning based on logical consequence only allows safe, logically guaranteed conclusions to be drawn. \nHowever, by starting with a rich collection of sentences as given premises, including not only facts about particulars of the intended application but also those expressing connections among the nonlogical symbols involved, the set of entailed conclusions becomes a much richer set, closer to the set of sentences true in the i.. interpretation. Calculating these entailments thus becomes more like the form of reasoning we would expect of someone who understood the meaning of the terms involved.\n\nFill in the 2 missing words.","fundamental intended"],
    ["The fundamental tenet of KR: \nReasoning based on l.. c.. only allows safe, logically guaranteed conclusions to be drawn. \nHowever, by starting with a rich collection of sentences as given premises, including not only facts about p.. of the intended application but also those expressing connections among the nonlogical symbols involved, the set of entailed conclusions becomes a much richer set, closer to the set of sentences true in the intended interpretation. Calculating these entailments thus becomes more like the form of r.. we would expect of someone who understood the meaning of the terms involved.\n\nFill in the 4 missing words.","logical consequence particulars reasoning"],
    ["The f.. tenet of KR: \nReasoning based on logical consequence only allows safe, logically guaranteed conclusions to be drawn. \nHowever, by starting with a rich collection of sentences as given premises, including not only facts about particulars of the intended application but also those expressing c.. among the nonlogical symbols involved, the set of e.. conclusions becomes a much richer set, closer to the set of sentences true in the intended interpretation. Calculating these entailments thus becomes more like the form of reasoning we would expect of someone who understood the meaning of the t.. involved.\n\nFill in the 4 missing words.","fundamental connections entailed terms"],
    ["What is another term for the explicitly given beliefs of a system?","knowledge base"],
    ["what is another word for the implicitly given beliefs of a system?","entailments"],
    ["It is often nontrivial to move from e.. to implicit b..: to show that S ⊨ α we will need to show that for every possible interpretation S ⊨ α. So, d.. validity is generally unsolvable for FOL, however, in some cases it may be doable.\n\nFill in the missing words.","explicit beliefs deciding"],
    ["d.. validity (⊨ α) is generally unsolvable for FOL. This was first shown independently in 1936 by C.. and T.. .\n\nFill in the missing words/names.","deciding church turing"],
    ["By ... ... we mean the process of calculating the entailments of a KB, that is, given the KB, and any sentence α, determining whether or not ... ⊨ α.\n\nFill in the 3 missing words. ","deductive inference KB"],
    ["We consider a reasoning process to be ... ... if whenever it produces α, then α is guaranteed to be a logical consequence.\n\nFill in the missing words.\n\nFill in the 2 missing words.","logically sound"],
    ["We consider a reasoning process to be ... ... if it is guaranteed to produce α whenever α is entailed. This rules out the possibility of missing some entailments.\n\nFill in the missing words.","logically complete"],
    ["In general no automated reasoning process for f.. can be both s.. and ... .\n\nFill in the missing words.","fol sound complete"],
    ["... of FOL was first shown in 1936 independently by Church and Turing.\n\nFill in the missing word.","undecidability"],
    ["... of FOL for a given set of ... was first proven by Godel.\n\nFill in the missing words.","completeness axioms"],
    ["Properties of mathematical groups in FOL: For function f, e is an ... element for f, that is, for any x, f(e,x)=f(x,e)=x.\n\nFill in the missing word.","identity"],
    ["Russel's Barber paradox: \n(1) Anyone who does not shave himself must be shaved by the barber. \n(2) Whomever the barber shaves, must not shave himself. \nTo show that no barber can ful\n\nFill these requirements, we can show that for any i.. where (1) is ... , (2) must be ... .\n\nFill in the missing words.","interpretation true false"],
    ]

cse_krr_ch3_expressing_knowledge = [
    ["The general process, which addresses the KB at the knowledge level is often called k.. e.. .\n\nFill in the missing words.","knowledge engineering"],
    ["How to create a KB: start with the set of domain dependent p.. and f.. that provide the basis for the statement of f.. about the KB's domain.\n\nFill in the missing words.","predicates functions facts"],
    ["To create a KB, you must capture the: \n(1) i.. (e.g. names, legal entities, places) \n(2) their t.. (1-place predicates, e.g. Person(x)) \n(3) their a.. (e.g. Beautiful(x)) \n(4) their r.. (n-ary predicates, e.g. Blackmails(x,y)) \n(5) their f.. (usually unary, e.g. BestFriendOf(x,y), or binary if not taken to be total).\n\nFill in the missing words.","individuals types attributes relationships functions"],
    ["If a KB includes incomplete knowledge, then this is expressed as d.., so there will be c.. formulas in the KB.\n\nFill in the missing words.","disjunctions complex"],
    ["When we build a Knowledge Base (KB), one type of complex statement is used to limit the domain of discourse. E.g.: ꓯx[Lawyer(x) ⇒ x=jane ∨ x=jack ∨ x=jim ∨ etc]. \nThis is called a c.. sentence.","closure"],
    ["When we build a Knowledge Base (KB), we can carve out the full set of individuals in the domain of discourse: ꓯx[x=fic ∨ x=jane ∨ x = jim ∨ etc]. \nThis ensures that a reasoner would not postulate a new, hitherto u.. object in the course of its reasoning.\n\nFill in the missing word.","unknown"],
    ["When we build a Knowledge Base (KB) we express relationships among predicate and function symbols with t.. facts. E.g. ꓯx[Man(x)⇒ ¬Woman(x)].\n\nFill in the missing word.","terminological"],
    ["Varieties of terminological facts in a Knowledge Base (KB): \n(1) d.. (ꓯx[Man(x)⇒ ¬Woman(x)]) (2) subtypes (3) exhaustiveness (4) s.. (ꓯx,y[MarriedTo(x,y) ⇒ (MarriedTo(y,x)]) (5) inverses (6) t.. r.. (ꓯx,y[MarriedTo(x,y) ⇒ Person(x) ∧ Person(y)]) (7) full definitions.\n\nFill in the missing words.","disjointness symmetry type restrictions"],
    ["Varieties of terminological facts in a Knowledge Base (KB): \n(1) disjointness (2) s.. (ꓯx[Surgeon(x) ⇒ Doctor(x) (3) exhaustiveness (4) symmetry (5) i.. (ꓯx,y[ChildOf(x,y) ⇒ (ParentOf(y,x)]) (6) type restrictions (7) f.. d.. (ꓯx[RichMan(x) ⇔ Rich(x) ∧ Man(x)]).\n\nFill in the missing words.","subtypes inverses full definitions"],
    ["Varieties of terminological facts in a Knowledge Base (KB): \n(1) disjointness (2) subtypes (3) e.. (ꓯx[Adult(x)⇒(Man(x)∨ Woman(x))]) (4) symmetry (5) inverses (6) type restrictions (7) f.. d.. (ꓯx[RichMan(x) ⇔ Rich(x) ∧ Man(x)]).\n\nFill in the missing words.","exhaustiveness full definitions"],
    ["t.. f.. are typically captured in a logical language as universally quantified conditionals or biconditionals.\n\nFill in the missing words.","terminological facts"],
    ["To answer a yes/no question (i.e. a ...) we need to determine whether every logical interpretation that satisfies the KB also satisfies the ... .\n\nFill in the missing word.","query"],
    ["In answering wh-questions, we can use that: ... ⊨ (α⇒ β) ⇔ ... ∪ {α}⊨ β.\n\nFill in the missing word","KB"],
    ["To show that a KB does not entail some query sentence, we must produce an interpretation <D,I> and argue that it satisfies every sentence in the ... , as well as the n.. of the query sentence.\n\nFill in the missing words.","KB negation"],
    ["What is the name for introducing new abstract individuals to replace n-arity predicates/functions with conjunctions, so that their arity can be determined in advance?","reification"],
    ["Reification (i.e. abstract individuals) is often used in d.. logics and f..languages.\n\nFill in the missing words.","description frame"],
    ["By creating marriage and divorce events as abstract individuals, to determine someone's current marital status and so then it becomes possible to define a PreviouslyMarriedTo predicate in terms of the existence of appropriate marriage and divorce events. \nThis is an example of ... .\n\nFill in the missing word.","reification"],
    ["Any object about which we can ask a wh- question should have an i.. standing for it in the KB so it can be returned as a query result.\n\nFill in the missing word.","individual"],
    ["To capture quantitative regularities such as months(x)=12*years(x), we can instead of AgeInYears(suzy)=14 better use Years(Age(suzy)). \nIn this example, we used Age(suzy) as an a.. quantity. .\n\nFill in the missing word.","abstract quantity"],
    ["Some facts that we might capture in a KB are: \n(1) d.. and p.. facts (i.e. citing characteristics that are usually true, or reasonable to assume unless told otherwise, e.g. birds fly) and (2) i.. facts (i.e. people's mental attitudes and intentions, reflecting the reality of people's beliefs, e.g. John believes that Henry is trying to blackmail him).\n\nFill in the missing words.","default prototypical intentional"],
    ["The catalogue of c.. (constants, relations, functions, etc.) used to represent knowledge about a problem domain has come to be called an o.. .\n\nFill in the missing words.","concepts ontology"],
    ["c.. and k.. are projects aimed at developing a universal ontology for commonsense reasoning.\n\nFill in the missing abbreviations.","cyc km"],
    ["KIF, KQML, d..-aml OIL and o.. (the web ontology language) are standards for projects aimed at developing a universal ontology for commonsense reasoning. \nAnd some of these are used for the s.. w.. .\n\nFill in the missing abbreviations/words.","darpa owl semantic web"],
    
    ] 


cse_krr_ch4_resolution = [
    ["Four equivalent ways to formulate the d..reasoning task: \n(1) KB ⊨ α iff (2) ⊨ [( α1 ∧ … ∧ αn) ⇒ α] iff (3) KB ∪{¬α} is not satisfiable iff (4) KB ∪{¬α}⊨ ¬TRUE, where TRUE is any ... sentence, such as ꓯx(x=x).\n\nFill in the missing words.","deductive valid"],
    ["Four equivalent ways to formulate the deductive reasoning task: \n(1) KB ⊨ α iff (2) ⊨ [( α1 ∧ … ∧ αn) ⇒ α] iff (3) KB ∪{¬α} is not s.. iff (4) KB ∪{¬α}⊨ ¬TRUE, where TRUE is any valid s.., such as ꓯx(x=x).\n\nFill in the missing words.","satisfiable sentence"],
    ["For testing satisfiability of sentences, r.. can be used, so r.. can also be used for finding entailments of a finite KB.\n\nFill in the missing word.","resolution"],
    ["For testing s.. of sentences, resolution can be used, so resolution can also be used for finding e.. of a finite KB.\n\nFill in the missing word.","satisfiability entailments"],
    ["If we have a procedure for testing the satisfiability of sentences, or for determining whether or not ¬TRUE is entailed, then that procedure can also be used to find the e.. of a finite KB. This is significant, because the Resolution procedure is in fact a procedure for determining whether certain sets of formulas are s.. .\n\nFill in the missing words.","entailments satisfiable"],
    ["A literal is an ... or its negation","atom"],
    ["(p ∨ ¬q) ∧ (q ∨ r ∨ ¬s ∨ p) ∧ (¬r ∨ q) is a sentence in ... ... f.. .","conjunctive normal form"],
    ["Procedure for conversion to ... : \n(1) Eliminate ⇒ and ⇔ using ∧, ∨ and ¬ (2) move ¬ inward towards only in front of an atom, using De Morgan (3) d.. ∧ over ∨ using (β∧γ)∨α ⇔(α∨β)∧(α∨γ) (4) c.. terms using α∨α⇔α and α∧α⇔α.\n\nFill in the missing words.","cnf distribute collect"],
    ["Procedure for conversion to CNF: \n(1) e.. ⇒ and ⇔ using ∧, ∨ and ¬ (2) move ¬ inward towards only in front of an a.., using De Morgan (3) distribute ∧ over ∨ using (β∧γ)∨α ⇔(α∨β)∧(α∨γ) (4) c.. terms using α∨α⇔α and α∧α⇔α.\n\nFill in the 3 missing words.","eliminate atom collect"],
    ["A c.. f.. is a finite set of clauses: \ne.g. {[p,q],[¬q]}.\n\nFill in the missing words.","clausal formula"],
    ["A clause is a set of l.. : \ne.g. [p,¬q]","literals"],
    ["The c.. of p is ¬p","complement"],
    ["A clause with a single literal is called a ... ... . E.g. [¬p].\n\nFill in the missing words.","unit clause"],
    ["{[]} is not the same as {}. Because ...= ¬TRUE while ... = TRUE","{[]} {}"],
    ["Formulas in CNF can be represented by sets of c.. .\n\nFill in the missing word.","clauses"],
    ["To determine whether or not KB ⊨ α it will be sufficient to do the following: \n(1) put the sentences that are in the KB and also ¬α into ... \n(2) determine whether or not the resulting set of clauses is s.. .\n\nFill in the missing words.","cnf satisfiable"],
    ["Any question about entailment can be reduced to a question about the s.. of a set of clauses.\n\nFill in the missing words.","satisfiability"], 
    ["Rules of inference = statements about what f.. can be inferred from others, e.g. (binary) resolution.\n\nFill in the missing words.","formulas"],
    ["From clauses [w,p,q] and [s,w, ¬p], we have the clause [w,s,p] as a resolvent w.r.t. ...\n\nFill in the missing letter.","p"],
    ["From clauses [w,p,q] and [s,w, ¬p], we have the clause [w,s,p] as a ... w.r.t. p\n\nFill in the missing word.","resolvent"],
    ["The clauses [p,q] and [¬p,¬q] have 2 resolvents: [q,¬q] w.r.t. ..., and ... w.r.t. q.\n\nFill in the missing words.","p [p,¬p]"],
    ["A resolution d.. of a clause c from a set of clauses S is a seq of clauses c1, ..., cn, where the last clause, cn, is c, and where each ci is either an element of S or a resolvent of 2 earlier clauses in the d.. . We write S ⊢ c if there is a d.. of c from S.\n\nFill in the missing word.","derivation"],
    ["Select the missing implication symbol: S ⊢ c  ...  S ⊨ c, except when c is the empty clause. Choose from: (a): ⇒ (b): ⇐ (c): ⇔.","a"],
    ["Finding resolution derivations is s.. but not c..","sound complete"],
    ["Select the missing implication symbol: S ⊢ [] ...  S ⊨ [], in this case S is unsatisfiable. Choose from: (a): ⇒ (b): ⇐ (c): ⇔.","c"],
    ["We can determine satisfiability of any set of clauses, by searching for a derivation of the empty clause, therefore, resolution is ...-complete.","refutation"],
    ["The ... procedure repeatedly adds resolvents to the input clauses S until either the empty clause is added (in which case there is a derivation of the empty clause) or no new clauses can be added (in which case there is no such derivation).","resolution"],
    ["How to make the resolution procedure d.. : select a strategy for choosing clauses: \n(1) use the first pair \n(2) use the pair with the shortest r...","deterministic resolvent"],
    ["The resolution procedure: it's a good idea to keep track of which pairs have already been considered to avoid r.. checking.","redundant"],
    ["If we want to show that ¬(KB ⊨ Rain) we should use [¬Rain] and derive every possible r.. to show that the e.. clause is none of them => ¬Rain could be satisfiable => ¬(KB ⊨ Rain).\n\nFill in the missing word.","resolvent empty"],
    ["Procedure to convert FOL to a quantified version of CNF: \n(1) Eliminate ⇒ and ⇔ using ∧,∨ and ¬ (2) move ¬ inward towards only in front of an atom, using d.. m.., and ⊨ ¬ꓯx.α ⇔ ∃x.¬α and  ⊨ ¬∃x.α ⇔ ꓯx.¬α (3) standardize variables, that is, ensure that each quantifier is over a distinct variable by renaming them as necessary using ⊨ ꓯx.α ⇔ ꓯx. (α_x)^y. (4) eliminate all remaining existentials (5) move universals outside the scope of ∧ and ∨ using ⊨(α∧ꓯx.β) ⇔ (ꓯx.β∧α) ⇔ ꓯx.(α∧β) (6) d.. ∧ over ∨ using (β∧γ)∨α ⇔(α∨β)∧(α∨γ) (7) collect terms.\n\nFill in the missing words.\n\nFill in the missing words.","de morgan distribute"],
    ["Procedure to convert FOL to a quantified version of CNF: \n(1) Eliminate ⇒ and ⇔ using ∧,∨ and ¬ (2) m.. ¬ inward towards only in front of an atom, using De Morgan, and ⊨ ¬ꓯx.α ⇔ ∃x.¬α and  ⊨ ¬∃x.α ⇔ ꓯx.¬α (3) s.. variables, that is, ensure that each quantifier is over a distinct variable by renaming them as necessary using ⊨ ꓯx.α ⇔ ꓯx. (α_x)^y. (4) eliminate all remaining existentials (5) move universals outside the scope of ∧ and ∨ using ⊨(α∧ꓯx.β) ⇔ (ꓯx.β∧α) ⇔ ꓯx.(α∧β) (6) distribute ∧ over ∨ using (β∧γ)∨α ⇔(α∨β)∧(α∨γ) (7) c.. terms.\n\nFill in the missing words.\n\nFill in the missing words.","move standardize collect"],
    ["For resolution in FOL, it is also conventient to use a clausal form of CNF. We simply drop the quantifiers, because they are all u.. anyway.","universal"],
    ["Say ρ is a literal and θ is a s.., i.e. a finite set of pairs {x1/t1,...,xn/tn}, then ρθ = ρ with each x_i in ρ r.. by t_i.\n\nFill in the missing words.","substitution replaced"],    
    ["Substitution: Say ρ is a literal and θ is a substitution, i.e. a finite set of pairs {x_1/t_1,...,x_n/t_n}, then ρθ = ρ with each x_i in ρ replaced by ... .\n\nFill in the missing letter.","t_i"],
    ["We say that a term, literal, or clause is g.. if it contains no variables.\n\nFill in the missing word.","ground"],
    ["We say that a literal ρ is an ... of a literal ρ' if for some θ,ρ=ρ'θ","instance"], 
    ["Example of a substitution: \nliteral ρ = P(x,z,f(x,y)), substitution θ = {x/a, y/g(x,b,z)}, result: ρθ = ... .\n\nFill in the missing formula.","P(a,z,f(a,g(x,b,z))"],
    ["Resolution Derivation: \nQuery: is Sue a HardWorker? Derivation: \nAssume ¬HardWorker(sue) if this leads to a derivation of ... , then ...  is true.\n\nFill in the missing words. ","[] HardWorker(sue)"],
    ["Say succ is the succesor function, and zero is a constant, then succ(succ(succ(succ(succ(zero))))) is a ... term for 5.\n\nFill in the missing word.","ground"],
    ["If resolution entails ∃xP(x) without entailing P(t) then you can use the a..-e.. process: \nreplace the query '∃x P(x)?' by: '∃x P(x) ∧ ¬A(x)?' and t.. when a clause contains only predicate A(.).\n\nFill in the missing words.","answer extraction terminate"],
    ["If ∃. in KB then use ...ization: introduce names (... constants and ... functions) and represent facts using these names.\n\nFill in the missing word.","skolem"],
    ["Example of s.. : instead of reasoning with ∃xꓯx∃z P(x,y,z) we use ꓯy P(a,y,f(y))","skolemization"],
    ["If α is our original formula and α‘ is the result of converting it to CNF including Skolemization, then it is no longer the case that ⊨ (α⇔α') as it was without s.. . \nE.g. ∃x P(x) is not logically equivalent to P(a) (i.e. its Skolemized version). What can be shown, however, is that α is s.. iff α' is satisfiable, and this is really all we need for Resolution.","skolemization satisfiable"],
    ["Select the missing implication symbol: ∃xꓯyR(x,y) ... ꓯy∃x R(x,y), which is relevant for skolemization. \nChoose from: (a) ⇒ (b) ⇐ (c) ⇔.","a"],
    ["Select the missing implication symbol: ꓯy∃x R(x,y) ... ∃xꓯyR(x,y), which is relevant for skolemization. \nChoose from: (a) ⇒ (b) ⇐ (c) ⇔.","b"],
    ["For Resolution in FOL we can use the axioms of equality: (1) reflexivity (2) symmetry (3) transitivity (4) substitution for f.. (5) substitution for p.. .\n\nFill in the missing words.","functions predicates"],
    ["With the addition of the equality axioms, equality can be treated as a b.. predicate, and soundness and completeness of Resolution for the e.. clause will be preserved .","binary empty"],
    ["Resolution is r..-complete, so if the set of clauses is unsatisfiable then some branch contains the empty clause, therefore breadth-first is guaranteed to report unsatisfiable when the clauses are unsatisfiable. \nWhen the clauses are satisfiable, the search may or may not t.. .\n\nFill in the missing words.","refutation terminate"],
    ["Resolution is refutation-complete, so if the set of clauses is unsatisfiable then some branch contains the empty clause, therefore b..-f.. is guaranteed to report unsatisfiable when the clauses are unsatisfiable. \nWhen the clauses are s.., the search may or may not terminate.\n\nFill in the missing words.","breadth-first satisfiable"],
    ["In the propositional case, we can run Resolution to completion, so we never have the n.. problem.\n\nFill in the missing words.","nontermination"],
    ["The Herbrand u.. of S is the set of all g.. terms formed using just the constants and function symbols in S.\n\nFill in the missing words.","universe ground"],
    ["The ... base = the set of all ground clauses cθ where c∈S and θ assigns the variables in c to terms in the ... universe.\n\nFill in the missing word.","herbrand"],
    ["Herbrand's theorem states that a set of clauses is s.. iff its Herbrands b.. is also.\n\nFill in the missing words.","satisfiable base"],
    ["A Herbrand base is typically an i.. set of propositional clauses, except when the Herbrand u.. is f.., which happens when we include a term like f(t) only if the type of t is appropriate for function f.\n\nFill in the missing words.","infinite universe finite"],
    ["Any Resolution procedure takes exponential time (~2^n steps) to determine whether a set of p.. clauses is satisfiable.\n\nFill in the missing words.","propositional"],
    ["In 1972 Stephen Cook proved that the s.. problem is NP-complete.\n\nFill in the missing word.","satisfiability"],
    ["In some applications, such as ... ... ... (ATP), it's reasonable to wait for answers, but for others, we make determining satisfiability of clauses computationally less difficult than in the case of the Resolution procedure by: (1) p.. representations (more control by the user) (2) less expressive r.. languages than FOL or even than propositional logic.\n\nFill in the missing words.","automated theorem proving procedural representation"],
    ["In using Resolution for automated theorem proving (ATP), we are not hoping to guarantee efficiency or even termination, but rather we try to eliminate u.. steps.\n\nFill in the missing word.","unnecessary"],
    ["The Resolution Procedure is a search to show unsatisfiability, whereas s.. s.. search for an interpretation that shows clauses to be satisfiable.\n\nFill in the missing words.","sat solvers"],
    ["The Resolution Procedure is a search to show unsatisfiability, whereas SAT solvers search for an i.. that shows clauses to be s.. .\n\nFill in the missing words.","interpretation satisfiable"],
    ["The Resolution Procedure can be adapted to be a SAT solver: \ne.g. if the DP or the TAB (2 SAT solver methods) fail, then the e.. clause is derived by them.\n\nFill in the missing words.","empty"],
    ["Because the Resolution Procedure can be adapted to be a SAT solver, SAT solvers also use e.. time. Except in the case of GSAT, which may be faster, however its downside is that it is not guaranteed to t.. with a correct answer.\n\nFill in the missing words.","exponential terminate"],
    ["To avoid needless search in a FOL derivation: keep the search as general as possible. For this we start by using a θ that is a m.. g.. u.. (MGU).\n\nFill in the missing words.","most general unifier"],
    ["By using an MGU (... ... ...) θ, you can always get to another unifier (i.e. θ') by applying additional/further s.. (i.e. θ*). Therefore, we can always obtain: θ'=θθ*.\n\nFill in the missing words.","most general unifier substitutions"],
    ["When we limit the resolution rule to using MGUs θ, then there will be no loss of c.., while it dramatically reduces the number of possible r.. from 2 input clauses.\n\nFill in the missing words.","completeness resolvents"],
    ["We can calculate a most general unifier (MGU) θ for a pair of literals ρ1 and ρ2 by: setting θ={}, exit if ρ1θ=ρ2θ,  getting the d.. s.. (DS), which is the pair of terms at the first place where the 2 literals disagree; and next find a variable v∈DS, and a term t∈DS; and next set θ to θ{v/t}, and again: e.. if ρ1θ = ρ2θ. \n\nFill in the missing words.","disagreement set exit"],
    ["MGU's are used by all r..-based systems implemented to date.","resolution"],
    ["Disagreement Set (DS): If ρ1θ = P(a,f(a,g(z),…)) and ρ2θ = P(a,f(a,u,…)) then DS = ... .\n\nFill in the missing formula. Tip: DS=pair of terms where the 2 literals disagree.","{u,g(z)}"],
    ["For Resolution, besides MGU, other search improvements include: \n(1) c.. e.. (pure clauses, tautologies, subsumed clauses) (2) ordering strategies (3) set of support (4) special treatment of e.. (i.e. p.., which makes axioms of equality unnecessary) (5) sorted logic (6) connection g.. method (i.e. precompute a graph with literals as vertices and MGUs as edges, resolution=state-space search problem. (7) directional connectives.\n\nFill in the missing words.","clause eliminination equality paramodulation graph"],
    ["For Resolution, besides MGU, other search improvements include: \n(1) clause eliminination (2) o.. s.. (i.e. use short (unit) clauses first) (3) set of support (4) special treatment of equality (5) s.. l.. (keep taxonomy of sorts, and refuse to unify P(s) with P(t) if s and t are of incompatible sorts). (6) connection graph method (7) d.. c.. (i.e. mark clauses to be used in 1 or the other directions only (controls how facts are used = basis for procedural representation languages, requires care to ensure completeness).\n\nFill in the missing words.","ordering strategies sorted logic directional connectives"],
    ["For Resolution, besides MGU, other search improvements include: \n(1) clause eliminination  (2) ordering strategies (3) s.. o.. s.. (i.e. at least one of the input clauses has an ancestor in the negation of the query) (4) special treatment of equality (5) sorted logic (6) connection graph method (7) d.. c.. (i.e. mark clauses to be used in 1 or the other directions only (controls how facts are used = basis for procedural representation languages, requires care to ensure completeness).\n\nFill in the missing words.","set of support directional connectives"],
    ["The predominant techniques for automated theorem provers are: \n(1) Resolution (CNF) and ... (...).\n\nFill in the missing words.","tableau dnf"],
    ["SAT solving can be seen as a special case of c.. s.. p.. (CSP).\n\nFill in the missing words.","constraint satisfaction problem"],
    ["The ... distance between 2 interpretations = the number of differing atoms.\n\nFill in the missing word.","hamming"],
    ["One SAT method called GSAT uses flips and tries, and it c.. the number of clauses not yet s.. by an interpretation.\n\nFill in the missing words.","counts satisfied"],
    ]


cse_krr_ch5_Horn_clauses = [
    ["Horn clauses form a subset of ... that makes the Resolution Procedure c.. much more manageable.\n\nFill in the missing words.","fol computationally"],
    ["Refinements to Resolution can never completely eliminate the f.. computational i.. of FO entailment.\n\nFill in the missing word.","fundamental intractability"],
    ["[Rain, Sleet, Snow] is a disjunction and therefore it is i.. knowledge.\n\nFill in the missing word","incomplete"],
    ["[¬Child,¬Male,Boy] is a disjunction, however, it can be rewritten as the if-then statement Child ∧ Male -> Boy, which is called a c.. . \nBecause it consists of at most one positive literal it is a Horn clause, and because the number of positive literals = 1, we call it a p.. Horn clause .\n\nFill in the missing words.","conditional positive"],
    ["If a Horn Clause has exactly 1 positive literal it is called a positive, also d..,  Horn clause. If it has no positive literal, then it is a negative Horn clause. \nThe empty clause is therefore an example of a ... Horn clause.\n\nFill in the missing words.","definite negative"],
    ["Resolution derivations with Horn Clauses: If we resolve 2 positive Horn clauses together, we are guaranteed to produce a ... clause as a resolvent.\n\nFill in the missing word.","positive"],
    ["Resolution derivations with Horn Clauses: If we resolve 2 negative Horn clauses together, we are guaranteed to produce ... clause as a resolvent.\n\nFill in the missing word.","no"],
    ["Resolution derivations with Horn Clauses: If we resolve 1 negative + 1 positive Horn clause together, we are guaranteed to produce a ... clause as a resolvent.\n\nFill in the missing word.","negative"],
    ["Suppose S is a set of h.. c.. and c is a negative clause, then S⊢c iff there is a derivation of c where all the new clauses in the derivation (not in S) are n.. .\n\nFill in the missing words.","horn clauses negative"],
    ["Suppose S is a set of Horn clauses and c is a negative clause, then S⊢c i.. there is a derivation of c where all the new clauses in the derivation (not in S) are n.. .\n\nFill in the missing words.","iff negative"],
    ["Suppose S is a set of Horn clauses and c is a n.. clause, then S⊢c iff there is a derivation of c where all the new clauses in the derivation (not in S) are n.. .\n\nFill in the missing word.","negative"],
    ["There is a derivation of a n.. clause (including the empty clause) from a set of Horn clauses S iff there is one where each new clause in the derivation is a negative resolvent of the previous clause in the derivation and some element of ... .\n\nFill in the missing words.","negative S"],
    ["There is a derivation of a negative clause (including the empty clause) from a set of Horn clauses S i.. there is one where each new clause in the derivation is a n.. resolvent of the previous clause in the derivation and some element of S.\n\nFill in the missing words.","iff negative"],
    ["An SLD derivation of a clause c from S (S ⊢_SLD c) is a s.. of clauses c_1,..,c_n, such that c_n = c; c_1 ∈ S; and c_i+1 is a resolvent of c_i and some clause of ... .\n\nFill in the missing words.","sequence S"],
    ["An SLD derivation of a clause c from S (S ⊢_SLD c) is a sequence of c.. c_1,..,c_n, such that c_n = c; c_1 ∈ S; and c_i+1 is a r.. of c_i and some clause of S.\n\nFill in the missing words.","clauses resolvent"],
    ["An SLD derivation is s.. for Horn clauses.\n\nFill in the missing word.","sufficient"],
    ["SLD derivation: Select the missing implication symbol: \nIf S a set of Horn clauses then S ⊢_SLD [] ... S ⊢ [] . Choose from: (a) ⇒ (b) ⇐ (c) ⇔.","c"],
    ["SLD derivation: Select the missing implication symbol: \nIf S a set of clauses (not necessarily Horn) then S ⊢_SLD [] ... S ⊢ [] . Choose from: (a) ⇒ (b) ⇐ (c) ⇔.","a"],
    ["SLD derivation: Select the missing implication symbol: \nIf S a set of Horn clauses then S ⊢ []  ...  S ⊢_SLD []. Choose from: (a) ⇒ (b) ⇐ (c) ⇔.","c"],
    ["SLD derivation: Select the missing implication symbol: \nIf S a set of clauses (not necessarily Horn) then S ⊢ [] ... S ⊢_SLD []. Choose from: (a) ⇒ (b) ⇐ (c) ⇔.","b"],
    ["If S is Horn, then it is u.. iff S ⊢_SLD [].\n\nFill in the missing words.","unsatisfiable"],
    ["Instead of using Resolution diagrams, for displaying SLD derivations we prefer to use goal trees, in which the top node is what we want to show to be entailed by the KB and the leaves of the branches are the g.. that are solved.\n\nFill in the missing word.","goals"],
    ["In an SLD derivation: \nIf the top of a goal tree for append is: append(cons(a,cons(b,nil)),cons(c,nil),cons(a,cons(b,cons(c,nil)))), then the leaf is: a.. .\n\nFill in the missing word.","append(nil,cons(c,nil),cons(c,nil))"],
    ["Unlike ordinary resolution, it is not necessary to use a.. p.. with SLD derivations. This is because if S is a set of Horn clauses, then S ⊨ ∃x.α iff for some term t, S ⊨ (α_t)^x.\n\nFill in the missing words.","answer predicates"],
    ["Recursive b.. chaining SLD is a procedure for determining satisfiability of a set of Horn clauses with exactly 1 negative clause. \nIt is a d..-first and left-to-right search, and it is used by Prolog to solve goals.","backward depth"],
    ["The recursive backward chaining SLD procedure has 2 drawbacks: (1) i.. loops when goal reduces to the same subgoal (2) can be i.. (redundant searching).\n\nFill in the missing words.","infinite inefficient"],
    ["if we have a clause [p,¬p] in the KB, then this is written in propositional logic as p ∨ ¬p, which can be written as p -> p,  which is a t.. . In ... it corresponds to: p:¬p.\n\nFill in the missing word.","tautology prolog"],
    ["In propositional logic, the forward chaining SLD procedure is much more efficient than the backward version. \nBecause it works from the KB facts towards the g.., and runs in l.. time in the size of the KB).\n\nFill in the missing words.","goals linear"],
    ["In the SLD forward chaining procedure, the idea is that a.. are solved as soon as we have determined that they are entailed by the KB.\n\nFill in the missing words.","atoms"],
    ["Forward chaining SLD in FOL is u.., so it may infinitely loop.\n\nFill in the missing word.","undecidable"],   
    ["Horn clauses and ... Resolution form the basis of the logic p.. language Prolog","sld programming"],
    ["Herbrand's theorem allows us to convert a FO satisfiability problem into a p.. one, although the size of the Herbrand base, in general is infinite. One way to deal with an infinite set S of clauses is to look at progressively larger subsets of it to see if any of them are u.., in which case S must be as well. In fact, the converse is true: if S is unsatisfiable, then some finite subset of S is unsatisfiable too. This is called the c.. property of FOL","propositional unsatisfiable compactness"]
    ]


cse_krr_ch6_procedural_control_of_reasoning = []
cse_krr_ch7_rules_in_production_systems = []
cse_krr_ch8_object_oriented_representation = []   
cse_krr_ch9_structured_descriptions = []
cse_krr_ch10_inheritance = []
cse_krr_ch11_defaults = []
cse_krr_ch12_vagueness_uncertainty = []
cse_krr_ch13_explanation_diagnosis = []
cse_krr_ch14_actions = []
cse_krr_ch15_planning = []
cse_krr_ch16_tradeoff_expressiveness_tractability = []

cse_krr_cse579 = [   
    ['The syllogisms of Aristotle consist of sentences in ... ... logic','first order'],
    ['... ... are a subset of FOL. They structure the knowledge of an application domain based on a knowledge base containing domain-related terminologies and world descriptions.','description logics'], 
    ['FOL and description logics (DL) are broadly used to support ... ... like RDF, OWL, WSML, or OIL', 'ontology languages'],
    ["... ... ... forms the basis of Answer Set Programming",'stable model semantics'],
    ["Both stable model semantics and well-founded semantics are semantics for logic programs with negation as ...",'failure'],							
    ["What is/are the stable model(s) of this propositional program Π? \nAlways follow these steps: \nFor each interpretation X (starting with X=Ø) replace each critical part ¬H with T or ⊥ and check if X is a minimal model of the reduct of Π rel. to X. \nIf so, then X is a stable model of Π.\n\np, \nq, \nr ⇐ p ∧  ¬S",'{p,q,r}'],
    ["If a propositional program Π has signature σ = {p,q,r}, then how many interpretations X of program Π are there?",'8'],
    ["If a propositional program Π has signature σ = {p,q,r,s}, then how many interpretations X of program Π are there?",'16'],
    ["If you have the following propositional program, then its underlying signature σ can NOT be which of the following options (select all applicable answers)?: \n(a): {p}, (b): {p,q}, (c): {p,q,r}, (d): {p,q,r,s} \n\n Program: p ∨ q, \nr ⇐ ¬p",'a b'],
    ["If you have the following propositional program, then its underlying signature σ can NOT be which of the following options (select all applicable answers)?: \n(a): {p}, (b): {p,q}, (c): {p,q,r}, (d): {p,q,r,s} \n\n Program: p ∨ q",'a'],
    ["A critical part of a propositional formula (i.e. rule) = a subformula of its h... or b..., that begins with '¬', but that is not part of other subformula that begins with '¬'.  For example: in ¬p ⇐ ¬(q ∧  ¬r) both the h... and the b... are critical parts of the formula (i.e. rule)",'head body'],
    ["Stable model semantics: \nWhat is/are the stable model(s) of this propositional program Π? \nIf no model is stable type 'none' and if empty set Ø is stable type '{.}'. \nAlways follow these steps: \nFor each interpretation X (starting with X=Ø) replace each critical part ¬H with T or ⊥ and check if X is a minimal model of the reduct of Π rel. to X. \nIf so, then X is a stable model of Π.\n\np, \nq, \nr ⇐ p ∧ ¬S",'{p,q,r}'],
    ["Stable model semantics: \nWhat is/are the stable model(s) of this propositional program Π? \nIf no model is stable type 'none' and if empty set Ø is stable type '{.}'. \nAlways follow these steps: \nFor each interpretation X (starting with X=Ø) replace each critical part ¬H with T or ⊥ and check if X is a minimal model of the reduct of Π rel. to X. \nIf so, then X is a stable model of Π. \np ⇐ q",'{.}'],
    ["Stable model semantics: \nWhat is/are the stable model(s) of this propositional program Π? \nIf no model is stable type 'none' and if empty set Ø is stable type '{.}'. \nAlways follow these steps: \nFor each interpretation X (starting with X=Ø) replace each critical part ¬H with T or ⊥ and check if X is a minimal model of the reduct of Π rel. to X. \nIf so, then X is a stable model of Π. \np ⇐ ¬q",'{p}'],
    ["Stable model semantics: \nWhat is/are the stable model(s) of this propositional program Π? \nIf no model is stable type 'none' and if empty set Ø is stable type '{.}'. \nAlways follow these steps: \nFor each interpretation X (starting with X=Ø) replace each critical part ¬H with T or ⊥ and check if X is a minimal model of the reduct of Π rel. to X. \nIf so, then X is a stable model of Π.\n\np ⇐ q, \nq ⇐ ¬r",'{p,q}'],
    ["Stable model semantics: \nWhat is/are the stable model(s) of this propositional program Π? \nIf no model is stable type 'none' and if empty set Ø is stable type '{.}'. \nAlways follow these steps: \nFor each interpretation X (starting with X=Ø) replace each critical part ¬H with T or ⊥ and check if X is a minimal model of the reduct of Π rel. to X. \nIf so, then X is a stable model of Π.\n\np ⇐ ¬q \nq ⇐ ¬r",'{q}'],
    ["Stable model semantics: \nWhat is/are the stable model(s) of this propositional program Π? \nIf no model is stable type 'none' and if empty set Ø is stable type '{.}'. \nAlways follow these steps: \nFor each interpretation X (starting with X=Ø) replace each critical part ¬H with T or ⊥ and check if X is a minimal model of the reduct of Π rel. to X. \nIf so, then X is a stable model of Π.\n\np ⇐ ¬q, \nq ⇐ ¬p",'{p} {q}'],
    ["Stable model semantics: \nWhat is/are the stable model(s) of this propositional program Π? \nIf no model is stable type 'none' and if empty set Ø is stable type '{.}'. \nAlways follow these steps: \nFor each interpretation X (starting with X=Ø) replace each critical part ¬H with T or ⊥ and check if X is a minimal model of the reduct of Π rel. to X. \nIf so, then X is a stable model of Π. \np ⇐ ¬p",'none'],
    ["Stable model semantics: \nWhat is/are the stable model(s) of this propositional program Π? \nIf no model is stable type 'none' and if empty set Ø is stable type '{.}'. \nAlways follow these steps: \nFor each interpretation X (starting with X=Ø) replace each critical part ¬H with T or ⊥ and check if X is a minimal model of the reduct of Π rel. to X. \nIf so, then X is a stable model of Π. \np ⇐ ¬¬p",'{.} {p}'],
    ["Stable model semantics: \nWhat is/are the stable model(s) of this propositional program Π? \nIf no model is stable type 'none' and if empty set Ø is stable type '{.}'. \nAlways follow these steps: \nFor each interpretation X (starting with X=Ø) replace each critical part ¬H with T or ⊥ and check if X is a minimal model of the reduct of Π rel. to X. \nIf so, then X is a stable model of Π. \n\np ∨ ¬p",'{.} {p}'],
    ["Stable model semantics: \nWhat is/are the stable model(s) of this propositional program Π? \nIf no model is stable type 'none' and if empty set Ø is stable type '{.}'. \nAlways follow these steps: \nFor each interpretation X (starting with X=Ø) replace each critical part ¬H with T or ⊥ and check if X is a minimal model of the reduct of Π rel. to X. \nIf so, then X is a stable model of Π. \n\np ⇐ ¬q",'{p}'],
    ["Stable model semantics: \nWhat is/are the stable model(s) of this propositional program Π? \nIf no model is stable type 'none' and if empty set Ø is stable type '{.}'. \nAlways follow these steps: \nFor each interpretation X (starting with X=Ø) replace each critical part ¬H with T or ⊥ and check if X is a minimal model of the reduct of Π rel. to X. \nIf so, then X is a stable model of Π. \n\nq ⇐ ¬p",'{q}'],
    ["Stable model semantics: \nWhat is/are the stable model(s) of this propositional program Π? \nIf no model is stable type 'none' and if empty set Ø is stable type '{.}'. \nAlways follow these steps: \nFor each interpretation X (starting with X=Ø) replace each critical part ¬H with T or ⊥ and check if X is a minimal model of the reduct of Π rel. to X. \nIf so, then X is a stable model of Π. \n\np ∨ q",'{p} {q}'],
    ["Stable model semantics: \nWhat is/are the stable model(s) of this propositional program Π? \nIf no model is stable type 'none' and if empty set Ø is stable type '{.}'. \nAlways follow these steps: \nFor each interpretation X (starting with X=Ø) replace each critical part ¬H with T or ⊥ and check if X is a minimal model of the reduct of Π rel. to X. \nIf so, then X is a stable model of Π. \n\nq ∨ ¬q",'{.} {q}'],
]

cse_operating_systems = [
    ["What is the word for a computer program at the core of a computer's OS that has complete control over everything in the system, such as memory allocation etc? \nIt is the portion of the operating system code that is always resident in memory, and facilitates interactions between hardware and software components. On most systems, it is one of the first programs loaded on startup (after the bootloader). It handles the rest of startup as well as memory, peripherals, and input/output (I/O) requests from software, translating them into data-processing instructions for the central processing unit.","kernel"],
    ["In the 60’s Ken Thompson of Bell Labs in NY started ... which was the first OS written in C, which made it portable between different types of hardware architectures. \nKen Thompson's ... philosophy became a powerful model of modular software design and computing. \nThe ... philosophy recommended utilizing small, purpose-built programs in combination to do complex overall tasks.\n\nFill in the name of the operating system.","unix"],
    ["Since ... was designed around files and pipes, this model of 'piping' inputs and outputs of programs together into a linear set of operations on the input is still in vogue today. \nIn fact, the current cloud serverless computing model owes much of its heritage to the ... philosophy. ... was not open source software, and the ... source code was licensable via agreements with its owner, AT&T.\n\nFill in the name of the operating system.","unix"],
    ["In the 70’s ... became popular in academia and some universities bought it’s code. \nIn the 70’s Thompson (from unix) went to Berkeley where a new delivery of Unix software was born: ... . \nInitially, ... was not an alternative to AT&T's Unix, but an add-on with additional software and capabilities. \nBy the time 2... (the second distribution) arrived in 1979, Bill Joy, a Berkeley grad student, had added now-famous programs such as vi and the C shell (/bin/csh).\n\nFill in the missing operating system.","bsd"],
    ["The ... family of operating systems had grown over the years since the 70's, leading in the 90’s to some open source variations that were released under the now-familiar ... license. \nThis included Free..., Open..., and Net..., each with a slightly different target market in the Unix server industry. \n... may have the largest install base of any modern Unix system today.\n\nFill in the missing operating system name.","bsd"],
    ["In the 80’s and 90’s commercial offerings exploded with names like HP-UX, IBM's AIX, Sun's Solaris, Sequent, and Xenix. As the branches grew from the original root, the '... ...' began, and standardization became a new focus for the community. \nThe POSIX standard was born in 1988, as well as other standardization follow-ons via The Open Group into the 1990s.\n\nFill in the missing words.","unix wars"],
    ["GNU + Linux kernel + (opensource) BSD = ... ... .\n\nFill in the missing words.","linux os"],
    ["What we call the Linux OS today is really the combination of two efforts from the early 1990s. \nRichard Stallman was looking to create a truly free and open source alternative to the proprietary ... system. He was working on the utilities and programs under the name ..., a recursive acronym meaning 'GNU is not Unix!' \nAlthough there was a kernel project underway, it turned out to be difficult going, and without a kernel, the free and open source operating system dream could not be realized. \nIt was Linus Torvald's kernel that he called ... that brought the complete OS of the same name as this kernel to life.\n\nFill in the 3 missing words.","unix gnu linux"],
    ["Given that Linus Torvald was using several ... tools (e.g., the ... Compiler Collection, or GCC), the marriage of the ... tools and the Linux kernel was a perfect match. \nLinux distributions came to life with the components of ..., the Linux kernel, MIT's X-Windows GUI, and other BSD components that could be used under the open source BSD license. \nThe early popularity of distributions like Slackware and then Red Hat gave the 'common PC user' of the 1990s access to the Linux OS and, with it, many of the proprietary Unix system capabilities and utilities they used in their work or academic lives.\n\nFill in the missing name for a group of utilities and programs.","gnu"],
    ["In the 90's, because of the free and open source standing of all the Linux components, anyone could create a Linux distribution with a bit of effort, and soon the total number of distributions reached into the hundreds. \nMany developers utilize Linux either via cloud providers or by using free distributions like Fedora, Canonical's Ubuntu, Debian, Arch Linux, Gentoo, and many other variants. \nCommercial Linux offerings, which provide support on top of the free and open source components, became viable as many enterprises, including IBM, migrated from proprietary Unix to offering middleware and software solutions atop Linux. \nRed Hat built a model of commercial support around Red Hat Enterprise Linux, as did German provider SUSE with SUSE Linux Enterprise Server (SLES). \nSuch Linux distributions are often also called: ...","distros"],
    ["Differences between Unix and Linux: Because of POSIX standards and compliance, software written on Unix could be compiled for a Linux operating system with a usually limited amount of porting effort. \nShell scripts could be used directly on Linux in many cases. While some tools had slightly different flag/command-line options between Unix and Linux, many operated the same on both. \nThe remaining differences between Linux and Unix are mainly related to the licensing model: open source vs. proprietary, licensed software. Also, the lack of a common ... within Unix distributions has implications for software and hardware vendors. \nFor Linux on the other hand, a vendor can create a device d.. for a specific hardware device and expect that, within reason, it will operate across most distributions.\n\nFill in the 2 missing words.","kernel driver"],
    ["Because of the commercial and academic branches of the Unix tree, a vendor might have to write different drivers for variants of Unix and have licensing and other concerns related to access to an SDK or a distribution model for the software as a b.. device driver across many Unix variants. As both communities have matured over the past decade, many of the advancements in ... have been adopted in the Unix world. \nMany GNU utilities were made available as add-ons for Unix systems where developers wanted features from GNU programs that aren't part of Unix. \nFor example, IBM's AIX offered an AIX Toolbox for Linux Applications with hundreds of GNU software packages (like Bash, GCC, OpenLDAP) that could be added to an AIX installation to ease the transition between Linux and Unix-based AIX systems.\n\nFill in the 2 missing words.","binary linux"],
    ["... was a computer company between 1954-1994. In 1982 it started producing an 8-bit home computer that was the world's best-selling desktop computer. A set of chips designed by MOS Technology, resulted in remarkable sound and graphics for its time and is often credited with starting the computer demo scene. ... also released its Amiga computer line in 1985. Although other computer manufacturers provide(d) their OS on loadable media such as magnetic tape, magnetic disk or optical disk, ... provided it's OS in ROM called the Kernal, built into the motherboard. ... also typically added a BASIC ROM to their motherboards that allowed users to author, save, load and execute (RUN) BASIC programs for themselves. \nThe BASIC ROM is typically considered to be part of the operating system although strictly speaking it is not.\n\nFill in the missing word.","commodore"],
    ["Mac OS (Mac OS X until 2012 and OS X until 2016) is the current Mac operating System. \nIntroduced in 1984. Mac is a macintosh computer produced by ... . \nThe original Macintosh is the first successful mass-market personal computer to have featured a ... ... ... (GUI), built-in screen, and mouse. \nApple sold the Mac alongside its popular Apple II, Apple III, and Apple Lisa families of computers until the other models were discontinued in the 1990s. \nEarly macs were expensive, hindering competitiveness in a market dominated by the much cheaper Commodore 64 for consumers, as well as the IBM Personal Computer and its accompanying clone market for businesses, although they were less expensive than the Xerox Alto and other computers with GUI’s that predated the Mac.\n\nFill in the missing words.","apple graphical user interface"],
    ["Every Apple Mac hardware unit shipped in recent history can be claimed by ..., as OS X / macOS is a ...-derivative OS. \nThe popularity of the macOS hardware and operating system as a platform for development that mainly targets Linux may be attributed to the ...-like macOS operating system. \nMany tools and scripts meant for a Linux system work easily within the macOS terminal. \nMany open source software components available on Linux are easily available through tools like Homebrew. \nBtw you can also install and run windows on an Apple computer (mac).\n\nFill in the missing operating system name.","bsd"],
    ["Microsoft introduced Windows in 1985, as a graphical OS shell for MS-DOS in response to growing interest in graphical user interfaces (GUIs). \nActive Microsoft Windows families include Windows ... (for servers) and Windows ... (for low resource devices); these may encompass subfamilies, (e.g. Windows Server or Windows Embedded Compact) (Windows CE). \nThe Windows kernel (both the original MsDos-based, and the NT-based, you can find in every distribution after Windows 7) was written in ... . The entire Windows API consists of C calls, and the preferred language to write kernel drivers is still C (but C++ is also available with certain limitations). \nThe layers above the kernel are mostly written in ... and a lot of GUI-related code is written in ... .\n\nFill in the 5 missing terms.","nt iot c c++ c#"],
    ["Utilities which aren't actually part of the Microsoft Windows OS, like paint and wordpad are written in ... (legacy apps) or ... (anything written after ~2006, except browser(s)).\n\nFill in the missing names of programming languages.","c++ c#"],
    ["The existence and popularity of the Windows Subsystem for Linux (...), as well as more recently announced capabilities like the Windows port of Docker, including LCOW (Linux containers on Windows) support, are evidence of the impact that Linux has had, and will continue to have, across the software world. \nIn 2017 Microsoft announced that it would start using ..., an open source version control system created by Linus Torvalds.\n\nFill in the 2 missing words.","wsl git"],  
    ]

cse_linux_commands = [
    ["In Linux: CLI is an abbreviation for what?","command line interface"],
    ["In Linux CLI: Use the ... command to find out the path of the current working directory (folder) you’re in. The command will return an a.. (full) path, which is basically a path of all the directories that starts with a forward slash (/). E.g. /home/username.\n\nFill in the missing words.","pwd absolute"],
    ["In Linux CLI: Let’s say you’re in /home/username/Documents and you want to go to Photos, a subdirectory of Documents. To do so, simply type the following command: ... Photos.\n\nFill in the missing word.","cd"],
    ["In Linux CLI: which command is for moving one directory up?","cd.."],
    ["In Linux CLI: which command is for going straight to the home folder?","cd"],
    ["In Linux CLI: which command is for moving to your previous directory?","cd-"],
    ["In Linux CLI: If you want to see the content of other directories, type ... and then the directory’s path.\n\nFill in the missing command.","ls"],
    ["In Linux CLI: which command will list all the files in current and sub-directories?","ls -R"],
    ["In Linux CLI: which command will show the hidden files in current directory?","ls -a"],
    ["In Linux CLI: which command will list the files and directories with detailed information like the permissions, size, owner, etc.","ls -al"],
    ["In Linux CLI: which command (short for concatenate) is used to list the contents of a file on the standard output (sdout). This command is followed by the file’s name and its extension. E.g. ... file.txt","cat"],
    ["In Linux CLI: '... > filename' creates a new file.\n\nFill in the dots.","cat"],
    ["In Linux CLI: '... filename1 filename2>filename3' joins two files (1 and 2) and stores the output of them in a new file (3).\n\nFill in the dots.","cat"],
    ["In Linux CLI: to convert a file to upper or lower case use, '... filename | tr a-z A-Z >output.txt'.\n\nFill in the dots.","cat"],
    ["In Linux CLI: Use the ... command to copy files from the current directory to a different directory. For instance, the command ... scenery.jpg /home/username/Pictures would create a copy of scenery.jpg (from your current directory) into the Pictures directory.\n\nFill in the missing command.","cp"],
    ["In Linux CLI: The primary use of the ... command is to move files, although it can also be used to rename files.","mv"],
    ["In Linux CLI: To rename files, the Linux command is '... oldname.ext newname.ext'.\n\nFill in the missing command.","mv"],
    ["In Linux CLI: Use ... command to make a new directory. If you type ... Music it will create a directory called Music.","mkdir"],
    ["In Linux CLI: To generate a new directory inside another directory, use this Linux basic command ... Music/Newfile","mkdir"],
    ["In Linux CLI: use the ... (parents) option to create a directory in between two existing directories. For example, mkdir -... Music/2020/Newfile will create the new “2020” file.","p"],
    ["In Linux CLI: If you need to delete a directory, use the ... command. However, it only allows you to delete empty directories.\n\nFill in the missing command.","rmdir"],
    ["In Linux CLI: The ... command is used to delete directories and the contents within them. If you only want to delete the directory (as an alternative to rmdir) use ... -r.\n\nFill in the missing command.","rm"],
    ["In Linux CLI: The ... command allows you to create a blank new file. As an example, enter ... /home/username/Documents/Web.html to create an HTML file entitled Web under the Documents directory.\n\nFill in the missing command.","touch"],
    ["In Linux CLI: The command '... -i school*note' will search for any file that contains the word “school” and “note”, whether it is uppercase or lowercase (the -i argument along with this command will make it case-insensitive).","locate"],
    ["In Linux CLI: Similar to the locate command, using ... also searches for files and directories. The difference is, you use the ... command to locate files within a given directory. E.g.: ... /home/ -name notes.txt command will search for a file called notes.txt within the home directory and its subdirectories.\n\nFill in the missing command.","find"],
    ["In Linux CLI: To search for files in the current directory use: ... . -name notes.txt","find"],
    ["In Linux CLI: To search through all the text in a given file, use ... . E.g.: ... blue notepad.txt will search for the word blue in the notepad file.","grep"],
    ["In Linux CLI: Short for 'SuperUser Do', this command enables you to perform tasks that require administrative or root permissions. However, it is not advisable to use this command for daily use because it might be easy for an error to occur if you did something wrong. Which command is described here?","sudo"],
    ["In Linux CLI: Use ... command to get a report on the system’s disk space usage, shown in percentage and KBs. If you want to see the report in megabytes, type ... -m.\n\nFill in the missing command.","df"],
    ["In Linux CLI: If you want to check how much space a file or a directory takes, the ... (Disk Usage) command is the answer. However, the disk usage summary will show disk block numbers instead of the usual size format. If you want to see it in bytes, kilobytes, and megabytes, add the ... argument to the command line.\n\nFill in the missing words.","du -h"],
    ["In Linux CLI: The ... command is used to view the first lines of any text file. By default, it will show the first ten lines, but you can change this number to your liking. For example, if you only want to show the first five lines, type ... -n 5 filename.ext.\n\nFill in the missing command.","head"],
    ["In Linux CLI: Similar in function to the head command, but instead of showing the first lines, the ... command will display the last ten lines of a text file. For example, ... -n filename.ext.\n\nFill in the missing command.","tail"],
    ["In Linux CLI: The ... command compares the contents of two files line by line. After analyzing the files, it will output the lines that do not match. Programmers often use this command when they need to make program alterations instead of rewriting the entire source code. The simplest form of this command is ... file1.ext file2.ext.\n\nFill in the missing command.","diff"],
    ["In Linux CLI: The ... command is the most used command to archive multiple files into a ...ball (a common Linux file format that is similar to zip format, with compression being optional).","tar"],
    ["In Linux CLI: The command ... is used to change the read, write, and execute permissions of files and directories.","chmod"],
    ["In Linux CLI: The ... command enables you to change or transfer the ownership of a file to the specified username. For instance, ... linuxuser2 file.ext will make linuxuser2 as the owner of the file.ext.","chown"],
    ["In Linux CLI: The ... command will display all current jobs along with their statuses. A job is basically a process that is started by the shell.\n\nFill in the missing command.","jobs"],
    ["In Linux CLI: If you have an unresponsive program, you can terminate it manually by using the ... command. It will send a certain signal to the misbehaving app and instructs the app to terminate itself. Type: ... [signal option] PID. In which PID is process ID number.","kill"],
    ["In Linux CLI: Use the ... command to check your connectivity status to a server. For example, by simply entering ... google.com, the command will check whether you’re able to connect to Google and also measure the response time.","ping"],
    ["In Linux CLI: You can download files from the internet with the help of the ... command. To do so, simply type ... followed by the download link.\n\nFill in the missing command.","wget"],
    ["In Linux CLI: The ... command, short for Unix Name, will print detailed information about your Linux system like the machine name, operating system, kernel, and so on.","uname"],
    ["In Linux CLI: As a terminal equivalent to Task Manager in Windows, the ... command will display a list of running processes and how much CPU each process uses. It’s very useful to monitor system resource usage, especially knowing which process needs to be terminated because it consumes too many resources.\n\nFill in the missing command.","top"],
    ["In Linux CLI: When you’ve been using Linux for a certain period of time, you’ll quickly notice that you can run hundreds of commands every day. As such, running the ... command is particularly useful if you want to review the commands you’ve entered before.\n\nFill in the missing command","history"],
    ["In Linux CLI: You can easily learn how to use commands right from Linux’s shell by using the ... command. For instance, entering ... tail will show the manual instruction of the tail command.\n\nFill in the missing command.","man"],
    ["In Linux CLI: The ... command is used to move some data into a file. For example, if you want to add the text, “Hello, my name is John” into a file called name.txt, you would type ... Hello, my name is John >> name.txt.\n\nFill in the missing command.","echo"],
    ["In Linux CLI: Use the ... command to compress your files into a zip archive, and use the ... command to extract the zipped files from a zip archive.\n\nFill in the 2 missing commands","zip unzip"],
    ["In Linux CLI: If you want to know the name of your host/network simply type the command: ... . Adding a -i to the end will display the IP address of your network.\n\nFill in the missing command.","hostname"],
    ["In Linux CLI: Since Linux is a multi-user system, this means more than 1 person can interact with the same system at the same time. The command ... is used to create a new user, while passwd is adding a password to that user’s account. To add a new person named John type, ... John and then to add his password type, passwd 123456789.\n\nFill in the missing command.","useradd"],
    ["In Linux CLI: To remove a user is very similar to adding a new user. To delete the users account type, ... UserName.\n\nFill in the missing command.","userdel"],
    ["In Linux CLI: Use the ... command to clean out the terminal if it is getting cluttered with too many past commands.\n\nFill in the missing command.","clean"],
    ["In Linux CLI: Try the ... button to autofill what you are typing. For example, if you need to type Documents, begin to type a command (let’s go with cd Docu, then hit the ... key) and the terminal will\n\nFill in the rest, showing you cd Documents.\n\nFill in the name of the button.","tab"],
    ["In Linux CLI: The 2 commands: ... and ... are used to stop any command that is currently working. The former will stop and terminate the command, while the latter will simply pause the command.","ctrl+c ctrl+z"],
    ["In Linux CLI: If you accidentally freeze your terminal by using Ctrl+S, simply undo this with the unfreeze command: ... .\n\nFill in the missing command.","ctrl+q"],
    ["In Linux CLI: The command ... moves you to the beginning of the line while ... moves you to the end.\n\nFill in the 2 commands.","ctrl+a ctrl+e"],
    ["In Linux CLI: You can run multiple commands in one single command by using the '...' symbol to separate them. E.g. Command1... Command2... Command3. Or use && if you only want the next command to run when the first one is successful.\n\nFill in the missing symbol.",";"],
    ]



    
neuroscience = [
    ['What is the most important inhibitory neurotransmitter in the brain?','gaba'],
    ['What is the most important excitatory neurotransmitter in the brain?','glutamate'],
    ['... is a glutamate receptor that is activated when glutamate and glycine bind to it and that plays an important role in synaptic plasticity and facilitates memory, learning and network formation.\n\nFill in the dots (1x).','nmda'],
    ['NMDA is a	... receptor that is activated when ... and glycine bind to it and that plays an important role in synaptic plasticity and facilitates memory, learning and network formation.\n\nFill in the dots (1x).','glutamate'],
    ['NMDA is a glutamate receptor that is activated when glutamate and ... bind to it and that plays an important role in synaptic plasticity and facilitates memory, learning and network formation.\n\nFill in the dots (1x).','glycine'],
    ['Disrupted function of the ... ... may impair synchrony between distant regions and thereby reduce coordination of large-scale networks.\n\nFill in the dots (2x).','nmda receptor'],
    ['Symptoms of ... may result from impaired communication between cortical regions caused by reduced NMDA receptor function which results in increased local gamma activity that is no longer coordinated by connections with distant regions','schizophrenia'],
	['Active processing is associated with an increase in neuronal spiking or high frequency activity (HFA). However, meaningful processing with behavioral consequences has also been observed without changes in spiking and is referred to as ... ... .\n\nFill in the dots.','activity silent encoding'],
    ['... ... summarizes various executive functions, such as attention, working memory, error monitoring, inhibitory control, or planning, which reflect the means to achieve fluid behavior.\n\nFill in the dots (2x).','cognitive control'],
    ['... ... ... describes a systemic correlation between two oscillations with different frequencies. \nMost ... ... ... is assessed by phase-amplitude coupling.\n\nFill in the dots (3x). .','cross frequency coupling'],
    ['... ... ..., where the phase of slow oscillations correlates with the amplitude of a faster oscillation.\n\nFill in the dots (3x).','phase amplitude coupling'],
    ['... ... a measure of interaction between two signals based on their amplitude or phase relations. \nMost commonly, FC is assessed by coherence or phaselocking analyses of band-limited signals or by linear correlations of the amplitude/power time series.\nFill in the dots (2x).', 'functional connectivity'],
    ['... connectivity is another word for directed functional connectivity. \nIt is usually not referred to as a form of functional connectivity.\n\nFill in the dots (1x). ','effective'],
    ['... ... ... (HFA): also referred to as high gamma, describes activity in the 70–200-Hz range that is commonly observed in the local field potential(LFP) of electrocorticography (ECoG) studies and closely correlates with population spiking activity. It is often used to infer whether a cortical region is actively engaged in a task or not.\n\nFill in the dots (3x).','high frequency activity'],
    ['... describes the directed synchronization of one oscillator by another.\n\nFill in the dots (1x).','entrainment'],   
    ]    

maths_linalg = [
    ["MIT LEC 1&2:\nAn m x n matrix A has ... rows and ... columns. \nAnd we call the matrix with 1's on the diagonal the 'identity matrix' (shortened as: I). \nE.g. I_2 is the 2x2 identity matrix: [[1,0],[0,...]] (with matrix rows represented as separate list elements). \n\nFill in the dots (3x).","m n 1"],
    ["MIT LEC 1&2: \nAn m x n matrix A has ... rows and n ... . \nAnd we call the matrix with 1's on the diagonal the 'identity matrix' (shortened as: I). \nE.g. I_2 is the 2x2 identity matrix: [[...,0],[0,1]] (with matrix rows represented as separate list elements). \n\nFill in the dots (3x).","m columns 1"],
    ["MIT LEC 1&2: \nAn m x n matrix A has m ... and n columns. \nAnd we call the matrix with 1's on the d.. the 'identity matrix' (shortened as: I). \nE.g. I_2 is the 2x2 identity matrix: [[1,...],[0,1]] (with matrix rows represented as separate list elements). \n\nFill in the dots (3x).","rows diagonal 0"],
    ["MIT LEC 1&2: \nThe 'transpose' of a matrix A is represented as: A^T (with '^' meaning: superscript). \nA matrix is transposed when its items are moved, such that their locations are mirrored/pivoted around the d.. through the item in the first row and first column. \nE.g.: \n[1,2,3]^T = the column [[1],[2],[3]]. \nOr: if A = the 2x2 matrix A = [[1,2],[[3,4]] then A^T = [[1,3],[[...,4]]. \n\nFill in the dots (2x).","diagonal 2"],
    ["MIT LEC 1&2: \nThe 'transpose' of a matrix A is represented as: A^T (with '^' meaning: superscript). \nA matrix is transposed when its items are moved, such that their locations are mirrored/pivoted around the d.. through the item in the first row and first column. \nE.g.: \n[1,2,3]^T = the column [[1],[2],[3]]. \nOr: if A = the 2x2 matrix A = [[1,2],[[3,4]] then A^T = [[1,...],[[2,4]]. \n\nFill in the dots (2x).","diagonal 3"],
    ["MIT LEC 1&2: \nI_2 (with '_' meaning: subscript) is the 2x2 identity matrix: [[1,0],[0,1]]. \nThis matrix is called 's..' because when we transpose it, we obtain the same matrix. \nMeaning: I^T=... \n\nFill in the dots (2x).","symmetric I"],
    ["MIT LEC 1&2: \nI_2 (with '_' meaning: subscript) is the 2x2 identity matrix: [[1,0],[0,1]]. \nThis matrix is called 's..' because when we transpose it, we obtain the same matrix. \nMeaning: I^...=I \n\nFill in the dots (2x).","symmetric T"],
    ["MIT LEC 3: \nIf A is an m x n matrix and B is an n x p matrix, then A*B = C, whereby C is an ... x ... matrix. \nAnd in C the columns are a combi of the cols of ... , whereas its rows are a combi of the rows of ... .\n\nFill in the dots (4x).","m p A B"],
    ["MIT LEC 4: \nThe 3x3 matrix [[0 1 0],[1 0 0],[0 0 1]] is an example of a row exchange matrices, another word for these is: p.. matrix. \nIf P is such a matrix, then: P^-1 = ... .\n\nFill in the missing dots (2x)","permutation P^T"],
    ["MIT LEC 4: \nWe can obtain the inverse of matrix A (i.e. A^-1) by taking the augmented matrix [A|I] and apply row reduction and multiplications until [I|A^-1] is obtained. \nSo if A = matrix [[1 0],[-2 1]], then A^-1 = ... . \nWrite the matrix as: [[.. ..],[.. ..]]","[[1 0],[2 1]]"],
    ["MIT LEC 5: \nA vector space is closed under l.. operations and needs to include z.. . \nWhereas a subspace is a vector space that is a s.. of another vector space. \nTherefore any line through [0,0]^T is a s.. of vector space R^2.\n\nFill in the missing words (4x).","linear zero subset subspace"],
    ["MIT LEC 5: \nAny plane through [... ...]^T and also any plane through [... ... ...]^T is a subspace of R^3.\n\nFill in the 5 missing numbers.","0 0 0 0 0"],
    ["MIT LEC 5: \nA columnspace of a matrix A (i.e. C(A)) is a s.. that consists of all the linear combinations of the column vectors of A. \nIf A is a 3x2 matrix then, as long as these columnvectors are not zero or in the same direction, C(A) is a ... dimensional ... through [0 0 0]^T.\n\nFill in the 3 missing words.","subspace 2 plane"],
    ["MIT LEC 6: \nFor 2 subspaces L and P: L ⋂ P (intersection) is a ... but L ⋃ P (union) is not.\n\nFill in the missing word.","subspace"],
    ["MIT LEC 6: \nFor a 3x3 matrix A, if col3 = col1 + col2, then we say that col3 is d.. .\n\nFill in the missing word. ","dependent"],
    ["MIT LEC 6: \nThe n.. of a matrix A (i.e. N(A)) is defined as: all solutions x for Ax=... .\n\nFill in the 2 gaps.","nullspace 0"],
    ["MIT LEC 6: \nA nullspace of A (i.e. N(A)) consists of solutions to Ax=0 and spans a ... of the vectors in A. Whereas solutions of Ax=b (with b not 0) do not even form a ... space, let alone a subspace! Instead they form a plane/line that does not go through ... .\n\nFill in the 3 missing words.","subspace vector zero"],
    ["MIT LEC 7: \nThe r.. of an mxn matrix A equals the number of pivots in its upper echelon (i.e. U). \nU can be obtained by taking the m-th row and subtracting the above r.. from it to obtain zeros and continue with the (m-1)-th row, etc. The ... of a row is its first nonzero item, and all non-pivot-columns are free columns. N(A) contains all nonzero solutions of Ux=0. Its # of solutions = the # of free cols = n ... rank.\n\nFill in the dots (4x).","rank row pivot -"],
    ["MIT LEC 7: \nThe rank (r) of an mxn matrix A = the number of pivots in its u.. e.. (i.e. U). \nU can be obtained by taking the m-th row and subtracting the above rows from it to obtain zeros and continue with the (m-1)-th row, etc. The pivot of a row is its first n.. item, and all non-pivot-columns are free columns. N(A) contains all nonzero solutions of Ux=0. Its # of solutions = the # of ... cols = n-rank.\n\nFill in the dots (4x).","upper echelon nonzero free"],
    ["MIT LEC 7: \nThe rank (r) of an mxn matrix A = the number of pivots in its upper echelon (i.e. U). \nU can be obtained by taking the m-th row and subtracting the above rows from it to obtain zeros and continue with the (m-1)-th ..., etc. The pivot of a row is its first nonzero item, and all non-pivot-columns are ... columns. N(A) contains all nonzero solutions of Ux=0. Its # of solutions = the # of free cols = n - ... .\n\nFill in the dots (3x).","row free rank"],
    ["MIT LEC 7: \nAn mxn matrix A can be reduced even further than just its upper echelon U by subtracting later rows from earlier ones and by multiplying them such that pivots become 1. \nhis is called the r.. row echelon form of A (i.e. rref(A) or: R). The p.. cols of R always form identity matrix I and the other (free) columns form F. And Ax=0, Ux=0 and Rx=0 have the same s.. .\n\nFill in the gaps.","reduced pivot solutions"],
    ["MIT LEC 7: \nfor matrices A and B: (A*B)^T = B^T * A^T. \nTherefore R^T * R is always ..., since (R^T * R)^T = R^T * R.\n\nFill in the missing words.","symmetric"],
    ["MIT LEC 8: \nWe can obtain the inverse of matrix A (i.e. A^-1) by taking the augmented matrix [A|...] and apply row reduction and multiplications until [...|A^-1] is obtained.\n\nFill in the missing word (letter).","I"],
    ["MIT LEC 8: \nWe can solve Ax=b by taking the augmented matrix [A|b] and apply the same technique as for solving ... .\n\nFill in the missing equation.","Ax=0"],
    ["MIT LEC 8: \nAx=b is solvable when b is in the ... ... of A. \nEquivalently: Ax=b is solvable if when the zero row is obtained by some combi of rows of A and the same combi of entries of ... also gives 0.\n\nFill in the missing dots (3x).","column space b"],
    ["MIT LEC 8: \nTo find solutions (x) for Ax=b: x = x_particular + x_nullspace (i.e. A(x_p+x_n)=b ). \nTo find x_p: set all ... vars to 0 and solve Ax=b for pivot vars only. \nAnd to find x_n we fill in per free var: free var= ... (one solution for each free var).\n\nFill in the dots (2x).","free 1"],
    ["MIT LEC 8: \nTo find solutions (x) for Ax=b: x = x_particular + x_nullspace (i.e. A(x_p+x_n)=b ). \nTo find x_p: set all free vars to ... and solve Ax=b for pivot vars only. \nAnd to find x_n we fill in per free var: free var= 1 (one solution for each ... var).\n\nFill in the dots (2x).","0 free"],
    ["MIT LEC 8: \nTo find solutions (x) for Ax=b: x = x_particular + x_nullspace (i.e. A(x_p+x_n)=b ). \nTo find x_p: set all free vars to 0 and solve Ax=b for ... vars only. \nAnd to find x_n we fill in per free var: free var= ... (one solution for each free var).\n\nFill in the dots (2x).","pivot 1"],
    ["MIT LEC 8: \nFor an m x n matrix A with r its rank (# of pivot cols): Full row rank means: r = ..., which means that Ax=b is solvable for every b. \nFull column rank means: r = n which means there are no free cols, so that N(A) is only the ... vector and Ax=b can have only 1 solution if it exists, namely x=x_... .\n\nFill in the dots (3x).","m zero particular"],
    ["MIT LEC 8: \nFor an m x n matrix A with r its rank (# of pivot cols): Full row rank means: r = m, which means that Ax=b is s.. for every b. \nFull column rank means: r = n which means there are no free cols, so that N(A) is only the zero vector and Ax=b can have only 1 solution if it exists, namely x=x_... .\nFill in the dots (2x).","solvable particular"],
    ["MIT LEC 8: \nFor an m x n matrix A with r its rank (# of pivot cols): Full ... rank means: r = m, which means that Ax=b is solvable for every b. \nFull column rank means: r = ... which means there are no free cols, so that ...(A) is only the zero vector and Ax=b can have only 1 solution if it exists, namely x=x_particular.\n\nFill in the dots (3x).","row n N"],
    ["MIT LEC 8: \nFor an m x n matrix A with r its rank (# of pivot cols): If A full rank, then r=m=n, then R=... , so there will be exactly 1 s.. for Ax=b.\n\nFill in the dots.","I solution"],
    ["MIT LEC 8: \nFor an m x n matrix A with r its rank (# of pivot cols): If A full rank (i.e. r=m=n) => R=I => ... solution(s) exists. If A full col rank (r=n<m) => R=[I O]^T => 0 or 1 sols exist. If A full row rank (r=m<n) => R=[I F] => 1 or ∞ sol(s) exist. If r<m and r<n => R=[[I F],[O O]] => ... or ∞ sol(s) exist.\n\nFill in the dots (2x).","1 0"],
    ["MIT LEC 8: \nFor an m x n matrix A with r its rank (# of pivot cols): If A full rank (i.e. r=m=n) => R=... => 1 solution(s) exists. If A full col rank (r=n<m) => R=[I ...]^T => 0 or 1 sol(s) exist. If A full row rank (r=m<n) => R=[I F] => 1 or ∞ sol(s) exist. If r<m and r<n => R=[[I F],[O O]] => ... or ∞ sol(s) exist.\n\nFill in the dots (3x).","I O 0"],
    ["MIT LEC 8: \nFor an m x n matrix A with r its rank (# of pivot cols): If A full rank (i.e. r=m=n) => R=I => 1 solution(s) exists. If A full col rank (r=n<m) => R=[I O]^T => 0 or 1 sol(s) exist. If A full row rank (r=m<n) => R=[... ...] => 1 or ∞ sol(s) exist. If r<m and r<n => R=[[I F],[... O]] => 0 or ∞ sol(s) exist.\n\nFill in the dots (3x).","I F O"],
    ["MIT LEC 9: \nThe basis for a space is a sequence of vectors with 2 properties: (1)the vectors are i.., and (2) they s.. the space.\n\nFill in the missing words.","independent span"],
    ["MIT LEC 9: \nI_3 is the s.. basis for R3. So ...(I) is only the zero vector, because all the cols are independent.\n\nFill in the dots (2x).","standard N"],
    ["MIT LEC 9: \nA basis of R^n can be the cols of an nxn matrix if that matrix is i.. , because that would mean that its cols are independent. \nIn fact, every basis for some space has the same number of vectors which is the d.. of that space.\n\nFill in the dots (1x).","invertible dimension"],
    ["MIT LEC 9: \nA basis of R^n can be the cols of an nxn matrix if that matrix is invertible, because that would mean that its cols are i.. . I\nn fact, every basis for some space has the same number of vectors which is the d.. of that space.\n\nFill in the dots (2x).","independent dimension"],
    ["MIT LEC 9: \nThe dimension of the ... of matrix A = rank of A = r. \nWhereas the dimension of the ... of A is the number of free vars = n-r.\n\nFill in the dots (2x).","columnspace nullspace"],
    ["MIT LEC 9: \nThe dimension of the ... of matrix A = rank of A = r. \nWhereas the dimension of the ... of A is the number of free vars = n-r.\n\nFill in the dots (2x).","columnspace nullspace"],
    ["MIT LEC 10: \nNullspace of A^T = ... nullspace of A.","left"],
    ["MIT LEC 10: \nLet A be an mxn matrix. For C(A^T) (= rowspace of A): dim=r, basis=pivot ... of A^T. \nFor N(A): dim=n-r, basis=special sols. C(A^T)+N(A)=n. For C(A): dim=..., basis=pivot cols of A. For N(A^T): dim=m-r, basis=last m-r rows of E (with EA=R). C(A)+N(A^T)=m.\n\nFill in the gaps (2x).","columns r"],
    ["MIT LEC 10: \nLet A be an mxn matrix. For C(A^T) (= rowspace of A): dim=... , basis=pivot cols of A^T. \nFor N(A): dim=n-r, basis=special sols. C(A^T)+N(A)=n. For C(A): dim=r, basis=pivot cols of A. For N(A^T): dim=..., basis=last m-r rows of E (with EA=R). C(A)+N(A^T)=m.\n\nFill in the gaps (2x).","r m-r"],
    ["MIT LEC 10: \nLet A be an mxn matrix. For C(A^T) (= rowspace of A): dim=r, basis=pivot cols of A^T. \nFor N(A): dim=n-r, basis=special sols. C(A^T)+...(A)=n. For C(A): dim=r, basis=pivot cols of A. For N(A^T): dim=m-r, basis=last m-r rows of E (with EA=...). C(A)+N(A^T)=m.\n\nFill in the gaps (2x).","N R"],
    ["MIT LEC 10: \nLet A be an mxn matrix. For C(A^T) (= rowspace of A): dim=r, b..=pivot cols of A^T. \nFor N(A): dim=n-r, basis=special sols. C(A^T)+N(A)=n. For C(A): dim=r, basis=pivot cols of A. For N(A^T): dim=m-r, basis=last m-r rows of E (with EA=R). C(A)+N(A^T)=... .\n\nFill in the gaps (2x).","basis m"],
    ["MIT LEC 10: \nFor mxn matrix A: for orthogonal subspaces: \ndim C(A^T)+ dim N(A)=... . And dim C(A)+ dim N(A^T)=... .\n\nFill in the missing values (2x)","n m"],
    ["MIT LEC 10: \nFor mxn matrix A: for orthogonal subspaces: \ndim C(A^T)+ dim ...=n . And dim C(A)+ dim N(A^T)=... .\n\nFill in the dots (2x)","n m"],
    ["MIT LEC 10: \nFor mxn matrix A: for orthogonal subspaces: \ndim C(A^T)+ dim N(A)=... . And dim ...+ dim N(A^T)=m .\n\nFill in the dots (2x)","n m"],
    ["MIT LEC 10: \nFor mxn matrix A: for orthogonal subspaces: \ndim ...(A^T)+ dim ...(A)=n . And dim ...(A)+ dim ...(A^T)=m .\n\nFill in the dots (4x)","C N C N"],
    ["MIT LEC 10: \nFor mxn matrix A: The basis of its ... = the first r rows of R (i.e. of the reduced row echelon form of A)","rowspace"],
    ["MIT LEC 11: \nEA=R, meaning that E contains the steps necessary to go from A to R (i.e. to the r.. row echelon form). \nConsequently, E=A^-1 when R=... .\n\nFill in the dots.","reduced I"],
    ["MIT LEC 11: \nIf A is an mxn matrix and EA=R, then the basis of the l.. nullspace of A (i.e. of N(A^T) = the last m-r rows of E. \nBecause these describe which combinations of rows of A produce a ... row.\n\nFill in the dots.","left zero"],
    ["MIT LEC 11: \nMatrices obey the same rules as vectors, so we can call the set of all 3x3 matrices a vector space, say M. \nExample s.. of M include: all upper triangulars, all symmetric matrices, all diagonal matrices. The standard basis of M has ... elements, therefore this is also the d.. of M.\n\nFill in the dots (3x).","subspaces 9 dimension"],
    ["MIT LEC 11: \nFor the solution space of the ...nd order diff eq (d^2 y)/(dx^2)+y = 0 we can find different bases: e.g. basis c1*sin(x)+c2*cos(x) or basis c1*e^ix+c2*e^-ix. \nThis solution space is a v.. space with functions (sin(x), cos(x) etc) instead of vectors. Generally, solution spaces of n-th order diff eqs are ... dimensional.\n\nFill in the dots (3x).","2 vector n"],
    ["MIT LEC 11: \nFor the solution space of the 2nd order diff eq (d^2 y)/(dx^2)+y = 0 we can find different bases: e.g. basis c1*s..(x)+c2*c..(x) or basis c1*e^ix+c2*e^-ix. \nThis solution space is a vector space with functions (sin(x), cos(x) etc) instead of vectors. Generally, s.. spaces of n-th order diff eqs are n dimensional.\n\nFill in the dots (3x).","sin cos solution"],
    ["MIT LEC 11: \nFor the solution space of the 2nd order diff eq (d^2 y)/(dx^2)+y = 0 we can find different bases: e.g. basis c1*sin(x)+c2*cos(x) or basis c1*e^ix+c2*e^-ix. \nThis solution space is a ... space with functions (sin(x), cos(x) etc) instead of vectors. Generally, solution spaces of n-th o.. diff eqs are n dimensional.\n\nFill in the dots (2x).","vector order"],
    ["MIT LEC 11: \nFor the solution space of the 2nd order ... e.. (d^2 y)/(dx^2)+y = 0 we can find different bases: e.g. basis c1*sin(x)+c2*cos(x) or basis c1*e^ix+c2*e^-ix. \nThis solution space is a vector space with functions (sin(x), cos(x) etc) instead of vectors. Generally, solution spaces of n-th order diff eqs are n d...\n\nFill in the dots (3x).","differential equation dimensional"],
    ["MIT LEC 11: \nRank ... matrices are the building blocks of all matrices. \nIf you have a 5x17 matrix of rank 4 you can break it down to 4 rank ... matrices. \nGeneral form of rank ... matrices: A = u v^T with u and v both a column.\n\nFill in the missing number.","1"],
    ["MIT LEC 12: \nEulers formula for every graph: #nodes - #edges + #l.. = 1.\n\nFill in the dots (1x).","loops"],
    ["MIT LEC 12: \nEulers formula for every graph: #nodes - #edges + #loops = ... .\n\nFill in the dots (1x).","1"],
    ["MIT LEC 12: \nEulers formula for every graph: #nodes - #e.. + #loops = 1.\n\nFill in the dots (1x).","edges"],
    ["MIT LEC 12: \nThe basic equation of applied maths: for an e.. (=> time not in eq): A^T*C*A*X = f (with f coming from an external source). \nIt is important for this equation that A^T*C*A is always s.. .\n\nFill in the dots (2x).","equilibrium symmetric"],
    ["MIT LEC 14: \nTest for orthogonality of x and y: x^T*y=... .\n\nFill in the dots (1x).","0"],
    ["MIT LEC 14: \n||x||^2=x^T*x. Therefore we can read the equation of ... as: x^T*x + y^T*y = (x+y)^T(x+y)","pythagoras"],
    ["MIT LEC 14: \nSubspace S is o.. to subspace T, means that: every vector in S is o.. to every vector in T. \nAnd test for o..ity of x and y: x^T*y=0 .\nFill in the missing word (1x).","orthogonal"],
    ["MIT LEC 14: \nSubspace S is o.. to subspace T, means that: every vector in S is o.. to every vector in T. \nAnd test for o..ity of x and y: x^T*y=0 .\nFill in the missing word (1x).","orthogonal"],
    ["MIT LEC 14: \nSubspace S is orthogonal to subspace T, means that: every vector in S is orthogonal to ... vector in T. \nAnd test for orthogonality of x and y: x^T*...=0 .\nFill in the dots (2x).","every y"],
    ["MIT LEC 14: \nSubspace S is orthogonal to subspace T, means that: e.. vector in S is orthogonal to every vector in T. \nAnd test for orthogonality of x and y: ...^T*y=0 .\nFill in the dots (2x).","every x"],
    ["MIT LEC 14: \nA line in a plane through the origin is always ... to the zero subspace.","orthogonal"],
    ["MIT LEC 14: \nA rowspace of matrix A (i.e. C(A^T)) is o.. (⊥) to the nullspace of A (i.e. N(A)). \nMoreover, nullspace and rowspace are o.. complement in R^n, meaning that the nullspace contains ALL vectors that are ⊥ to its rowspace.\n\nFill in the missing words.","orthogonal"],
    ["MIT LEC 14: \nA rowspace of matrix A (i.e. C(A^T)) is orthogonal (⊥) to the nullspace of A (i.e. N(A)). \nMoreover, nullspace and rowspace are orthogonal c.. in R^n, meaning that the nullspace contains a.. vectors that are ⊥ to its rowspace.\n\nFill in the missing words.","complement all"],
    ["MIT LEC 14: \nFor mxn matrix A: A^T*A is s.. because (A^T*A)^T = A^T*A. And it is s.. because nxm*mxn = nxn","symmetric square"],
    ["MIT LEC 14: \nFor mxn matrix A: A^T*A is s.. because (A^T*A)^T = A^T*A. And it is s.. because nxm*mxn = nxn","symmetric square"],
    ["MIT LEC 15: \nIf Ax=b has no solution, we can use A^T*A*x=A^T*b to find the best solution for x. \nIn fact, we calculate projection of vector x, whereby this projection = p=A*x_best and we define matrix P=A*(A^T*A)^-1*A^T so that p=...*b.\n\nFill in the dots(1x).","P"],
    ["MIT LEC 15: \nIf Ax=b has no solution, we can use A^T*A*x=A^T*b to find the best solution for x. \nIn fact, we calculate projection of vector x, whereby this projection = p=A*x_best and we define matrix P=A*(A^T*A)^-1*A^T so that p=P*... .\n\nFill in the dots(1x).","b"],
    ["MIT LEC 15: \nIf Ax=b has no solution, we can use A^T*A*x=A^T*b to find the best solution for x. \nIn fact, we calculate projection of vector x, whereby this projection = p=A*x_best and we define matrix P=A*(A^T*A)^-1*A^T so that ...=P*b.\n\nFill in the dots(1x).","p"],
    ["MIT LEC 15: \nIf Ax=b has no solution, we can use A^T*A*x=A^T*b to find the best solution for x. \nIn fact, we calculate projection of vector x, whereby this projection = p=A*x_best and we define matrix P=A*(A^T*A)^-1*A^T so that p=...*b.\n\nFill in the dots(1x).","P"],
    ["MIT LEC 15: \nIf Ax=b has no solution, we can use A^T*A*x=A^T*b to find the best solution for x. \nIn fact, we calculate projection of vector x, whereby this projection = p=A*x_best and we define matrix P=A*(A^T*A)^-1*A^T so that p=P*... .\n\nFill in the dots(1x).","b"],
    ["MIT LEC 15: \nIf Ax=b has no solution, we can use A^T*A*x=A^T*b to find the best solution for x. \nIn fact, we calculate projection of vector x, whereby this projection = p=A*x_best and we define matrix P=A*(A^T*A)^-1*A^T so that ...=P*b.\n\nFill in the dots(1x).","p"],
    ["MIT LEC 16: \nA^T*A is always s.. and positive definite, and if the cols are independent, it is also i.. .\n\nFill in the dots (2x).","symmetric invertible"],
    ["MIT LEC 16: \nA^T*A is always symmetric and p.. d.., and if the cols are independent, it is also i.. .\n\nFill in the dots (3x).","positive definite invertible"],
    ["MIT LEC 16: \nA^T*A is always symmetric and positive d.., and if the c.. are independent, it is also invertible.\n\nFill in the dots (2x).","definite columns"],
    ["MIT LEC 16: \nMatrix A is i.. if the nullspace (i.e. N(A)) of A = {0}.\n\nFill in the dots (1x).","invertible"],
    ["MIT LEC 16: \nMatrix A is i.. if the nullspace (i.e. N(A)) of A = {0}.\n\nFill in the dots (1x).","invertible"],
    ["MIT LEC 17: \nIf Q is a matrix with o.. vectors q_i then: Q^T*Q=I.\n\nFill in the dots (1x).","orthonormal"],
    ["MIT LEC 17: \nIf we have o.. basis vectors, then the projection on the i-th basis vector is just: q_i^T*b.","orthonormal"],
    ["MIT LEC 17: \nThe goal of the Gram-Schmidt algorithm is to make a matrix A o.. = to make columns o.. . Whereby A=Q*R . Fill in the dots (2x)","orthogonal orthonormal"],
    ["MIT LEC 18: \nA d.. is a number associated with a s..matrix that packs in it as much info about that matrix as possible.\n\nFill in the dots (2x).","determinant square"],
    ["MIT LEC 18: \nAbout determinants of square matrices A, i.e. det A or |A|: \nA is i.. if det A not 0. A is singular if det A = ... .\n\nFill in the dots (2x).","invertible 0"],
    ["MIT LEC 18: \nAbout determinants of s.. matrices A, i.e. det A or |A|: \nA is invertible if det A≠0. A is s.. if det A=0.\n\nFill in the dots (2x).","square singular"],
    ["MIT LEC 18: \nAbout determinants of square matrices A, i.e. det A or |A|: \nA is i.. if det A≠0. A is singular if det A=... .\n\nFill in the dots (2x).","invertible 0"],
    ["MIT LEC 18: \nAbout determinants of square matrices A, i.e. det A or |A|: \nA is invertible if det A≠... . A is singular is det A=... .\n\nFill in the dots (2x).","0 0"],
    ["MIT LEC 18: \n10 properties of determinants: det ... = 1. Row exchanges changes its sign. It is l.. for each row separately. If there are 2 equal rows, then det=0. \nSubtraction of a row from another one does not change det. Row of z.. => det=0. Det U= product of pivots. \nDet A=0 if A singular. Det A≠0 if A invertible. Det ... = DetA*DetB. Det A^T=det A.\n\nFill in the dots (4x).","I linear zeros A*B"],
    ["MIT LEC 18: \n10 properties of determinants: det I = 1. Row exchanges changes its s.. . It is linear for each row separately. If there are 2 e.. rows, then det=0. \nSubtraction of a ... from another one does not change det. Row of zeros => det=0. Det U= product of pivots. \nDet A=0 if A singular. Det A≠... if A invertible. Det A*B = DetA*DetB. Det A^T=det A.\n\nFill in the dots (4x).","sign equal row 0"],
    ["MIT LEC 18: \n10 properties of determinants: det I = 1. Row exchanges changes its sign. It is linear for each row separately. If there are 2 equal rows, then det=0. \nSubtraction of a row from another one does not change det. Row of zeros => det=0. Det U= product of p.. . \nDet A=0 if A s.. . Det A≠0 if A i.. . Det A*B = DetA*DetB. Det A^T=det ... .\n\nFill in the dots (4x).","pivots singular invertible A"],
    ["MIT LEC 18: \nLet's say A is an nxn matrix: Det(...) = (Det A)^2. And also: Det(2A) = 2^n det(...). \nTherefore, you may view an nxn matrix as a box, because, if you double its sides, its volume gets multiplied by 2^n.\n\nFill in the dots (2x).","A^2 A"],
    ["MIT LEC 18: \nLet's say A is an nxn matrix: Det(A^2) = (Det A)^... . And also: Det(2A) = 2^n det(A). \nTherefore, you may view an nxn matrix as a box, because, if you double its sides, its volume gets multiplied by ... .\n\nFill in the dots (2x).","A 2^n"],
    ["MIT LEC 19: \nThe formula for calculating the determinant of an nxn matrix is a sum of ... terms.","n!"],
    ["MIT LEC 19: \nThe formula for calculating the determinant of an nxn matrix A (i.e. |A|)is a sum of ... terms. \nAnd this a sequence of both positive and negative terms.","n!"],
    ["MIT LEC 19: \nA cofactor of a (square) matrix A is the determinant of the block formed by deleting the col/row of its factor. \nIf you have a 3x3 matrix A, then det(A) (i.e. |A|) = a_11*(a_22*a_33-a_23*a_32) - a_12*(a_21*a_33-a_23*a_31) + a_13*(a_21*a_32-a_22*a_31). In the 2nd term of this |A|, the factor is ... .\n\nFill in the dots.","minor a_12"],
    ["MIT LEC 19: \nA cofactor of a (square) matrix A is the determinant of the block formed by deleting the col/row of its factor. \nIf you have a 3x3 matrix A, then det(A) (i.e. |A|) = a_11*(a_22*a_33-a_23*a_32) - a_12*(a_21*a_33-a_23*a_31) + a_13*(a_21*a_32-a_22*a_31). In the 3rd term of this |A|, the cofactor is ... .\n\nFill in the dots.","a_21*a_32-a_22*a_31"],
    ["MIT LEC 19: \nA minor of an nxn matrix A can be seen as the d.. of the square matrix formed by the first n-1 rows and cols of A.\n\nFill in the dots.","determinant"],
    ["MIT LEC 19: \nTridiagonal matrices are filled with zeros, except that it also has ones on 3 diagonals: those starting from a_11, a_12 and a_21. \nThe formula for tridiagonal determinants: |A_n| = |...|-|A_n-2|.\n\nFill in the dots (1x).","A_n-1"],
    ["MIT LEC 20: \nFormula for inverses of matrices: A^-1 = 1/det(A)*(matrix of all cofactors)^T. E.g. for A_2 = [[a b],[c d]]. \nIts matrix of cofactors = [[cofac(a) cofac(b)],[cofac(c) cofac(d)]]. \nSo, [[a b],[c d]]^-1 = (1/(...))*[[... -b],[-c a]].\n\nFill in the dots (2x).","ad-bc d"],
    ["MIT LEC 20: \nFormula for inverses of matrices: A^-1 = 1/det(A)*(matrix of all cofactors)^T. E.g. for A_2 = [[a b],[c d]]. \nIts matrix of cofactors = [[cofac(a) cofac(b)],[cofac(c) cofac(d)]]. \nSo, [[a b],[c d]]^-1 = (1/(...))*[[d ...],[-c a]].\n\nFill in the dots (2x).","ad-bc -b"],
    ["MIT LEC 20: \nFormula for inverses of matrices: A^-1 = 1/det(A)*(matrix of all cofactors)^T. E.g. for A_2 = [[a b],[c d]]. \nIts matrix of cofactors = [[cofac(a) cofac(b)],[cofac(c) cofac(d)]]. \nSo, [[a b],[c d]]^-1 = (1/(...))*[[d -b],[... a]].\n\nFill in the dots (2x).","ad-bc -c"],
    ["MIT LEC 20: \nFormula for inverses of matrices: A^-1 = 1/det(A)*(matrix of all cofactors)^T. E.g. for A_2 = [[a b],[c d]]. \nIts matrix of cofactors = [[cofac(a) cofac(b)],[cofac(c) cofac(d)]]. \nSo, [[a b],[c d]]^-1 = (1/(...))*[[d -b],[-c ...]].\n\nFill in the dots (2x).","ad-bc a"],
    ["MIT LEC 20: \nIf we want to solve A*x=b, we can find x, by: x = A^-1 * b = 1/det(A)*(matrix of all c..)^T*b. Alternatively, we can use c.. r.. .\n\nFill in the dots (3x).","cofactors cramers rule"],
    ["MIT LEC 20: \nIf we want to solve A*x=b, we can find x, by: x = A^-1 * b = 1/det(A)*(matrix of all c..)^T*b. Alternatively, we can use c.. r.. .\n\nFill in the dots (3x).","cofactors cramers rule"],
    ["MIT LEC 20: \nIf we want to solve A*x=b, we could use c.. rule to find each x_i seperately: x_i = det(B_i)/det(A), whereby B_i = A with col i replaced by ... .\n\nFill in the dots (2x).","cramer's b"],
    ["MIT LEC 20: \nIf we want to solve A*x=b, we could use Cramers rule to find each x_i seperately: x_i = det(...)/det(A), whereby B_i = A with ... i replaced by b.\n\nFill in the dots (2x).","B_i col"],
    ["MIT LEC 20: \nIf we want to solve A*x=b, we could use Cramers rule to find each x_i seperately: x_i = det(B_i)/... , whereby B_i = A with col i replaced by ... .\n\nFill in the dots (2x).","det(A) b"],
    ["MIT LEC 20: \nIf we want to solve A*x=b, we could use c.. rule to find each x_i seperately: \nx_i = det(B_i)/det(A), whereby ... = A with col i replaced by b.\n\nFill in the dots (2x).","cramer's B_i"],
    ["MIT LEC 20: \nIf a 3x3 matrix A contains 3 vectors that span R^3, then the parallepiped formed by those vectors is a box with volume ... . \nE.g. if A=I, then this box is a unit cube and |det(A)|=1. \nAnd if you double a vector, A's ... also doubles.\n\nFill in the dots (2x).","|det(A)| volume"],
    ["MIT LEC 20: \nIf a 3x3 matrix A contains 3 vectors that span R^3, then the parallepiped formed by those vectors is a box with volume |det(A)|. \nE.g. if A=I, then this box is a unit c.. and |det(A)|=1. \nAnd if you double a vector, A's ... also doubles.\n\nFill in the dots (2x).","cube volume"],
    ["MIT LEC 21: \nIf you multiply A*x, then if the resultant vectors are in the same direction as x (parallel), then vectors x are the e.. of A. \nFurthermore, if Ax=λx, then λ is an eigenvalue. \nAnd if A singular (i.e. noninvertible) then λ=... is an eigenvalue of A.\n\nFill in the dots (2x).","eigenvectors 0"],
    ["MIT LEC 21: \nIf you multiply A*x, then if the resultant vectors are in the same direction as x (parallel), then vectors x are the eigenvectors of A. \nFurthermore, if Ax=λx, then λ is an e.. . \nAnd if A s.. (i.e. noninvertible) then λ=0 is an eigenvalue of A.\n\nFill in the dots (2x).","eigenvalue singular"],
    ["MIT LEC 21: \nIf you multiply A*x, then if the resultant vectors are in the same direction as x (parallel), then vectors x are the eigenvectors of ... . \nFurthermore,if Ax=λx, then λ is an eigenvalue. \nAnd if A singular (i.e. noninvertible) then λ=... is an eigenvalue of A.\n\nFill in the dots (2x).","A 0"],
    ["MIT LEC 21: \nFor a projection matrix P: For any x in the plane (that you project on): P*x=x, because their projection is itself, therefore λ=... . \nBut for any x ⊥ to the plane: ...x=0, therefore λ=0.\n\nFill in the dots (2x).","0 P"],
    ["MIT LEC 21: \nFor a projection matrix P: For any x in the plane (that you project on): ...*x=x, because their projection is itself, therefore λ=1. \nBut for any x ⊥ to the plane: Px=0, therefore λ=... .\n\nFill in the dots (2x).","P 0"],
    ["MIT LEC 21: \nnxn matrices have ... eigenvalues (i.e. λ's). And the sum of its λ's = ...(A) = a_11 + a_22 + a_33 + . + a_nn.\n\nFill in the dots (2x).","n trace"],
    ["MIT LEC 21: \nnxn matrices have n e.. (i.e. λ's). And the sum of its λ's = ...(A) = a_11 + a_22 + a_33 + . + a_nn.\n\nFill in the dots (2x).","eigenvalues trace"],
    ["MIT LEC 21: \ndeterminants, eigenvalues and eigenvectors only apply to matrices that are s..","square"],
    ["MIT LEC 21: \nHow to find eigenvalues and eigenvectors: we need to solve ...=λx. \nSo we rewrite as: (A-λI)x=0. A-λI must be singular (noninvertible) otherwise ...(A-λI) would be {0} and the only x would be the zero vector. Singular => ...(A-λI)=0, which is the characteristic eq, and we'll need to find λ first.\n\nFill in the dots (3x).","Ax N det"],
    ["MIT LEC 21: \nHow to find eigenvalues and eigenvectors: we need to solve Ax=λ... . \nSo we rewrite as: (A-λI)x=0. A-λI must be s.. (noninvertible) otherwise N(A-λI) would be {0} and the only x would be the zero vector => det(A-λI)=0, which is the c.. equation, and we'll need to find λ first.\n\nFill in the dots (3x).","x singular characteristic"],
    ["MIT LEC 21: \nHow to find eigenvalues and eigenvectors: we need to solve Ax=λx. \nSo we rewrite as: (A-λI)x=... . A-λI must be singular (i.e. n..) otherwise N(A-λI) would be {0} and the only x would be the zero vector. \nSingular => det(A-λ...)=0, which is the characteristic eq, and we'll need to find λ first.\n\nFill in the dots (3x).","0 noninvertible I"],
    ["MIT LEC 21: \nLet's calculate the eigenvals of: matrix A=[[3 1],[1 3]]. \nWe use charac eq: ...(A-λI)=0 => |[[(3-λ) 1],[1 (3-λ)]]|=0 => (3-λ)^2 -... =0 => λ_1=4 and λ_2=2.\n\nFill in the dots (2x).","det 1"],
    ["MIT LEC 21: \nLet's calculate the eigenvals of: matrix A=[[3 1],[1 3]]. \nWe use charac eq: det(...-λI)=0 => |[[(3-λ) 1],[1 (3-λ)]]|=0 => (...-λ)^2 -1 =0 => λ_1=4 and λ_2=2.\n\nFill in the dots (2x).","A 3"],
    ["MIT LEC 21: \nLet's calculate the eigenvals of: matrix A=[[3 1],[1 3]]. \nWe use charac eq: det(A-λ...)=0 => |[[(3-λ) 1],[1 (3-λ)]]|=0 => (3-λ)^... -1 =0 => λ_1=4 and λ_2=2.\n\nFill in the dots (2x).","I 2"],
    ["MIT LEC 21: \nLet's calculate the eigenvals of: matrix A=[[3 1],[1 3]]. \nWe use charac eq: det(A-λI)=... => |[[(3-λ) 1],[... (3-λ)]]|=0 => (3-λ)^2 -1 =0 => λ_1=4 and λ_2=2.\n\nFill in the dots (2x).","0 1"],
    ["MIT LEC 21: \nIf a matrix A is s.., then its eigenvals (i.e. λ's) are r.. valued. \nFurthermore, ...(A)=λ_1+..+λ_n and ...(A)=λ_1*..*λ_n.\n\nFill in the dots (4x).","symmetric real trace det"],
    ["MIT LEC 21: \nIf a matrix A is s.., then its eigenvals (i.e. λ's) are r.. valued. \nFurthermore, ...(A)=λ_1+..+λ_n and ...(A)=λ_1*..*λ_n.\n\nFill in the dots (4x).","symmetric real trace det"],
    ["MIT LEC 21: \nIf a matrix A is s.., then its eigenvals (i.e. λ's) are r.. valued. \nFurthermore, ...(A)=λ_1+..+λ_n and ...(A)=λ_1*..*λ_n.\n\nFill in the dots (4x).","symmetric real trace det"],
    ["MIT LEC 21: \nIf a matrix A is s.., then its eigenvals (i.e. λ's) are r.. valued. \nFurthermore, ...(A)=λ_1+..+λ_n and ...(A)=λ_1*..*λ_n.\n\nFill in the dots (4x).","symmetric real trace det"],
    ["MIT LEC 21: \nIf you add 3I to a matrix then its eigenvectors do not change, whereas its eigenvalues (λ) become ... times bigger.\n\nFill in the dots (1x).","3"],
    ["MIT LEC 21: \nIf you add ... to a matrix then its eigenvectors do not change, whereas its eigenvalues (λ) become 3 times bigger.\n\nFill in the dots (1x).","3I"],
    ["MIT LEC 21: \nThe matrix A=[[0 -1],[1 0]] is a vector that rotates every vector by ... degrees. \nIts columns are orthonormal, therefore it is also an o.. matrix, which we indicate with the letter Q . \nAnd furthermore, because A is a..., its eigenvalues are complex (i and -i).\n\nFill in the dots (3x).","90 orthogonal antisymmetric"],
    ["MIT LEC 21: \nThe matrix A=[[0 -1],[1 0]] is a vector that rotates every vector by 90 degrees. \nIts columns are o.., therefore it is also an orthogonal matrix, which we indicate with the letter ... . \nAnd furthermore, for asymmetric matrices (and especially for antisymmetric matrices such as A) its eigenvalues are c.. (i and -i for A).\n\nFill in the dots (3x).","orthonormal Q complex"],
    ["MIT LEC 21: \nFor triangular matrices, the eigenvalues are the d.. . \nE.g. for A=[[3 1],[0 5]] eigenvals λ_1=3 and λ_2=5.\n\nFill in the dots.","diagonals"],
    ["MIT LEC 21: \nFor triangular matrices, the eigenvalues are the d.. . \nE.g. for A=[[3 1],[0 5]] eigenvals λ_1=3 and λ_2=5.\n\nFill in the dots.","diagonals"],
    ["MIT LEC 21: \nFor triangular matrices, the eigenvalues are the d.. . \nE.g. for A=[[3 1],[0 5]] eigenvals λ_1=3 and λ_2=5.\n\nFill in the dots.","diagonals"],
    ["MIT LEC 21: \nFor triangular matrices, the eigenvalues are the diagonals. \nBut if you have A=[[3 1],[0 3]] then eigenvals λ_1 and λ_2 are both 3, resulting in a shortage of (independent) e.. . \nSuch a matrix, which has repeated eigenvectors is called: d.. .\n\nFill in the dots (2x).","eigenvectors degenerate"],
    ["MIT LEC 21: \nFor triangular matrices, the eigenvalues are the diagonals. \nBut if you have A=[[3 1],[0 3]] then eigenvals λ_1 and λ_2 are both 3, resulting in a shortage of (independent) e.. . \nSuch a matrix, which has repeated eigenvectors is called: d.. .\n\nFill in the dots (2x).","eigenvectors degenerate"],
    ["MIT LEC 22: \nIf S is the ...matrix of A (i.e. [x_1 . x_n]), then we can diagonalize A using: S^-1*A*...=Λ where Λ is A's eigenvalue matrix (with A's λ_i's on the diagonal). \nWe can use this to find out if matrices are s.., which is when their powers A^k=S*Λ^k*S^-1 go to zero.\n\nFill in the dots (3x).","eigenvector S stable"],
    ["MIT LEC 22: \nIf S is the eigenvectormatrix of A (i.e. [x_1 . x_n]), then we can diagonalize A using: S^-1*A*S=Λ where Λ is A's e.. matrix (with A's λ_i's on the d..). \nWe can use this to find out if matrices are stable, which occurs when all |λ_i|<1 so that A^k=S*Λ^k*S^-1 (powers of A) go to z.. .\n\nFill in the dots (3x).","eigenvalue diagonal zero"],
    ["MIT LEC 22: \nWe can solve a system of ... order diff eqs (matrix A) with the difference equation with u_k+1 = A*u_k. \nWe start with initial vector u_0=S*c (S=eigenvecs, c=constants) and we obtain u_k=...*u_0 (=a system). E.g. at step k=100 we have: u_100=A^100*u_0=Λ^100*S*c.\n\nFill in the dots (2x).","first A^k"],
    ["MIT LEC 22: \nWe can solve a system of 1st order diff eqs (matrix A) with the difference equation with u_k+1 = A*... . \nWe start with initial vector u_0=S*c (S=eigenvecs, c=constants) and we obtain u_k=A^k*u_0 (=a system). E.g. at step k=100 we have: u_100=A^100*u_0=Λ^100*...*c.\n\nFill in the dots (2x).","u_k S"],
    ["MIT LEC 22: \nAx=b is a static problem, whereas we have a ... problem once we use difference equations, such as u_k+1 = A*u_k (for a system of 1st order diff eqs).\n\nFill in the dots (1x).","dynamic"],
    ["MIT LEC 22: \nAx=b is a ... problem, whereas we have a dynamic problem once we use difference equations, such as u_k+1 = A*u_k (for a system of ... order diff eqs).\n\nFill in the dots (2x).","static first"],
    ["MIT LEC 22: \nAx=λx => A^2*x=λ*A*x=λ^2*x => the e.. of A^2 are λ^2 and the e.. of A^2 are the same as of A.\n\nFill in the dots (2x).","eigenvalues eigenvectors"],
    ["MIT LEC 22: \nAx=λx => A^2*x=λ*A*x=λ^2*x => the eigenvals of ... are λ^2 and the eigenvectors of A^2 are the same as of ... (2x).\n\nFill in the dots.","A^2 A"],
    ["MIT LEC 23: \nd.. nxn matrices cannot be d.. because they have less than n eigenvectors, and are thus not invertible.\n\nFill in the dots (2x).","degenerate diagonalized"],
    ["MIT LEC 23: \nd.. nxn matrices cannot be d.. because they have less than n eigenvectors, and are thus not invertible.\n\nFill in the dots (2x).","degenerate diagonalized"],
    ["MIT LEC 23: \nIf we have 2 (1st order) diff eqs: du_1/dt=-u_1+2*u_2; and du_2/dt=u_1-2*u_2. \nThen we can summarize this as: du/dt=A*u, with A=[[-1 2],[1 -2]]. \nA has d.. rows => A is singular => λ_1=0 and because sum(λ_i)=trace(A), we obtain: λ_2=... . Because this matrix is not degenerate, we can uncouple it with u=Sv, so that matrix exponential: e^At=I+At+((At)^2)/2+((At)^3)/6+.+. becomes: S*(e^Λ*t)*S^-1, which goes to zero when Re(λ_i)...0.\n\nFill in the dots (3x).","dependent -3 <"],
    ["MIT LEC 23: \nIf we have 2 (1st order) diff eqs: du_1/dt=-u_1+2*u_2; and du_2/dt=u_1-2*u_2. \nThen we can summarize this as: du/dt=A*u, with A=[[-1 2],[1 -2]]. \nA has dependent rows => A is s.. => λ_1=0 and because sum(λ_i)=t..(A), we obtain: λ_2=-3. Because this matrix is not degenerate, we can uncouple it with u=Sv, so that matrix exponential: e^At=I+At+((At)^2)/2+((At)^3)/6+.+. becomes: S*(e^Λ*t)*S^-1, which goes to zero when ...(λ_i)<0.\n\nFill in the dots (3x).","singular trace Re"],
    ["MIT LEC 24: \nA m.. matrix has by definition all entries ≥ 0 and all cols add to 1. \nThey have an eigenvalue 1, which is required for power matrices to be steady state. \nAnd powers of A are themselves also m.. matrices.\n\nFill in the missing word (1x).","markov"],
    ["MIT LEC 24: \nA m.. matrix has by definition all entries ≥ 0 and all cols add to 1. \nThey have an eigenvalue 1, which is required for power matrices to be steady state. \nAnd powers of A are themselves also m.. matrices.\n\nFill in the missing word (1x).","markov"],
    ["MIT LEC 25: \nUsually we have an nxn matrix A with n different eigenvals => n indep eigenvecs (=> invertible) => diagonalizable: A=S*Λ*S^-1 (with S=eigenvec matrix, Λ=eigenval matrix). \nBut in case A s..: => eigenvecs are orthonormal cols => A=Q*Λ*Q^-1 => (because Q^-1=Q^T) Factorization of a symm matrix: A=Q*Λ*... . This is also called the 's.. theorem', or in mechanics the 'principal axis theorem'.\n\nFill in the dots (3x).","symmetric Q^T spectral"],
    ["MIT LEC 25: \nUsually we have an nxn matrix A with n different eigenvals => n i.. eigenvecs (=> invertible) => diagonalizable: A=S*Λ*S^-1 (with S=eigenvec matrix, Λ=eigenval matrix). \nBut in case A symmetric: => eigenvecs are o.. cols => A=Q*Λ*Q^-1 => (because Q^-1=Q^T) Factorization of a symm matrix: A=Q*Λ*Q^T. This is also called the 'spectral theorem', or in mechanics the 'principal a.. theorem'.\n\nFill in the dots (3x).","independent orthonormal axis"],
    ["MIT LEC 25: \nThe most important class of matrices are the ... matrices: A=A^T. \nTheir eigenvals are r.., and their eigenvectors are p.. . \nMoreover, A=Q*Λ*Q^T, which accounts for the spectral theorem, with spectrum= the set of eigenvals of a matrix.\n\nFill in the dots (3x).","symmetric real perpendicular"],
    ["MIT LEC 25: \nThe most important class of matrices are the symmetric matrices: A=A^T. \nTheir e.. are real, and their e.. are perpendicular. \nMoreover, A=Q*Λ*Q^T, which accounts for the s.. theorem, with spectrum= the set of eigenvals of a matrix.\n\nFill in the dots (3x).","eigenvalues eigenvectors spectral"],
    ["MIT LEC 25: \nFor any symmetric matrix A: The ... of its pivots = the same as that for its eigenvals (λs).\n\nFill in the 3 words you could\n\nFill in the dots: s.. n.. p.. .","signs number product"],
    ["MIT LEC 25: \nFor any symmetric matrix A: The ... of its pivots = the same as that for its eigenvals (λs).\n\nFill in the 3 words you could\n\nFill in the dots: s.. n.. p.. .","signs number product"],
    ["MIT LEC 25: \nSymmetric matrices are good matrices, because they have real eigenvals and perpendicular eigenvectors. \nBut positive definite matrices are even better symmetric matrices because they have e.., p.., and (sub)d.. all positive!\n\nFill in the dots (3x).","eigenvalues pivots determinants"],
    ["MIT LEC 25: \nSymmetric matrices are good matrices, because they have r.. eigenvals and p.. eigenvectors. \nBut positive definite matrices are even better symmetric matrices because they have eigenvalues, pivots, and (sub)determinants all p..!\n\nFill in the dots (3x).","real perpendicular positive"],
    ["MIT LEC 26: \nComplex matrices (with vals a+b*i) are called 'Hermitian' if they correspond to symmetry in this way: A = A^H = A_c..^T. \nThey have real diagonals, real eigenvals and perpendic eigenvecs (as all symm matrices have). An example of an Hermitian matrix is: [[2 3+i],[3...i 5]].\n\nFill in the dots (2x).","conjugate -"],
    ["MIT LEC 26: \nComplex matrices (with vals a+b*i) are called 'Hermitian' if they correspond to s.. in this way: A = A^H = A_conjugate^T. \nThey have real diagonals, real eigenvals and perpendic eigenvecs (as all symm matrices have). An example of an Hermitian matrix is: [[2 ...+i],[3-i 5]].\n\nFill in the dots (2x).","symmetry 3"],
    ["MIT LEC 26: \nFor orthogonal matrices we have: Q^...*Q=I . \nBut if we take complex vectors we obtain: Q^...*Q=I which is orthogonal unitary (calculated by remembering there is a conjugate and a transposed vector)\nThis can be used to make Fourier calculations much faster since you can break the matrices up into pieces with lots of z.. .\n\nFill in the dots (3x).","T H zeros"],
    ["MIT LEC 26: \nFor orthogonal matrices we have: Q^...*Q=I . \nBut if we take c.. vectors we obtain: Q^H*Q=I which is orthogonal unitary (calculated by remembering there is a conjugate and a transposed vector). \nThis can be used to make Fourier calculations much faster since you can break the matrices up into pieces with lots of z.. .\n\nFill in the dots (3x).","T complex zeros"],
    ["MIT LEC 27: \nThere are 4 different ways to test if a (symmetric) matrix A is positive definite: \n(1) e.. test: all λ_i>0 \n(2) (sub)d.. test: Det(A)>0 and Det(A_minors)>0 \n(3) p.. a>0 and a*c-b^2/a >0 \n(4) ...*A*X>0.\n\nFill in the dots (4x).","eigenvalues determinants pivots X^T"],
    ["MIT LEC 27: \nThere are 4 different ways to test if a (symmetric) matrix A is positive definite: \n(1) e.. test: all λ_i>0 \n(2) (sub)d.. test: Det(A)>0 and Det(A_minors)>0 \n(3) p.. a>0 and a*c-b^2/a >0 \n(4) ...*A*X>0.\n\nFill in the dots (4x).","eigenvalues determinants pivots X^T"],
    ["MIT LEC 27: \nThere are 4 different ways to test if a (symmetric) matrix A is positive definite: \n(1) e.. test: all λ_i>0 \n(2) (sub)d.. test: Det(A)>0 and Det(A_minors)>0 \n(3) p.. a>0 and a*c-b^2/a >0 \n(4) ...*A*X>0.\n\nFill in the dots (4x).","eigenvalues determinants pivots X^T"],
    ["MIT LEC 27: \nThere are 4 different ways to test if a (symmetric) matrix A is positive definite: \n(1) e.. test: all λ_i>0 \n(2) (sub)d.. test: Det(A)>0 and Det(A_minors)>0 \n(3) p.. a>0 and a*c-b^2/a >0 \n(4) ...*A*X>0.\n\nFill in the dots (4x).","eigenvalues determinants pivots X^T"],
    ["MIT LEC 27: \nMatrix A = [[2 6],[6 18]] has dependent rows => s.. (i.e. noninvertible) => λ_1=0, and from ...=20 it follows that λ_1=20. \nA is symmetric so it would have been positive definite if λ_i>0, but because λ_1=0, A is positive s..definite.\n\nFill in the dots (3x).","singular trace semi"],
    ["MIT LEC 27: \nMatrix A = [[2 6],[6 18]] has dependent rows => s.. (i.e. noninvertible) => λ_1=0, and from ...=20 it follows that λ_1=20. \nA is symmetric so it would have been positive definite if λ_i>0, but because λ_1=0, A is positive s..definite.\n\nFill in the dots (3x).","singular trace semi"],
    ["MIT LEC 27: \nYou can check if a symmetric matrix A [[a b],[b c]] is positive definite, using: X^T*A*X>0. \nE.g. if A is 2x2, then we have X = [x ...]^T => X^T*A*X = ax^2 + 2bxy + cy^2. \nPositive definite means that the q.. terms overwhelm the other term, so that the function value is always positive.\n\nFill in the dots (2x).","y quadratic"],
    ["MIT LEC 27: \nYou can check if a symmetric matrix A [[a b],[b c]] is positive definite, using: X^T*A*X>0. \nE.g. if A is 2x2, then we have X = [x ...]^T => X^T*A*X = ax^2 + 2bxy + cy^2. \nPositive definite means that the q.. terms overwhelm the other term, so that the function value is always positive.\n\nFill in the dots (2x).","y quadratic"],
    ["MIT LEC 27: \n(Symmetric) Matrix A = [[2 6],[6 7]]. Its (minor)determinants are not all >0, A is therefore not positive definite. \nInto what minimum value should we change value 7 to obtain a positive definite matrix?\n\nFill in the dots.","19"],
    ["MIT LEC 27: \n(Symmetric) Matrix A = [[2 6],[6 7]]. Its (minor)determinants are not all >0, A is therefore not positive definite. \nInto what minimum value should we change value 7 to obtain a positive definite matrix?\n\nFill in the dots.","19"],
    ["MIT LEC 27: \n(Symmetric) Matrix A = [[2 6],[6 7]]. Its (minor)determinants are not all >0, A is therefore not positive definite. \nInto what value should we change value 7 to obtain a positive semidefinite matrix?\n\nFill in the dots.","18"],
    ["MIT LEC 27: \n(Symmetric) Matrix A = [[2 6],[6 7]]. Its (minor)determinants are not all >0, A is therefore not positive definite. \nInto what value should we change value 7 to obtain a positive semidefinite matrix?\n\nFill in the dots.","18"],
    ["MIT LEC 27: \nIn calculus you learned that to find a minimum for f(x), you take f'(x)=0 and f''(x) >0. \nWe can find the minimum of f(x_1,..,x_n) by demanding that the matrix of its 2nd derivatives (for x_1=x and x_2=y) [[f_xx f_xy],[f_yx f_yy]]) must be ... ... .\n\nFill in the dots (2x).","positive definite"],
    ["MIT LEC 27: \nIn calculus you learned that to find a minimum for f(x), you take f'(x)=0 and f''(x) >0. \nWe can find the minimum of f(x_1,..,x_n) by demanding that the matrix of its 2nd derivatives (for x_1=x and x_2=y) [[f_xx f_xy],[f_yx f_yy]]) must be ... ... .\n\nFill in the dots (2x).","positive definite"],
    ["MIT LEC 28: \nA^...*A is not only square and symmetric, it is also positive definite.\n\nFill in the dots.","T"],
    ["MIT LEC 28: \nA^T*A is not only square and symmetric, it is also p.. d.. .\n\nFill in the dots.","positive definite"],
    ["MIT LEC 28: \nEigenvals of A^... = 1/(eigenvals of A) => if A positive definite, then its inverse A^-1 is also positive definite. \n(because a test for positive definiteness is: all λ_i>...).\n\nFill in the dots (2x).","-1 0"],
    ["MIT LEC 28: \nEigenvals of A^... = 1/(eigenvals of A) => if A positive definite, then its inverse A^-1 is also positive definite. \n(because a test for positive definiteness is: all λ_i>...).\n\nFill in the dots (2x).","-1 0"],
    ["MIT LEC 28: \nIf A and B both positive definite matrices, then matrix M=A...B is also positive definite.\n\nFill in the dots (1x).","+"],
    ["MIT LEC 28: \nIf A and B both positive definite matrices, then matrix M=A...B is also positive definite.\n\nFill in the dots (1x).","+"],
    ["MIT LEC 28: \nMatrix A is similar to matrix B means: for some M we have B=M^...*A*M. \nSo, e.g. given that S^-1*A*S=Λ, we can say that A is similar to its e.. matrix Λ.\n\nFill in the dots (2x).","-1 eigenvalue"],
    ["MIT LEC 28: \nMatrix A is similar to matrix B means: for some M we have B=M^...*A*M. \nSo, e.g. given that S^-1*A*S=Λ, we can say that A is s.. to its eigenvalue matrix Λ.\n\nFill in the dots (2x).","-1 similar"],   
    ["MIT LEC 28: \nMatrix A = [[2 1],[1 2]] => Λ=... .\n\nFill in the eigenvalue matrix Λ.\n\nFill in the dots by calculating A's eigenvals and putting them on the diagonals of a matrix. \nUse the fact that A is symmetric => λ_1*λ_2=trace(A) and λ_1+λ_2=det(A)","[[3 0],[0 1]]"],
    ["MIT LEC 28: \nMatrix A = [[2 1],[1 2]] => Λ=... .\n\nFill in the eigenvalue matrix Λ.\n\nFill in the dots by calculating A's eigenvals and putting them on the diagonals of a matrix. \nUse the fact that A is symmetric => λ_1*λ_2=trace(A) and λ_1+λ_2=det(A)","[[3 0],[0 1]]"],
    ["MIT LEC 28: \nMatrix A = [[2 1],[1 2]] => Λ=... .\n\nFill in the eigenvalue matrix Λ.\n\nFill in the dots by calculating A's eigenvals and putting them on the diagonals of a matrix. \nUse the fact that A is symmetric => λ_1*λ_2=trace(A) and λ_1+λ_2=det(A)","[[3 0],[0 1]]"],
    ["MIT LEC 28: \nMatrix A = [[2 1],[1 2]] => Λ=... .\n\nFill in the eigenvalue matrix Λ.\n\nFill in the dots by calculating A's eigenvals and putting them on the diagonals of a matrix. \nUse the fact that A is symmetric => λ_1*λ_2=trace(A) and λ_1+λ_2=det(A)","[[3 0],[0 1]]"],
    ["MIT LEC 28: \nSimilar matrices have the same e.. and the same number of e... . \nMatrices that are similar, form a f.. of matrices.\n\nFill in the dots (3x).","eigenvalues eigenvectors family"],
    ["MIT LEC 28: \nSimilar matrices have the same e.. and the same number of e... . \nMatrices that are similar, form a family of matrices.\n\nFill in the dots (3x).","eigenvalues eigenvectors family"],
    ["MIT LEC 28: \nt.. matrices have their eigenvalues λ_i on the diagonals. \nE.g. the eigenvals of matrix [[3 7],[0 1]] are ... and ... .\n\nFill in the dots (3x).","triangular 3 1"],
    ["MIT LEC 28: \nTriangular matrices have their eigenvalues λ_i on the diagonals. \nSo the e.. of matrix [[... 7],[0 1]] are 3 and 1.\n\nFill in the dots (2x).","eigenvalues 3"],
    ["MIT LEC 28: \nJordan's theorem: each s.. matrix A is s.. to a Jordan matrix J. \nAnd J is a matrix that consists of # Jordan blocks on the diagonal, with #= number of e.. of A. \nIn the good case: J=Λ.\n\nFill in the dots (3x).","square similar eigenvectors"],
    ["MIT LEC 28: \nJordan's theorem: each s.. matrix A is s.. to a Jordan matrix J. \nAnd J is a matrix that consists of # Jordan blocks on the diagonal, with #= number of e.. of A. \nIn the good case: J=Λ.\n\nFill in the dots (3x).","square similar eigenvectors"],
    ["MIT LEC 29: \nAny matrix A whatsoever can be factorized with SVD: A=U*Σ*V^T, with U=orthogonal basis in the ... space, Σ=diagonal matrix, V=orthogonal basis in the ... space. \nSo in SVD we choose exactly the right bases for the 4 subspaces of LA (row,col,null-space of A and nullspace of A^T (i.e. left nullspace of A)). And these bases make A d..: A*v_i = σ_i*u_i so that there is no coupling between the v_i's and also no coupling between the u_i's.\n\nFill in the dots (3x).","column row diagonal"],
    ["MIT LEC 29: \nAny matrix A whatsoever can be factorized with SVD: A=U*Σ*V^..., with U=orthogonal basis in the column space, Σ=diagonal matrix, V=orthogonal basis in the ... space. \nSo in SVD we choose exactly the right bases for the 4 subspaces of LA (row,col,null-space of A and nullspace of A^T (i.e. left nullspace of A)). And these bases make A d..: A*v_i = σ_i*u_i so that there is no coupling between the v_i's and also no coupling between the u_i's.\n\nFill in the dots (3x).","T row diagonal"],
    ["MIT LEC 29: \nFor ... ... matrices we can simplify SVD factorization as: A=Q*Λ*Q^T, with Q=eigenvector matrix and Λ=eigenval matrix.\n\nFill in the dots (2x).","positive definite"],
    ["MIT LEC 29: \nFor positive definite matrices we can simplify ... factorization as: A=Q*Λ*Q^T, with Q=e.. matrix and Λ=eigenvalue matrix.\n\nFill in the dots (2x).","SVD eigenvector"],
    ["MIT LEC 30: \nTransformations T (i.e. Mappings) that are linear follow these rules: T(...)=T(v)+T(w) and T(...)=cT(v). \nE.g. if we define T(v)= norm of v= ||v|| =sqrt(<v,v>) then we obtain that T(-2*v)=||-2v|| is not ...*||v|| => no linear transformation. Whereas, rotation by 45deg, projection P, and d.. (T=d/dx) are examples of linear transformations.\n\nFill in the dots (4x).","v+w cv -2 derivative"],
    ["MIT LEC 30: \nTransformations T (i.e. Mappings) that are linear follow these rules: T(...)=T(v)+T(w) and T(...)=cT(v). \nE.g. if we define T(v)= norm of v= ||v|| =sqrt(<v,v>) then we obtain that T(-2*v)=||-2v|| is not ...*||v|| => no linear transformation. Whereas, rotation by 45deg, projection P, and d.. (T=d/dx) are examples of linear transformations.\n\nFill in the dots (4x).","v+w cv -2 derivative"],
    ["MIT LEC 31: \n(Video) compression is a change of ... that exploits correllations between subsequent images. \nE.g. wavelet basis compression can transform a pixel's standard basis, i.e. a grayscale value of 4 ones/zeros, into a wavelet basis consisting of 4 numbers that combine some of the vectors/wavelets in W, e.g.: W=[[1111]^T, [11-1-1]^T, [1-100]^T,[001-1]^T]. E.g. pixelval p=[1-11-1]^T could be written as a combi of the last 2 wavelets in W, i.e. p=W*c with c=[...]^T. If W's cols o.. => W^-1=W^T => fast compression.\n\nFill in the dots (3x).","basis 0011 orthogonal"],
    ["MIT LEC 31: \n(Video) compression is a change of ... that exploits correllations between subsequent images. \nE.g. wavelet basis compression can transform a pixel's standard basis, i.e. a grayscale value of 4 ones/zeros, into a wavelet basis consisting of 4 numbers that combine some of the vectors/wavelets in W, e.g.: W=[[1111]^T, [11-1-1]^T, [1-100]^T,[001-1]^T]. E.g. pixelval p=[1-11-1]^T could be written as a combi of the last 2 wavelets in W, i.e. p=W*c with c=[...]^T. If W's cols o.. => W^-1=W^T => fast compression.\n\nFill in the dots (3x).","basis 0011 orthogonal"],  
    ["MIT LEC 33: \nA matrix A is a nice invertible mapping from rowspace to col space => if the nullspaces keep out of the way, then we have an inverse and that inverse is called the ...inverse: A^+ . \nA^+ is the closest we can come to an inverse, and is much used by statisticians because they always do least squares=linear regression. A^+ can be found using ... factorization.\n\nFill in the dots (2x).","pseudo SVD"],
    ["MIT LEC 33: \nA matrix A is a nice invertible mapping from rowspace to col space => if the nullspaces keep out of the way, then we have an inverse and that inverse is called the pseudoinverse: A^... . \nThe pseudoinverse is the closest we can come to an inverse, and is much used by statisticians because they always do least squares=linear regression. The pseudoinverse can be found using ... factorization.\n\nFill in the dots (2x).","+ SVD"],
    ]


# COMBINE LISTS INTO LARGER LISTS AND ADD EXTRA LABEL
words_tr = words_tr_crim_1 + words_tr_course_1 + words_tr_cse_admin + words_tr_cse_general + words_tr_cse_network + words_tr_cse_maths + words_tr_course_2
words_ru = words_ru_alphabet + words_ru_vocab
words_sp = words_sp_pronouns + words_sp_vocab
hist = hist_early + hist_greece + hist_other + hist_islam
phil_aristotle = phil_aristotle_general + phil_aristotle_organon_general + phil_aristotle_organon_cat_1 + phil_aristotle_organon_cat_2 + phil_aristotle_organon_int_1 + phil_aristotle_organon_int_2 + phil_aristotle_organon_pri_1 + phil_aristotle_organon_pri_2  + phil_aristotle_organon_pos_1 + phil_aristotle_organon_pos_2 + phil_aristotle_organon_top + phil_aristotle_organon_soph + phil_aristotle_physics + phil_aristotle_metaphys
logic_basic = logic_propositional + logic_FOL 
mathem_logic = logic_set_theory + logic_computability_theory + logic_model_theory + logic_proof_theory

phil = phil_presoc + phil_plato_general + phil_arab + phil_scholast
krr = cse_krr_ch1_intro + cse_krr_ch2_FOL + cse_krr_ch3_expressing_knowledge + cse_krr_ch4_resolution + cse_krr_ch5_Horn_clauses 
neuro =  neuroscience

words_tr2 = []  # creates words_tr2 in which the order en-tr is reversed
order = [1,0]
for index in range(len(words_tr)):
    words_tr2.append([words_tr[index][i] for i in order])

maths = maths_linalg + mathem_logic
cse = logic_basic + logic_FOL + maths + cse_machine_learning + krr + cse_numerical_computation + cse_automata_theory + cse_encryption + cse_operating_systems + cse_linux_commands + cse_progr_lang_paradigms + cse_python + cse_c_plusplus
words_ch = words_ch_mandarin_pronouns + words_ch_mandarin_vocab 
words_ch_hanzi = words_ch_hanzi_1+words_ch_hanzi_2+words_ch_hanzi_3+words_ch_hanzi_4+words_ch_hanzi_5
words_ar = words_ar_alphabet + words_ar_pronouns + words_ar_vocab
words_ja = words_ja_hiragana + words_ja_pronouns + words_ja_hiragana_particles + words_ja_vocab
all_questions = cse + hist + phil + phil_aristotle + neuro + mechanics_applied + words_ar + words_ru + words_ja + words_ch + words_sp + words_tr2


for item in cse_machine_learning: 
    item[0] = 'Computer Science (Machine Learning):  \n\n' + item[0]

for item in krr:
    item[0] = 'Artificial Intelligence (KRR):  \n\n' + item[0]

for item in cse_numerical_computation:
    item[0] = 'Computer Science (Numerical Computation):  \n\n' + item[0]

for item in cse_automata_theory:
    item[0] = 'Computer Science (Automata Theory):  \n\n' + item[0]

for item in cse_encryption:
    item[0] = 'Computer Science (Encryption):  \n\n' + item[0]

for item in cse_operating_systems:
    item[0] = 'Computer Science (Operating Systems):  \n\n' + item[0]

for item in cse_linux_commands:
    item[0] = 'Computer Science:  \n\n' + item[0]

for item in cse_progr_lang_paradigms:
    item[0] = 'Computer Science:  \n\n' + item[0] 

for item in cse_python:
    item[0] = 'Computer Science:  \n\n' + item[0]
    
for item in cse_c_plusplus:
    item[0] = 'Computer Science:  \n\n' + item[0]
    
for item in neuro:    
    item[0] = 'Neuroscience: \n\n' + item[0]
    
for item in hist:    
    item[0] = 'History: \n\n' + item[0]

for item in phil:    
    item[0] = 'Philosophy:  \n\n' + item[0]

for item in phil_aristotle:    
    item[0] = 'Philosophy (Aristotle):  \n\n' + item[0]    

for item in maths_linalg:    
    item[0] = 'Mathematics (Linear Algebra):  \n\n' + item[0]

for item in logic_propositional:    
    item[0] = 'Propositional Logic:  \n\n' + item[0]

for item in logic_FOL:    
    item[0] = 'First Order Logic (FOL):  \n\n' + item[0]

for item in logic_set_theory:    
    item[0] = 'Mathematical Logic (Set Theory):  \n\n' + item[0]

for item in logic_computability_theory:    
    item[0] = 'Mathematical Logic (Computability/Recursion Theory):  \n\n' + item[0]

for item in logic_model_theory:    
    item[0] = 'Mathematical Logic (Model Theory):  \n\n' + item[0]

for item in logic_proof_theory:    
    item[0] = 'Mathematical Logic (Proof Theory):  \n\n' + item[0]

for item in mechanics_applied:    
    item[0] = 'Applied Mechanics:  \n\n' + item[0]






 
for item in words_tr2:    
    item[0] = 'Translate from Turkish:  \n\n' + item[0]

for item in words_sp:    
    item[0] = 'Translate from Spanish:  \n\n' + item[0]

for item in words_ar_alphabet:    
    item[0] = 'Write the name of these Arabic letters:  \n\n' + item[0]

for item in words_ar_pronouns: 
    item[0] = 'Translate from Arabic (pronouns):  \n\n' + item[0]

for item in words_ar_vocab:    
    item[0] = 'Translate from Arabic:  \n\n' + item[0]

for item in  words_ch_mandarin_pronouns:    
    item[0] = 'Translate from Mandarin Chinese (pronouns):  \n\n' + item[0]

for item in  words_ch_mandarin_vocab:    
    item[0] = 'Translate from Mandarin Chinese:  \n\n' + item[0]

for item in words_ch_hanzi:    
    item[0] = 'Translate this Hanzi symbol (word) from Mandarin Chinese to English:  \n\n' + item[0]

for item in words_ja_hiragana:    
    item[0] = 'Write the pronunciation of these Japanese Hiragana (letters): \n\n' + item[0]

for item in words_ja_hiragana_particles:    
    item[0] = 'Japanese Particles: Write the pronunciation of the appropriate Japanese Hiragana (letter):  \n\n' + item[0]

for item in words_ja_pronouns:    
    item[0] = 'Translate from Japanese (pronouns):  \n\n' + item[0]

for item in words_ja_vocab:    
    item[0] = 'Translate from Japanese:  \n\n' + item[0]

for item in words_ru_alphabet:    
    item[0] = 'Write the name (pronunciation) of these Russian (Cyrillic) letters:  \n\n' + item[0]

for item in words_ru_vocab:    
    item[0] = 'Translate from Russian:  \n\n' + item[0]

